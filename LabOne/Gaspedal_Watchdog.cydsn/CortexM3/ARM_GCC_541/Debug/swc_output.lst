ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_output.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OUTPUT_setEngine_run,"ax",%progbits
  20              		.align	2
  21              		.global	OUTPUT_setEngine_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	OUTPUT_setEngine_run, %function
  25              	OUTPUT_setEngine_run:
  26              	.LFB165:
  27              		.file 1 "source\\asw\\swc_output.c"
   1:source\asw/swc_output.c **** /*
   2:source\asw/swc_output.c ****  * Filename: swc_output.c
   3:source\asw/swc_output.c ****  *
   4:source\asw/swc_output.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:source\asw/swc_output.c ****  *
   6:source\asw/swc_output.c ****  * description: engine and brakelights
   7:source\asw/swc_output.c ****  * name: swc_output
   8:source\asw/swc_output.c ****  * shortname: output
   9:source\asw/swc_output.c ****  *
  10:source\asw/swc_output.c ****  */
  11:source\asw/swc_output.c **** 
  12:source\asw/swc_output.c **** #include "project.h"
  13:source\asw/swc_output.c **** #include "global.h"
  14:source\asw/swc_output.c **** #include "rte.h"
  15:source\asw/swc_output.c **** #include "rte_types.h"
  16:source\asw/swc_output.c **** #include "swc_output.h"
  17:source\asw/swc_output.c **** 
  18:source\asw/swc_output.c **** 
  19:source\asw/swc_output.c **** 
  20:source\asw/swc_output.c **** /* USER CODE START SWC_OUTPUT_INCLUDE */
  21:source\asw/swc_output.c **** #include "watchdog.h"
  22:source\asw/swc_output.c **** #include "error.h"
  23:source\asw/swc_output.c **** 
  24:source\asw/swc_output.c **** /* USER CODE END SWC_OUTPUT_INCLUDE */
  25:source\asw/swc_output.c **** 
  26:source\asw/swc_output.c **** 
  27:source\asw/swc_output.c **** #include "sp_common.h"
  28:source\asw/swc_output.c **** 
  29:source\asw/swc_output.c **** /* USER CODE START SWC_OUTPUT_USERDEFINITIONS */
  30:source\asw/swc_output.c **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 2


  31:source\asw/swc_output.c **** /* USER CODE END SWC_OUTPUT_USERDEFINITIONS */
  32:source\asw/swc_output.c **** 
  33:source\asw/swc_output.c **** 
  34:source\asw/swc_output.c **** 
  35:source\asw/swc_output.c **** /*
  36:source\asw/swc_output.c ****  * component: swc_output
  37:source\asw/swc_output.c ****  * cycletime: 100
  38:source\asw/swc_output.c ****  * description: Sets Green LED according to Engine Speed
  39:source\asw/swc_output.c ****  * events: 
  40:source\asw/swc_output.c ****  * name: OUTPUT_setEngine_run
  41:source\asw/swc_output.c ****  * shortname: setEngine
  42:source\asw/swc_output.c ****  * signalIN: so_speed
  43:source\asw/swc_output.c ****  * signalOUT: so_engine
  44:source\asw/swc_output.c ****  * task: tsk_io
  45:source\asw/swc_output.c ****  */
  46:source\asw/swc_output.c **** void OUTPUT_setEngine_run(RTE_event ev){
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  47:source\asw/swc_output.c **** 	
  48:source\asw/swc_output.c **** 	/* USER CODE START OUTPUT_setEngine_run */
  49:source\asw/swc_output.c ****         WD_Alive(WATCHDOG_RUN_SETENGINE);
  39              		.loc 1 49 0
  40 0002 0220     		movs	r0, #2
  41              	.LVL1:
  42 0004 FFF7FEFF 		bl	WD_Alive
  43              	.LVL2:
  50:source\asw/swc_output.c ****     if (ERROR_isRunnableActive(ERROR_SET_ENGINE) == FALSE){
  44              		.loc 1 50 0
  45 0008 0220     		movs	r0, #2
  46 000a FFF7FEFF 		bl	ERROR_isRunnableActive
  47              	.LVL3:
  48 000e 0028     		cmp	r0, #0
  49 0010 51D0     		beq	.L1
  50              	.LVL4:
  51              	.LBB22:
  52              	.LBB23:
  53              		.file 2 ".\\source\\rte/sc_speed.h"
   1:.\source\rte/sc_speed.h **** 
   2:.\source\rte/sc_speed.h **** 
   3:.\source\rte/sc_speed.h **** /**
   4:.\source\rte/sc_speed.h ****  *  file    SC_SPEED_signal.h
   5:.\source\rte/sc_speed.h ****  *
   6:.\source\rte/sc_speed.h ****  *  brief   signal base class for signal sc_speed
   7:.\source\rte/sc_speed.h ****  *
   8:.\source\rte/sc_speed.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_speed.h ****  *
  10:.\source\rte/sc_speed.h ****  * description: Signal for Speed
  11:.\source\rte/sc_speed.h ****  * name: sc_speed
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 3


  12:.\source\rte/sc_speed.h ****  * shortname: speed
  13:.\source\rte/sc_speed.h ****  *
  14:.\source\rte/sc_speed.h ****  */
  15:.\source\rte/sc_speed.h **** 
  16:.\source\rte/sc_speed.h **** 
  17:.\source\rte/sc_speed.h **** 
  18:.\source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_speed.h **** 
  21:.\source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_speed.h **** #include "global.h"
  23:.\source\rte/sc_speed.h **** #include "project.h"
  24:.\source\rte/sc_speed.h **** #include "rte.h"
  25:.\source\rte/sc_speed.h **** #include "rte_types.h"
  26:.\source\rte/sc_speed.h **** 
  27:.\source\rte/sc_speed.h **** #include "sc_speed_type.h"
  28:.\source\rte/sc_speed.h **** 
  29:.\source\rte/sc_speed.h **** 
  30:.\source\rte/sc_speed.h **** /**************************************************************************************************
  31:.\source\rte/sc_speed.h **** /* The driver API block																						*/
  32:.\source\rte/sc_speed.h **** /**************************************************************************************************
  33:.\source\rte/sc_speed.h ****                                                                                                    
  34:.\source\rte/sc_speed.h **** /**
  35:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_speed.h ****  *  I-Port
  37:.\source\rte/sc_speed.h ****  */
  38:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  39:.\source\rte/sc_speed.h **** 
  40:.\source\rte/sc_speed.h **** /**
  41:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_speed.h ****  *  O-Port
  43:.\source\rte/sc_speed.h ****  */
  44:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  45:.\source\rte/sc_speed.h **** 
  46:.\source\rte/sc_speed.h **** 
  47:.\source\rte/sc_speed.h **** /**************************************************************************************************
  48:.\source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_speed.h **** /**************************************************************************************************
  50:.\source\rte/sc_speed.h **** 
  51:.\source\rte/sc_speed.h **** /**
  52:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_speed.h ****  */
  54:.\source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  55:.\source\rte/sc_speed.h **** {
  56:.\source\rte/sc_speed.h ****     /**
  57:.\source\rte/sc_speed.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_speed.h ****      */
  59:.\source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  60:.\source\rte/sc_speed.h **** 
  61:.\source\rte/sc_speed.h ****     /**
  62:.\source\rte/sc_speed.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_speed.h ****      */
  64:.\source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  65:.\source\rte/sc_speed.h ****    
  66:.\source\rte/sc_speed.h ****     /**
  67:.\source\rte/sc_speed.h ****      * Event onUpdate
  68:.\source\rte/sc_speed.h ****      */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 4


  69:.\source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_speed.h ****     
  71:.\source\rte/sc_speed.h ****     
  72:.\source\rte/sc_speed.h ****     /**
  73:.\source\rte/sc_speed.h ****      * Event onError
  74:.\source\rte/sc_speed.h ****      */
  75:.\source\rte/sc_speed.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_speed.h ****     
  77:.\source\rte/sc_speed.h ****     /**
  78:.\source\rte/sc_speed.h ****      * Task Count onUpdate
  79:.\source\rte/sc_speed.h ****      */
  80:.\source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_speed.h **** 
  82:.\source\rte/sc_speed.h ****     /**
  83:.\source\rte/sc_speed.h ****      * Task List onUpdate
  84:.\source\rte/sc_speed.h ****      */
  85:.\source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_speed.h ****     
  87:.\source\rte/sc_speed.h ****     /**
  88:.\source\rte/sc_speed.h ****      * Task Count onError
  89:.\source\rte/sc_speed.h ****      */
  90:.\source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_speed.h **** 
  92:.\source\rte/sc_speed.h ****     /**
  93:.\source\rte/sc_speed.h ****      * Task List onError
  94:.\source\rte/sc_speed.h ****      */
  95:.\source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_speed.h **** 	
  97:.\source\rte/sc_speed.h **** 	
  98:.\source\rte/sc_speed.h **** 	/**
  99:.\source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_speed.h **** 	 */
 101:.\source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_speed.h **** 	 
 103:.\source\rte/sc_speed.h **** 	/**
 104:.\source\rte/sc_speed.h **** 	 * Ressourse 
 105:.\source\rte/sc_speed.h **** 	 */
 106:.\source\rte/sc_speed.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_speed.h **** 
 108:.\source\rte/sc_speed.h **** };                                                                                                 
 109:.\source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 110:.\source\rte/sc_speed.h ****                               
 111:.\source\rte/sc_speed.h **** /**************************************************************************************************
 112:.\source\rte/sc_speed.h **** /* The data interface block																							*/
 113:.\source\rte/sc_speed.h **** /**************************************************************************************************
 114:.\source\rte/sc_speed.h **** 
 115:.\source\rte/sc_speed.h ****                                                                                                    
 116:.\source\rte/sc_speed.h **** 							  
 117:.\source\rte/sc_speed.h **** /**
 118:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 119:.\source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_speed.h ****  */
 121:.\source\rte/sc_speed.h **** struct SC_SPEED_s
 122:.\source\rte/sc_speed.h **** {                                                                                                  
 123:.\source\rte/sc_speed.h **** 
 124:.\source\rte/sc_speed.h **** 	/**
 125:.\source\rte/sc_speed.h **** 	 * Data buffer for the application value
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 5


 126:.\source\rte/sc_speed.h **** 	 */
 127:.\source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 128:.\source\rte/sc_speed.h **** 
 129:.\source\rte/sc_speed.h ****     /**
 130:.\source\rte/sc_speed.h ****      * Current signal status
 131:.\source\rte/sc_speed.h ****      */
 132:.\source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_speed.h **** 
 134:.\source\rte/sc_speed.h ****     /**
 135:.\source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_speed.h ****      */
 137:.\source\rte/sc_speed.h ****     uint32_t age;
 138:.\source\rte/sc_speed.h **** 
 139:.\source\rte/sc_speed.h ****     /**
 140:.\source\rte/sc_speed.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_speed.h ****      */
 142:.\source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_speed.h **** 
 144:.\source\rte/sc_speed.h **** };                                                                                                 
 145:.\source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 146:.\source\rte/sc_speed.h **** 
 147:.\source\rte/sc_speed.h **** /**************************************************************************************************
 148:.\source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_speed.h **** /**************************************************************************************************
 150:.\source\rte/sc_speed.h **** 
 151:.\source\rte/sc_speed.h **** /**
 152:.\source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_speed.h ****  *
 156:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_speed.h ****  *
 159:.\source\rte/sc_speed.h ****  **/
 160:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal )
 161:.\source\rte/sc_speed.h **** {                                                                                                  
 162:.\source\rte/sc_speed.h **** 
 163:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_speed.h **** 
 165:.\source\rte/sc_speed.h ****    //Set value and raw value
 166:.\source\rte/sc_speed.h ****    signal->value  = SC_SPEED_INIT_DATA;
 167:.\source\rte/sc_speed.h ****    signal->age    = 0;
 168:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_speed.h **** 
 170:.\source\rte/sc_speed.h ****    return ret;
 171:.\source\rte/sc_speed.h **** }
 172:.\source\rte/sc_speed.h **** 
 173:.\source\rte/sc_speed.h **** /**************************************************************************************************
 174:.\source\rte/sc_speed.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_speed.h **** /**************************************************************************************************
 176:.\source\rte/sc_speed.h **** 
 177:.\source\rte/sc_speed.h **** /**
 178:.\source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_speed.h ****  *
 180:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_speed.h ****  *
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 6


 183:.\source\rte/sc_speed.h ****  **/
 184:.\source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 185:.\source\rte/sc_speed.h **** {
 186:.\source\rte/sc_speed.h ****    return signal->status;
  54              		.loc 2 186 0
  55 0012 294B     		ldr	r3, .L15
  56 0014 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  57              	.LVL5:
  58              	.LBE23:
  59              	.LBE22:
  51:source\asw/swc_output.c ****         return;
  52:source\asw/swc_output.c ****     
  53:source\asw/swc_output.c ****     }
  54:source\asw/swc_output.c **** 
  55:source\asw/swc_output.c ****     if (RTE_SC_SPEED_getStatus(&SO_SPEED_signal) != RTE_SIGNALSTATUS_VALID) {
  60              		.loc 1 55 0
  61 0016 022B     		cmp	r3, #2
  62 0018 4DD1     		bne	.L1
  63              	.LVL6:
  64              	.LBB24:
  65              	.LBB25:
 187:.\source\rte/sc_speed.h **** }
 188:.\source\rte/sc_speed.h **** 
 189:.\source\rte/sc_speed.h **** 
 190:.\source\rte/sc_speed.h **** /**
 191:.\source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_speed.h ****  *
 193:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_speed.h ****  *
 197:.\source\rte/sc_speed.h ****  */
 198:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_speed.h **** {
 200:.\source\rte/sc_speed.h ****    signal->status = status;
 201:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 202:.\source\rte/sc_speed.h ****    
 203:.\source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_speed.h ****    {
 206:.\source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_speed.h **** 
 209:.\source\rte/sc_speed.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_speed.h **** 			}
 214:.\source\rte/sc_speed.h **** 		}
 215:.\source\rte/sc_speed.h ****    }
 216:.\source\rte/sc_speed.h ****    
 217:.\source\rte/sc_speed.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_speed.h **** }
 219:.\source\rte/sc_speed.h **** 
 220:.\source\rte/sc_speed.h **** 
 221:.\source\rte/sc_speed.h **** /**
 222:.\source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 7


 223:.\source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_speed.h ****  *
 225:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_speed.h ****  */
 228:.\source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 229:.\source\rte/sc_speed.h **** {
 230:.\source\rte/sc_speed.h ****    return signal->age;
 231:.\source\rte/sc_speed.h **** }
 232:.\source\rte/sc_speed.h **** 
 233:.\source\rte/sc_speed.h **** /**
 234:.\source\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_speed.h ****  * @return void
 238:.\source\rte/sc_speed.h ****  */
 239:.\source\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 240:.\source\rte/sc_speed.h **** {
 241:.\source\rte/sc_speed.h **** 	   //Hack....
 242:.\source\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_speed.h **** 	   {
 244:.\source\rte/sc_speed.h **** 	      signal->age += increment;
 245:.\source\rte/sc_speed.h **** 	   }
 246:.\source\rte/sc_speed.h **** }
 247:.\source\rte/sc_speed.h **** 
 248:.\source\rte/sc_speed.h **** 
 249:.\source\rte/sc_speed.h **** /**************************************************************************************************
 250:.\source\rte/sc_speed.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_speed.h **** /**************************************************************************************************
 252:.\source\rte/sc_speed.h **** 
 253:.\source\rte/sc_speed.h **** /**
 254:.\source\rte/sc_speed.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_speed.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_speed.h ****  *
 257:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_speed.h ****  *
 260:.\source\rte/sc_speed.h ****  **/
 261:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t* RTE_SC_SPEED_getPtr( SC_SPEED_t * const signal )
 262:.\source\rte/sc_speed.h **** {               
 263:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_speed.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_speed.h **** }
 266:.\source\rte/sc_speed.h **** 
 267:.\source\rte/sc_speed.h **** /**
 268:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_speed.h ****  *
 270:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t: current value of the application data buffer
 272:.\source\rte/sc_speed.h ****  *
 273:.\source\rte/sc_speed.h ****  **/
 274:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t RTE_SC_SPEED_get( const SC_SPEED_t * const signal )
 275:.\source\rte/sc_speed.h **** {               
 276:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_speed.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_speed.h **** }                                                                                                  
 279:.\source\rte/sc_speed.h ****                                                                                                    
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 8


 280:.\source\rte/sc_speed.h **** /**
 281:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_speed.h ****  *
 283:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_speed.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_speed.h ****  *
 287:.\source\rte/sc_speed.h ****  **/
 288:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_getThreadSafe( const SC_SPEED_t * const signal, SC_SPEED_data_t * const da
 289:.\source\rte/sc_speed.h **** {    
 290:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
  66              		.loc 2 290 0
  67 001a 274B     		ldr	r3, .L15
  68 001c 9B68     		ldr	r3, [r3, #8]
  69 001e 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
  70 0022 012A     		cmp	r2, #1
  71 0024 02D1     		bne	.L3
  72 0026 586A     		ldr	r0, [r3, #36]
  73 0028 FFF7FEFF 		bl	EE_oo_GetResource
  74              	.LVL7:
  75              	.L3:
 291:.\source\rte/sc_speed.h ****    *data = signal->value;
  76              		.loc 2 291 0
  77 002c 224B     		ldr	r3, .L15
  78 002e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 292:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
  79              		.loc 2 292 0
  80 0030 9B68     		ldr	r3, [r3, #8]
  81 0032 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
  82 0036 012A     		cmp	r2, #1
  83 0038 02D1     		bne	.L4
  84 003a 586A     		ldr	r0, [r3, #36]
  85 003c FFF7FEFF 		bl	EE_oo_ReleaseResource
  86              	.LVL8:
  87              	.L4:
  88              	.LBE25:
  89              	.LBE24:
  56:source\asw/swc_output.c ****         return;
  57:source\asw/swc_output.c ****     }
  58:source\asw/swc_output.c ****     
  59:source\asw/swc_output.c ****     SC_SPEED_data_t speed = SC_SPEED_INIT_DATA;
  60:source\asw/swc_output.c ****   
  61:source\asw/swc_output.c ****     RTE_SC_SPEED_getThreadSafe(&SO_SPEED_signal, &speed);
  62:source\asw/swc_output.c ****     
  63:source\asw/swc_output.c ****     SC_ENGINE_data_t engine = SC_ENGINE_INIT_DATA;
  90              		.loc 1 63 0
  91 0040 4FF00003 		mov	r3, #0
  92              	.LVL9:
  93              	.LBB26:
  94              	.LBB27:
 230:.\source\rte/sc_speed.h **** }
  95              		.loc 2 230 0
  96 0044 1C4A     		ldr	r2, .L15
  97 0046 5268     		ldr	r2, [r2, #4]
  98              	.LVL10:
  99              	.LBE27:
 100              	.LBE26:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 9


  64:source\asw/swc_output.c ****     
  65:source\asw/swc_output.c ****     if (RTE_SC_SPEED_getAge(&SO_SPEED_signal) < 50){
 101              		.loc 1 65 0
 102 0048 312A     		cmp	r2, #49
 103 004a 00D8     		bhi	.L5
  66:source\asw/swc_output.c ****         engine.m_engineValue = speed.m_speedValue;
 104              		.loc 1 66 0
 105 004c 2346     		mov	r3, r4
 106              	.L5:
 107              	.LVL11:
 108 004e 1C46     		mov	r4, r3
 109              	.LVL12:
 110              	.LBB28:
 111              	.LBB29:
 112              		.file 3 ".\\source\\rte/sc_engine.h"
   1:.\source\rte/sc_engine.h **** 
   2:.\source\rte/sc_engine.h **** 
   3:.\source\rte/sc_engine.h **** /**
   4:.\source\rte/sc_engine.h ****  *  file    SC_ENGINE_signal.h
   5:.\source\rte/sc_engine.h ****  *
   6:.\source\rte/sc_engine.h ****  *  brief   signal base class for signal sc_engine
   7:.\source\rte/sc_engine.h ****  *
   8:.\source\rte/sc_engine.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_engine.h ****  *
  10:.\source\rte/sc_engine.h ****  * description: Signal for engine
  11:.\source\rte/sc_engine.h ****  * name: sc_engine
  12:.\source\rte/sc_engine.h ****  * shortname: engine
  13:.\source\rte/sc_engine.h ****  *
  14:.\source\rte/sc_engine.h ****  */
  15:.\source\rte/sc_engine.h **** 
  16:.\source\rte/sc_engine.h **** 
  17:.\source\rte/sc_engine.h **** 
  18:.\source\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_engine.h **** 
  21:.\source\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_engine.h **** #include "global.h"
  23:.\source\rte/sc_engine.h **** #include "project.h"
  24:.\source\rte/sc_engine.h **** #include "rte.h"
  25:.\source\rte/sc_engine.h **** #include "rte_types.h"
  26:.\source\rte/sc_engine.h **** 
  27:.\source\rte/sc_engine.h **** #include "sc_engine_type.h"
  28:.\source\rte/sc_engine.h **** 
  29:.\source\rte/sc_engine.h **** 
  30:.\source\rte/sc_engine.h **** /**************************************************************************************************
  31:.\source\rte/sc_engine.h **** /* The driver API block																						*/
  32:.\source\rte/sc_engine.h **** /**************************************************************************************************
  33:.\source\rte/sc_engine.h ****                                                                                                    
  34:.\source\rte/sc_engine.h **** /**
  35:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_engine.h ****  *  I-Port
  37:.\source\rte/sc_engine.h ****  */
  38:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  39:.\source\rte/sc_engine.h **** 
  40:.\source\rte/sc_engine.h **** /**
  41:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_engine.h ****  *  O-Port
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 10


  43:.\source\rte/sc_engine.h ****  */
  44:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  45:.\source\rte/sc_engine.h **** 
  46:.\source\rte/sc_engine.h **** 
  47:.\source\rte/sc_engine.h **** /**************************************************************************************************
  48:.\source\rte/sc_engine.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_engine.h **** /**************************************************************************************************
  50:.\source\rte/sc_engine.h **** 
  51:.\source\rte/sc_engine.h **** /**
  52:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_engine.h ****  */
  54:.\source\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  55:.\source\rte/sc_engine.h **** {
  56:.\source\rte/sc_engine.h ****     /**
  57:.\source\rte/sc_engine.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_engine.h ****      */
  59:.\source\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  60:.\source\rte/sc_engine.h **** 
  61:.\source\rte/sc_engine.h ****     /**
  62:.\source\rte/sc_engine.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_engine.h ****      */
  64:.\source\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  65:.\source\rte/sc_engine.h ****    
  66:.\source\rte/sc_engine.h ****     /**
  67:.\source\rte/sc_engine.h ****      * Event onUpdate
  68:.\source\rte/sc_engine.h ****      */
  69:.\source\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_engine.h ****     
  71:.\source\rte/sc_engine.h ****     
  72:.\source\rte/sc_engine.h ****     /**
  73:.\source\rte/sc_engine.h ****      * Event onError
  74:.\source\rte/sc_engine.h ****      */
  75:.\source\rte/sc_engine.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_engine.h ****     
  77:.\source\rte/sc_engine.h ****     /**
  78:.\source\rte/sc_engine.h ****      * Task Count onUpdate
  79:.\source\rte/sc_engine.h ****      */
  80:.\source\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_engine.h **** 
  82:.\source\rte/sc_engine.h ****     /**
  83:.\source\rte/sc_engine.h ****      * Task List onUpdate
  84:.\source\rte/sc_engine.h ****      */
  85:.\source\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_engine.h ****     
  87:.\source\rte/sc_engine.h ****     /**
  88:.\source\rte/sc_engine.h ****      * Task Count onError
  89:.\source\rte/sc_engine.h ****      */
  90:.\source\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_engine.h **** 
  92:.\source\rte/sc_engine.h ****     /**
  93:.\source\rte/sc_engine.h ****      * Task List onError
  94:.\source\rte/sc_engine.h ****      */
  95:.\source\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_engine.h **** 	
  97:.\source\rte/sc_engine.h **** 	
  98:.\source\rte/sc_engine.h **** 	/**
  99:.\source\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 11


 100:.\source\rte/sc_engine.h **** 	 */
 101:.\source\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_engine.h **** 	 
 103:.\source\rte/sc_engine.h **** 	/**
 104:.\source\rte/sc_engine.h **** 	 * Ressourse 
 105:.\source\rte/sc_engine.h **** 	 */
 106:.\source\rte/sc_engine.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_engine.h **** 
 108:.\source\rte/sc_engine.h **** };                                                                                                 
 109:.\source\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 110:.\source\rte/sc_engine.h ****                               
 111:.\source\rte/sc_engine.h **** /**************************************************************************************************
 112:.\source\rte/sc_engine.h **** /* The data interface block																							*/
 113:.\source\rte/sc_engine.h **** /**************************************************************************************************
 114:.\source\rte/sc_engine.h **** 
 115:.\source\rte/sc_engine.h ****                                                                                                    
 116:.\source\rte/sc_engine.h **** 							  
 117:.\source\rte/sc_engine.h **** /**
 118:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 119:.\source\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_engine.h ****  */
 121:.\source\rte/sc_engine.h **** struct SC_ENGINE_s
 122:.\source\rte/sc_engine.h **** {                                                                                                  
 123:.\source\rte/sc_engine.h **** 
 124:.\source\rte/sc_engine.h **** 	/**
 125:.\source\rte/sc_engine.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_engine.h **** 	 */
 127:.\source\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 128:.\source\rte/sc_engine.h **** 
 129:.\source\rte/sc_engine.h ****     /**
 130:.\source\rte/sc_engine.h ****      * Current signal status
 131:.\source\rte/sc_engine.h ****      */
 132:.\source\rte/sc_engine.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_engine.h **** 
 134:.\source\rte/sc_engine.h ****     /**
 135:.\source\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_engine.h ****      */
 137:.\source\rte/sc_engine.h ****     uint32_t age;
 138:.\source\rte/sc_engine.h **** 
 139:.\source\rte/sc_engine.h ****     /**
 140:.\source\rte/sc_engine.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_engine.h ****      */
 142:.\source\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_engine.h **** 
 144:.\source\rte/sc_engine.h **** };                                                                                                 
 145:.\source\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 146:.\source\rte/sc_engine.h **** 
 147:.\source\rte/sc_engine.h **** /**************************************************************************************************
 148:.\source\rte/sc_engine.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_engine.h **** /**************************************************************************************************
 150:.\source\rte/sc_engine.h **** 
 151:.\source\rte/sc_engine.h **** /**
 152:.\source\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_engine.h ****  *
 156:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 12


 157:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_engine.h ****  *
 159:.\source\rte/sc_engine.h ****  **/
 160:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal )
 161:.\source\rte/sc_engine.h **** {                                                                                                  
 162:.\source\rte/sc_engine.h **** 
 163:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_engine.h **** 
 165:.\source\rte/sc_engine.h ****    //Set value and raw value
 166:.\source\rte/sc_engine.h ****    signal->value  = SC_ENGINE_INIT_DATA;
 167:.\source\rte/sc_engine.h ****    signal->age    = 0;
 168:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_engine.h **** 
 170:.\source\rte/sc_engine.h ****    return ret;
 171:.\source\rte/sc_engine.h **** }
 172:.\source\rte/sc_engine.h **** 
 173:.\source\rte/sc_engine.h **** /**************************************************************************************************
 174:.\source\rte/sc_engine.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_engine.h **** /**************************************************************************************************
 176:.\source\rte/sc_engine.h **** 
 177:.\source\rte/sc_engine.h **** /**
 178:.\source\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_engine.h ****  *
 180:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_engine.h ****  *
 183:.\source\rte/sc_engine.h ****  **/
 184:.\source\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 185:.\source\rte/sc_engine.h **** {
 186:.\source\rte/sc_engine.h ****    return signal->status;
 187:.\source\rte/sc_engine.h **** }
 188:.\source\rte/sc_engine.h **** 
 189:.\source\rte/sc_engine.h **** 
 190:.\source\rte/sc_engine.h **** /**
 191:.\source\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_engine.h ****  *
 193:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_engine.h ****  *
 197:.\source\rte/sc_engine.h ****  */
 198:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_engine.h **** {
 200:.\source\rte/sc_engine.h ****    signal->status = status;
 201:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 202:.\source\rte/sc_engine.h ****    
 203:.\source\rte/sc_engine.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_engine.h ****    {
 206:.\source\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_engine.h **** 
 209:.\source\rte/sc_engine.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_engine.h **** 			}
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 13


 214:.\source\rte/sc_engine.h **** 		}
 215:.\source\rte/sc_engine.h ****    }
 216:.\source\rte/sc_engine.h ****    
 217:.\source\rte/sc_engine.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_engine.h **** }
 219:.\source\rte/sc_engine.h **** 
 220:.\source\rte/sc_engine.h **** 
 221:.\source\rte/sc_engine.h **** /**
 222:.\source\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_engine.h ****  *
 225:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_engine.h ****  */
 228:.\source\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 229:.\source\rte/sc_engine.h **** {
 230:.\source\rte/sc_engine.h ****    return signal->age;
 231:.\source\rte/sc_engine.h **** }
 232:.\source\rte/sc_engine.h **** 
 233:.\source\rte/sc_engine.h **** /**
 234:.\source\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_engine.h ****  * @return void
 238:.\source\rte/sc_engine.h ****  */
 239:.\source\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 240:.\source\rte/sc_engine.h **** {
 241:.\source\rte/sc_engine.h **** 	   //Hack....
 242:.\source\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_engine.h **** 	   {
 244:.\source\rte/sc_engine.h **** 	      signal->age += increment;
 245:.\source\rte/sc_engine.h **** 	   }
 246:.\source\rte/sc_engine.h **** }
 247:.\source\rte/sc_engine.h **** 
 248:.\source\rte/sc_engine.h **** 
 249:.\source\rte/sc_engine.h **** /**************************************************************************************************
 250:.\source\rte/sc_engine.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_engine.h **** /**************************************************************************************************
 252:.\source\rte/sc_engine.h **** 
 253:.\source\rte/sc_engine.h **** /**
 254:.\source\rte/sc_engine.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_engine.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_engine.h ****  *
 257:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_engine.h ****  *
 260:.\source\rte/sc_engine.h ****  **/
 261:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t* RTE_SC_ENGINE_getPtr( SC_ENGINE_t * const signal )
 262:.\source\rte/sc_engine.h **** {               
 263:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_engine.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_engine.h **** }
 266:.\source\rte/sc_engine.h **** 
 267:.\source\rte/sc_engine.h **** /**
 268:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_engine.h ****  *
 270:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 14


 271:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t: current value of the application data buffer
 272:.\source\rte/sc_engine.h ****  *
 273:.\source\rte/sc_engine.h ****  **/
 274:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t RTE_SC_ENGINE_get( const SC_ENGINE_t * const signal )
 275:.\source\rte/sc_engine.h **** {               
 276:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_engine.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_engine.h **** }                                                                                                  
 279:.\source\rte/sc_engine.h ****                                                                                                    
 280:.\source\rte/sc_engine.h **** /**
 281:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_engine.h ****  *
 283:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_engine.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_engine.h ****  *
 287:.\source\rte/sc_engine.h ****  **/
 288:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_getThreadSafe( const SC_ENGINE_t * const signal, SC_ENGINE_data_t * const
 289:.\source\rte/sc_engine.h **** {    
 290:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_engine.h ****    *data = signal->value;
 292:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_engine.h **** 
 294:.\source\rte/sc_engine.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_engine.h ****    
 296:.\source\rte/sc_engine.h **** }                                                                                                  
 297:.\source\rte/sc_engine.h ****                                                                                                    
 298:.\source\rte/sc_engine.h **** /**
 299:.\source\rte/sc_engine.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_engine.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_engine.h ****  * signal specific scaling function.
 302:.\source\rte/sc_engine.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_engine.h ****  *
 304:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_engine.h ****  * @param  sc_engine_data_t const value: value for the application data buffer
 306:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_engine.h ****  *
 308:.\source\rte/sc_engine.h ****  **/
 309:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_set(SC_ENGINE_t * const signal, const SC_ENGINE_data_t value  )
 310:.\source\rte/sc_engine.h **** {
 311:.\source\rte/sc_engine.h **** 
 312:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 314:.\source\rte/sc_engine.h **** 
 315:.\source\rte/sc_engine.h **** 
 316:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 113              		.loc 3 316 0
 114 0050 1A4B     		ldr	r3, .L15+4
 115              	.LVL13:
 116 0052 9B68     		ldr	r3, [r3, #8]
 117 0054 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 118 0058 012A     		cmp	r2, #1
 119 005a 02D1     		bne	.L6
 120 005c 586A     		ldr	r0, [r3, #36]
 121 005e FFF7FEFF 		bl	EE_oo_GetResource
 122              	.LVL14:
 123              	.L6:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 15


 317:.\source\rte/sc_engine.h ****    signal->value  = value;
 124              		.loc 3 317 0
 125 0062 164B     		ldr	r3, .L15+4
 126              	.LVL15:
 127 0064 1C70     		strb	r4, [r3]
 318:.\source\rte/sc_engine.h ****    signal->age    = 0;
 128              		.loc 3 318 0
 129 0066 0022     		movs	r2, #0
 130 0068 5A60     		str	r2, [r3, #4]
 319:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 131              		.loc 3 319 0
 132 006a 0222     		movs	r2, #2
 133 006c 5A70     		strb	r2, [r3, #1]
 320:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 134              		.loc 3 320 0
 135 006e 9B68     		ldr	r3, [r3, #8]
 136 0070 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 137 0074 012A     		cmp	r2, #1
 138 0076 02D1     		bne	.L7
 139 0078 586A     		ldr	r0, [r3, #36]
 140 007a FFF7FEFF 		bl	EE_oo_ReleaseResource
 141              	.LVL16:
 142              	.L7:
 321:.\source\rte/sc_engine.h **** 
 322:.\source\rte/sc_engine.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_engine.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 143              		.loc 3 323 0
 144 007e 0F4B     		ldr	r3, .L15+4
 145 0080 9B68     		ldr	r3, [r3, #8]
 146 0082 5D69     		ldr	r5, [r3, #20]
 147              	.LVL17:
 324:.\source\rte/sc_engine.h **** 
 325:.\source\rte/sc_engine.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 148              		.loc 3 325 0
 149 0084 9B68     		ldr	r3, [r3, #8]
 150 0086 73B1     		cbz	r3, .L8
 151 0088 3DB9     		cbnz	r5, .L13
 152 008a 0CE0     		b	.L8
 153              	.LVL18:
 154              	.L10:
 155              	.LBB30:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_engine.h **** 		  
 328:.\source\rte/sc_engine.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_engine.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 156              		.loc 3 329 0
 157 008c 9968     		ldr	r1, [r3, #8]
 158 008e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 159 0092 FFF7FEFF 		bl	EE_oo_SetEvent
 160              	.LVL19:
 161              	.LBE30:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 162              		.loc 3 326 0
 163 0096 0134     		adds	r4, r4, #1
 164              	.LVL20:
 165 0098 00E0     		b	.L9
 166              	.LVL21:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 16


 167              	.L13:
 325:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 168              		.loc 3 325 0
 169 009a 0024     		movs	r4, #0
 170              	.LVL22:
 171              	.L9:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 172              		.loc 3 326 0
 173 009c 074B     		ldr	r3, .L15+4
 174 009e 9B68     		ldr	r3, [r3, #8]
 175 00a0 1A69     		ldr	r2, [r3, #16]
 176 00a2 9442     		cmp	r4, r2
 177 00a4 F2D3     		bcc	.L10
 178              	.LVL23:
 179              	.L8:
 180              	.LBE29:
 181              	.LBE28:
 182              	.LBB31:
 183              	.LBB32:
 330:.\source\rte/sc_engine.h ****       }
 331:.\source\rte/sc_engine.h ****    }
 332:.\source\rte/sc_engine.h **** 
 333:.\source\rte/sc_engine.h ****    return ret;
 334:.\source\rte/sc_engine.h **** }                                                                                                  
 335:.\source\rte/sc_engine.h ****                                                                                                    
 336:.\source\rte/sc_engine.h ****                                                                                                    
 337:.\source\rte/sc_engine.h **** /**************************************************************************************************
 338:.\source\rte/sc_engine.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_engine.h **** /**************************************************************************************************
 340:.\source\rte/sc_engine.h **** 
 341:.\source\rte/sc_engine.h ****                                                                                                    
 342:.\source\rte/sc_engine.h **** /**
 343:.\source\rte/sc_engine.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_engine.h ****  *
 345:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_engine.h ****  *
 348:.\source\rte/sc_engine.h ****  */
 349:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pullPort( SC_ENGINE_t * const signal )
 350:.\source\rte/sc_engine.h **** {                                                                                                  
 351:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_engine.h **** 
 353:.\source\rte/sc_engine.h ****                                                                                                    
 354:.\source\rte/sc_engine.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_engine.h ****    {
 356:.\source\rte/sc_engine.h **** 	  SC_ENGINE_data_t value = signal->value;
 357:.\source\rte/sc_engine.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_engine.h ****                                                                                                    
 359:.\source\rte/sc_engine.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_engine.h ****       {
 361:.\source\rte/sc_engine.h ****     	  //Critical Section
 362:.\source\rte/sc_engine.h ****     	  RTE_SC_ENGINE_set(signal, value);
 363:.\source\rte/sc_engine.h ****       }
 364:.\source\rte/sc_engine.h ****       else
 365:.\source\rte/sc_engine.h ****       {
 366:.\source\rte/sc_engine.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_engine.h **** 		  RTE_SC_ENGINE_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 17


 368:.\source\rte/sc_engine.h ****       }
 369:.\source\rte/sc_engine.h **** 
 370:.\source\rte/sc_engine.h ****    }                                                                                               
 371:.\source\rte/sc_engine.h ****                                                                                                    
 372:.\source\rte/sc_engine.h ****    return ret;                                                                                     
 373:.\source\rte/sc_engine.h **** }                                                                                                  
 374:.\source\rte/sc_engine.h ****                                                                                                    
 375:.\source\rte/sc_engine.h **** /**
 376:.\source\rte/sc_engine.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_engine.h ****  *
 378:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_engine.h ****  *
 381:.\source\rte/sc_engine.h ****  **/
 382:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pushPort( const SC_ENGINE_t * const signal )
 383:.\source\rte/sc_engine.h **** {                                                                                                  
 384:.\source\rte/sc_engine.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_engine.h **** 
 386:.\source\rte/sc_engine.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 184              		.loc 3 386 0
 185 00a6 054B     		ldr	r3, .L15+4
 186 00a8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 187 00aa 022B     		cmp	r3, #2
 188 00ac 03D1     		bne	.L1
 387:.\source\rte/sc_engine.h ****    {
 388:.\source\rte/sc_engine.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 189              		.loc 3 388 0
 190 00ae 0348     		ldr	r0, .L15+4
 191 00b0 8368     		ldr	r3, [r0, #8]
 192 00b2 5B68     		ldr	r3, [r3, #4]
 193 00b4 9847     		blx	r3
 194              	.LVL24:
 195              	.L1:
 196 00b6 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL25:
 198              	.L16:
 199              		.align	2
 200              	.L15:
 201 00b8 00000000 		.word	SO_SPEED_signal
 202 00bc 00000000 		.word	SO_ENGINE_signal
 203              	.LBE32:
 204              	.LBE31:
 205              		.cfi_endproc
 206              	.LFE165:
 207              		.size	OUTPUT_setEngine_run, .-OUTPUT_setEngine_run
 208              		.section	.text.OUTPUT_setBrakeLight_run,"ax",%progbits
 209              		.align	2
 210              		.global	OUTPUT_setBrakeLight_run
 211              		.thumb
 212              		.thumb_func
 213              		.type	OUTPUT_setBrakeLight_run, %function
 214              	OUTPUT_setBrakeLight_run:
 215              	.LFB166:
  67:source\asw/swc_output.c ****     } else {
  68:source\asw/swc_output.c ****         engine.m_engineValue = 0;
  69:source\asw/swc_output.c ****     }
  70:source\asw/swc_output.c ****     
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 18


  71:source\asw/swc_output.c ****     RTE_SC_ENGINE_set(&SO_ENGINE_signal, engine);
  72:source\asw/swc_output.c ****     RTE_SC_ENGINE_pushPort(&SO_ENGINE_signal);
  73:source\asw/swc_output.c ****     
  74:source\asw/swc_output.c **** 
  75:source\asw/swc_output.c **** 
  76:source\asw/swc_output.c ****     /* USER CODE END OUTPUT_setEngine_run */
  77:source\asw/swc_output.c **** }
  78:source\asw/swc_output.c **** 
  79:source\asw/swc_output.c **** /*
  80:source\asw/swc_output.c ****  * component: swc_output
  81:source\asw/swc_output.c ****  * cycletime: 0
  82:source\asw/swc_output.c ****  * description: Sets LED according to brake condition
  83:source\asw/swc_output.c ****  * events: ev_speed_onData
  84:source\asw/swc_output.c ****  * name: OUTPUT_setBrakeLight_run
  85:source\asw/swc_output.c ****  * shortname: setBrakeLight
  86:source\asw/swc_output.c ****  * signalIN: so_speed
  87:source\asw/swc_output.c ****  * signalOUT: so_brakelight
  88:source\asw/swc_output.c ****  * task: tsk_io
  89:source\asw/swc_output.c ****  */
  90:source\asw/swc_output.c **** void OUTPUT_setBrakeLight_run(RTE_event ev){
 216              		.loc 1 90 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL26:
 221 0000 38B5     		push	{r3, r4, r5, lr}
 222              		.cfi_def_cfa_offset 16
 223              		.cfi_offset 3, -16
 224              		.cfi_offset 4, -12
 225              		.cfi_offset 5, -8
 226              		.cfi_offset 14, -4
  91:source\asw/swc_output.c **** 	
  92:source\asw/swc_output.c **** 	/* USER CODE START OUTPUT_setBrakeLight_run */
  93:source\asw/swc_output.c ****         WD_Alive(WATCHDOG_RUN_SETBRAKELIGHT);
 227              		.loc 1 93 0
 228 0002 0320     		movs	r0, #3
 229              	.LVL27:
 230 0004 FFF7FEFF 		bl	WD_Alive
 231              	.LVL28:
  94:source\asw/swc_output.c ****     if (ERROR_isRunnableActive(ERROR_SET_BRAKELIGHT) == FALSE){
 232              		.loc 1 94 0
 233 0008 0320     		movs	r0, #3
 234 000a FFF7FEFF 		bl	ERROR_isRunnableActive
 235              	.LVL29:
 236 000e 0028     		cmp	r0, #0
 237 0010 51D0     		beq	.L17
 238              	.LVL30:
 239              	.LBB33:
 240              	.LBB34:
 186:.\source\rte/sc_speed.h **** }
 241              		.loc 2 186 0
 242 0012 294B     		ldr	r3, .L31
 243 0014 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 244              	.LVL31:
 245              	.LBE34:
 246              	.LBE33:
  95:source\asw/swc_output.c ****         return;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 19


  96:source\asw/swc_output.c ****     
  97:source\asw/swc_output.c ****     }
  98:source\asw/swc_output.c **** 
  99:source\asw/swc_output.c ****     if (RTE_SC_SPEED_getStatus(&SO_SPEED_signal) != RTE_SIGNALSTATUS_VALID) {
 247              		.loc 1 99 0
 248 0016 022B     		cmp	r3, #2
 249 0018 4DD1     		bne	.L17
 250              	.LVL32:
 251              	.LBB35:
 252              	.LBB36:
 290:.\source\rte/sc_speed.h ****    *data = signal->value;
 253              		.loc 2 290 0
 254 001a 274B     		ldr	r3, .L31
 255 001c 9B68     		ldr	r3, [r3, #8]
 256 001e 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 257 0022 012A     		cmp	r2, #1
 258 0024 02D1     		bne	.L19
 259 0026 586A     		ldr	r0, [r3, #36]
 260 0028 FFF7FEFF 		bl	EE_oo_GetResource
 261              	.LVL33:
 262              	.L19:
 291:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 263              		.loc 2 291 0
 264 002c 224B     		ldr	r3, .L31
 265 002e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 266              		.loc 2 292 0
 267 0030 9B68     		ldr	r3, [r3, #8]
 268 0032 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 269 0036 012A     		cmp	r2, #1
 270 0038 02D1     		bne	.L20
 271 003a 586A     		ldr	r0, [r3, #36]
 272 003c FFF7FEFF 		bl	EE_oo_ReleaseResource
 273              	.LVL34:
 274              	.L20:
 275              	.LBE36:
 276              	.LBE35:
 100:source\asw/swc_output.c ****         return;
 101:source\asw/swc_output.c ****     }
 102:source\asw/swc_output.c ****     
 103:source\asw/swc_output.c ****     SC_SPEED_data_t speed = SC_SPEED_INIT_DATA;
 104:source\asw/swc_output.c ****   
 105:source\asw/swc_output.c ****     RTE_SC_SPEED_getThreadSafe(&SO_SPEED_signal, &speed);
 106:source\asw/swc_output.c ****     
 107:source\asw/swc_output.c **** 
 108:source\asw/swc_output.c ****     SC_BRAKELIGHT_data_t brake = SC_BRAKELIGHT_INIT_DATA;
 277              		.loc 1 108 0
 278 0040 4FF00003 		mov	r3, #0
 279              	.LVL35:
 109:source\asw/swc_output.c ****     
 110:source\asw/swc_output.c ****     if (speed.m_speedValue <= 0){
 280              		.loc 1 110 0
 281 0044 14F0FF0F 		tst	r4, #255
 282 0048 01D1     		bne	.L21
 111:source\asw/swc_output.c ****         brake.m_brakeValue = TRUE;
 283              		.loc 1 111 0
 284 004a 4FF00103 		mov	r3, #1
 285              	.L21:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 20


 286              	.LVL36:
 287 004e 1C46     		mov	r4, r3
 288              	.LVL37:
 289              	.LBB37:
 290              	.LBB38:
 291              		.file 4 ".\\source\\rte/sc_brakelight.h"
   1:.\source\rte/sc_brakelight.h **** 
   2:.\source\rte/sc_brakelight.h **** 
   3:.\source\rte/sc_brakelight.h **** /**
   4:.\source\rte/sc_brakelight.h ****  *  file    SC_BRAKELIGHT_signal.h
   5:.\source\rte/sc_brakelight.h ****  *
   6:.\source\rte/sc_brakelight.h ****  *  brief   signal base class for signal sc_brakelight
   7:.\source\rte/sc_brakelight.h ****  *
   8:.\source\rte/sc_brakelight.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_brakelight.h ****  *
  10:.\source\rte/sc_brakelight.h ****  * description: Signal for brake
  11:.\source\rte/sc_brakelight.h ****  * name: sc_brakelight
  12:.\source\rte/sc_brakelight.h ****  * shortname: brakelight
  13:.\source\rte/sc_brakelight.h ****  *
  14:.\source\rte/sc_brakelight.h ****  */
  15:.\source\rte/sc_brakelight.h **** 
  16:.\source\rte/sc_brakelight.h **** 
  17:.\source\rte/sc_brakelight.h **** 
  18:.\source\rte/sc_brakelight.h **** #ifndef SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_brakelight.h **** #define SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_brakelight.h **** 
  21:.\source\rte/sc_brakelight.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_brakelight.h **** #include "global.h"
  23:.\source\rte/sc_brakelight.h **** #include "project.h"
  24:.\source\rte/sc_brakelight.h **** #include "rte.h"
  25:.\source\rte/sc_brakelight.h **** #include "rte_types.h"
  26:.\source\rte/sc_brakelight.h **** 
  27:.\source\rte/sc_brakelight.h **** #include "sc_brakelight_type.h"
  28:.\source\rte/sc_brakelight.h **** 
  29:.\source\rte/sc_brakelight.h **** 
  30:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  31:.\source\rte/sc_brakelight.h **** /* The driver API block																						*/
  32:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  33:.\source\rte/sc_brakelight.h ****                                                                                                    
  34:.\source\rte/sc_brakelight.h **** /**
  35:.\source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_brakelight.h ****  *  I-Port
  37:.\source\rte/sc_brakelight.h ****  */
  38:.\source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverIn_t)(SC_BRAKELIGHT_data_t * const);
  39:.\source\rte/sc_brakelight.h **** 
  40:.\source\rte/sc_brakelight.h **** /**
  41:.\source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_brakelight.h ****  *  O-Port
  43:.\source\rte/sc_brakelight.h ****  */
  44:.\source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverOut_t)( const SC_BRAKELIGHT_data_t * const);
  45:.\source\rte/sc_brakelight.h **** 
  46:.\source\rte/sc_brakelight.h **** 
  47:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  48:.\source\rte/sc_brakelight.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  50:.\source\rte/sc_brakelight.h **** 
  51:.\source\rte/sc_brakelight.h **** /**
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 21


  52:.\source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_brakelight.h ****  */
  54:.\source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_cfg_s
  55:.\source\rte/sc_brakelight.h **** {
  56:.\source\rte/sc_brakelight.h ****     /**
  57:.\source\rte/sc_brakelight.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_brakelight.h ****      */
  59:.\source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_driverIn_t const inDriver;
  60:.\source\rte/sc_brakelight.h **** 
  61:.\source\rte/sc_brakelight.h ****     /**
  62:.\source\rte/sc_brakelight.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_brakelight.h ****      */
  64:.\source\rte/sc_brakelight.h ****    SC_BRAKELIGHT_driverOut_t const outDriver;
  65:.\source\rte/sc_brakelight.h ****    
  66:.\source\rte/sc_brakelight.h ****     /**
  67:.\source\rte/sc_brakelight.h ****      * Event onUpdate
  68:.\source\rte/sc_brakelight.h ****      */
  69:.\source\rte/sc_brakelight.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_brakelight.h ****     
  71:.\source\rte/sc_brakelight.h ****     
  72:.\source\rte/sc_brakelight.h ****     /**
  73:.\source\rte/sc_brakelight.h ****      * Event onError
  74:.\source\rte/sc_brakelight.h ****      */
  75:.\source\rte/sc_brakelight.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_brakelight.h ****     
  77:.\source\rte/sc_brakelight.h ****     /**
  78:.\source\rte/sc_brakelight.h ****      * Task Count onUpdate
  79:.\source\rte/sc_brakelight.h ****      */
  80:.\source\rte/sc_brakelight.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_brakelight.h **** 
  82:.\source\rte/sc_brakelight.h ****     /**
  83:.\source\rte/sc_brakelight.h ****      * Task List onUpdate
  84:.\source\rte/sc_brakelight.h ****      */
  85:.\source\rte/sc_brakelight.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_brakelight.h ****     
  87:.\source\rte/sc_brakelight.h ****     /**
  88:.\source\rte/sc_brakelight.h ****      * Task Count onError
  89:.\source\rte/sc_brakelight.h ****      */
  90:.\source\rte/sc_brakelight.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_brakelight.h **** 
  92:.\source\rte/sc_brakelight.h ****     /**
  93:.\source\rte/sc_brakelight.h ****      * Task List onError
  94:.\source\rte/sc_brakelight.h ****      */
  95:.\source\rte/sc_brakelight.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_brakelight.h **** 	
  97:.\source\rte/sc_brakelight.h **** 	
  98:.\source\rte/sc_brakelight.h **** 	/**
  99:.\source\rte/sc_brakelight.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_brakelight.h **** 	 */
 101:.\source\rte/sc_brakelight.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_brakelight.h **** 	 
 103:.\source\rte/sc_brakelight.h **** 	/**
 104:.\source\rte/sc_brakelight.h **** 	 * Ressourse 
 105:.\source\rte/sc_brakelight.h **** 	 */
 106:.\source\rte/sc_brakelight.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_brakelight.h **** 
 108:.\source\rte/sc_brakelight.h **** };                                                                                                 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 22


 109:.\source\rte/sc_brakelight.h **** typedef const struct SC_BRAKELIGHT_cfg_s SC_BRAKELIGHT_cfg_t;
 110:.\source\rte/sc_brakelight.h ****                               
 111:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 112:.\source\rte/sc_brakelight.h **** /* The data interface block																							*/
 113:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 114:.\source\rte/sc_brakelight.h **** 
 115:.\source\rte/sc_brakelight.h ****                                                                                                    
 116:.\source\rte/sc_brakelight.h **** 							  
 117:.\source\rte/sc_brakelight.h **** /**
 118:.\source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_t represent the signal objects.
 119:.\source\rte/sc_brakelight.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_brakelight.h ****  */
 121:.\source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_s
 122:.\source\rte/sc_brakelight.h **** {                                                                                                  
 123:.\source\rte/sc_brakelight.h **** 
 124:.\source\rte/sc_brakelight.h **** 	/**
 125:.\source\rte/sc_brakelight.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_brakelight.h **** 	 */
 127:.\source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_data_t value;
 128:.\source\rte/sc_brakelight.h **** 
 129:.\source\rte/sc_brakelight.h ****     /**
 130:.\source\rte/sc_brakelight.h ****      * Current signal status
 131:.\source\rte/sc_brakelight.h ****      */
 132:.\source\rte/sc_brakelight.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_brakelight.h **** 
 134:.\source\rte/sc_brakelight.h ****     /**
 135:.\source\rte/sc_brakelight.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_brakelight.h ****      */
 137:.\source\rte/sc_brakelight.h ****     uint32_t age;
 138:.\source\rte/sc_brakelight.h **** 
 139:.\source\rte/sc_brakelight.h ****     /**
 140:.\source\rte/sc_brakelight.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_brakelight.h ****      */
 142:.\source\rte/sc_brakelight.h **** 	const SC_BRAKELIGHT_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_brakelight.h **** 
 144:.\source\rte/sc_brakelight.h **** };                                                                                                 
 145:.\source\rte/sc_brakelight.h **** typedef struct SC_BRAKELIGHT_s SC_BRAKELIGHT_t;
 146:.\source\rte/sc_brakelight.h **** 
 147:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 148:.\source\rte/sc_brakelight.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 150:.\source\rte/sc_brakelight.h **** 
 151:.\source\rte/sc_brakelight.h **** /**
 152:.\source\rte/sc_brakelight.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_brakelight.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_brakelight.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_brakelight.h ****  *
 156:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_brakelight.h ****  *
 159:.\source\rte/sc_brakelight.h ****  **/
 160:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_init( SC_BRAKELIGHT_t * const signal )
 161:.\source\rte/sc_brakelight.h **** {                                                                                                  
 162:.\source\rte/sc_brakelight.h **** 
 163:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_brakelight.h **** 
 165:.\source\rte/sc_brakelight.h ****    //Set value and raw value
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 23


 166:.\source\rte/sc_brakelight.h ****    signal->value  = SC_BRAKELIGHT_INIT_DATA;
 167:.\source\rte/sc_brakelight.h ****    signal->age    = 0;
 168:.\source\rte/sc_brakelight.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_brakelight.h **** 
 170:.\source\rte/sc_brakelight.h ****    return ret;
 171:.\source\rte/sc_brakelight.h **** }
 172:.\source\rte/sc_brakelight.h **** 
 173:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 174:.\source\rte/sc_brakelight.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 176:.\source\rte/sc_brakelight.h **** 
 177:.\source\rte/sc_brakelight.h **** /**
 178:.\source\rte/sc_brakelight.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_brakelight.h ****  *
 180:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_brakelight.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_brakelight.h ****  *
 183:.\source\rte/sc_brakelight.h ****  **/
 184:.\source\rte/sc_brakelight.h **** inline RTE_signalStatus_t RTE_SC_BRAKELIGHT_getStatus( const SC_BRAKELIGHT_t * const signal )
 185:.\source\rte/sc_brakelight.h **** {
 186:.\source\rte/sc_brakelight.h ****    return signal->status;
 187:.\source\rte/sc_brakelight.h **** }
 188:.\source\rte/sc_brakelight.h **** 
 189:.\source\rte/sc_brakelight.h **** 
 190:.\source\rte/sc_brakelight.h **** /**
 191:.\source\rte/sc_brakelight.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_brakelight.h ****  *
 193:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_brakelight.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_brakelight.h ****  *
 197:.\source\rte/sc_brakelight.h ****  */
 198:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_setStatus( SC_BRAKELIGHT_t * const signal, const RTE_signalStatus_t s
 199:.\source\rte/sc_brakelight.h **** {
 200:.\source\rte/sc_brakelight.h ****    signal->status = status;
 201:.\source\rte/sc_brakelight.h ****    size_t taskNum=0;
 202:.\source\rte/sc_brakelight.h ****    
 203:.\source\rte/sc_brakelight.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_brakelight.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_brakelight.h ****    {
 206:.\source\rte/sc_brakelight.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_brakelight.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_brakelight.h **** 
 209:.\source\rte/sc_brakelight.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_brakelight.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_brakelight.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_brakelight.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_brakelight.h **** 			}
 214:.\source\rte/sc_brakelight.h **** 		}
 215:.\source\rte/sc_brakelight.h ****    }
 216:.\source\rte/sc_brakelight.h ****    
 217:.\source\rte/sc_brakelight.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_brakelight.h **** }
 219:.\source\rte/sc_brakelight.h **** 
 220:.\source\rte/sc_brakelight.h **** 
 221:.\source\rte/sc_brakelight.h **** /**
 222:.\source\rte/sc_brakelight.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 24


 223:.\source\rte/sc_brakelight.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_brakelight.h ****  *
 225:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_brakelight.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_brakelight.h ****  */
 228:.\source\rte/sc_brakelight.h **** inline uint32_t RTE_SC_BRAKELIGHT_getAge( const SC_BRAKELIGHT_t * const signal )
 229:.\source\rte/sc_brakelight.h **** {
 230:.\source\rte/sc_brakelight.h ****    return signal->age;
 231:.\source\rte/sc_brakelight.h **** }
 232:.\source\rte/sc_brakelight.h **** 
 233:.\source\rte/sc_brakelight.h **** /**
 234:.\source\rte/sc_brakelight.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_brakelight.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_brakelight.h ****  * @return void
 238:.\source\rte/sc_brakelight.h ****  */
 239:.\source\rte/sc_brakelight.h **** inline void RTE_SC_BRAKELIGHT_incAge(  SC_BRAKELIGHT_t * const signal , uint32_t increment)
 240:.\source\rte/sc_brakelight.h **** {
 241:.\source\rte/sc_brakelight.h **** 	   //Hack....
 242:.\source\rte/sc_brakelight.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_brakelight.h **** 	   {
 244:.\source\rte/sc_brakelight.h **** 	      signal->age += increment;
 245:.\source\rte/sc_brakelight.h **** 	   }
 246:.\source\rte/sc_brakelight.h **** }
 247:.\source\rte/sc_brakelight.h **** 
 248:.\source\rte/sc_brakelight.h **** 
 249:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 250:.\source\rte/sc_brakelight.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 252:.\source\rte/sc_brakelight.h **** 
 253:.\source\rte/sc_brakelight.h **** /**
 254:.\source\rte/sc_brakelight.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_brakelight.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_brakelight.h ****  *
 257:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_brakelight.h ****  * @return sc_brakelight_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_brakelight.h ****  *
 260:.\source\rte/sc_brakelight.h ****  **/
 261:.\source\rte/sc_brakelight.h **** inline SC_BRAKELIGHT_data_t* RTE_SC_BRAKELIGHT_getPtr( SC_BRAKELIGHT_t * const signal )
 262:.\source\rte/sc_brakelight.h **** {               
 263:.\source\rte/sc_brakelight.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_brakelight.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_brakelight.h **** }
 266:.\source\rte/sc_brakelight.h **** 
 267:.\source\rte/sc_brakelight.h **** /**
 268:.\source\rte/sc_brakelight.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_brakelight.h ****  *
 270:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_brakelight.h ****  * @return sc_brakelight_data_t: current value of the application data buffer
 272:.\source\rte/sc_brakelight.h ****  *
 273:.\source\rte/sc_brakelight.h ****  **/
 274:.\source\rte/sc_brakelight.h **** inline SC_BRAKELIGHT_data_t RTE_SC_BRAKELIGHT_get( const SC_BRAKELIGHT_t * const signal )
 275:.\source\rte/sc_brakelight.h **** {               
 276:.\source\rte/sc_brakelight.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_brakelight.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_brakelight.h **** }                                                                                                  
 279:.\source\rte/sc_brakelight.h ****                                                                                                    
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 25


 280:.\source\rte/sc_brakelight.h **** /**
 281:.\source\rte/sc_brakelight.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_brakelight.h ****  *
 283:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_brakelight.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_brakelight.h ****  *
 287:.\source\rte/sc_brakelight.h ****  **/
 288:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_getThreadSafe( const SC_BRAKELIGHT_t * const signal, SC_BRAKELIGHT_da
 289:.\source\rte/sc_brakelight.h **** {    
 290:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_brakelight.h ****    *data = signal->value;
 292:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_brakelight.h **** 
 294:.\source\rte/sc_brakelight.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_brakelight.h ****    
 296:.\source\rte/sc_brakelight.h **** }                                                                                                  
 297:.\source\rte/sc_brakelight.h ****                                                                                                    
 298:.\source\rte/sc_brakelight.h **** /**
 299:.\source\rte/sc_brakelight.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_brakelight.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_brakelight.h ****  * signal specific scaling function.
 302:.\source\rte/sc_brakelight.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_brakelight.h ****  *
 304:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_brakelight.h ****  * @param  sc_brakelight_data_t const value: value for the application data buffer
 306:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_brakelight.h ****  *
 308:.\source\rte/sc_brakelight.h ****  **/
 309:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_set(SC_BRAKELIGHT_t * const signal, const SC_BRAKELIGHT_data_t value 
 310:.\source\rte/sc_brakelight.h **** {
 311:.\source\rte/sc_brakelight.h **** 
 312:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_brakelight.h ****    size_t taskNum=0;
 314:.\source\rte/sc_brakelight.h **** 
 315:.\source\rte/sc_brakelight.h **** 
 316:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 292              		.loc 4 316 0
 293 0050 1A4B     		ldr	r3, .L31+4
 294              	.LVL38:
 295 0052 9B68     		ldr	r3, [r3, #8]
 296 0054 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 297 0058 012A     		cmp	r2, #1
 298 005a 02D1     		bne	.L22
 299 005c 586A     		ldr	r0, [r3, #36]
 300 005e FFF7FEFF 		bl	EE_oo_GetResource
 301              	.LVL39:
 302              	.L22:
 317:.\source\rte/sc_brakelight.h ****    signal->value  = value;
 303              		.loc 4 317 0
 304 0062 164B     		ldr	r3, .L31+4
 305              	.LVL40:
 306 0064 1C70     		strb	r4, [r3]
 318:.\source\rte/sc_brakelight.h ****    signal->age    = 0;
 307              		.loc 4 318 0
 308 0066 0022     		movs	r2, #0
 309 0068 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 26


 319:.\source\rte/sc_brakelight.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 310              		.loc 4 319 0
 311 006a 0222     		movs	r2, #2
 312 006c 5A70     		strb	r2, [r3, #1]
 320:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 313              		.loc 4 320 0
 314 006e 9B68     		ldr	r3, [r3, #8]
 315 0070 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 316 0074 012A     		cmp	r2, #1
 317 0076 02D1     		bne	.L23
 318 0078 586A     		ldr	r0, [r3, #36]
 319 007a FFF7FEFF 		bl	EE_oo_ReleaseResource
 320              	.LVL41:
 321              	.L23:
 321:.\source\rte/sc_brakelight.h **** 
 322:.\source\rte/sc_brakelight.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_brakelight.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 322              		.loc 4 323 0
 323 007e 0F4B     		ldr	r3, .L31+4
 324 0080 9B68     		ldr	r3, [r3, #8]
 325 0082 5D69     		ldr	r5, [r3, #20]
 326              	.LVL42:
 324:.\source\rte/sc_brakelight.h **** 
 325:.\source\rte/sc_brakelight.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 327              		.loc 4 325 0
 328 0084 9B68     		ldr	r3, [r3, #8]
 329 0086 73B1     		cbz	r3, .L24
 330 0088 3DB9     		cbnz	r5, .L29
 331 008a 0CE0     		b	.L24
 332              	.LVL43:
 333              	.L26:
 334              	.LBB39:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_brakelight.h **** 		  
 328:.\source\rte/sc_brakelight.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_brakelight.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 335              		.loc 4 329 0
 336 008c 9968     		ldr	r1, [r3, #8]
 337 008e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 338 0092 FFF7FEFF 		bl	EE_oo_SetEvent
 339              	.LVL44:
 340              	.LBE39:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 341              		.loc 4 326 0
 342 0096 0134     		adds	r4, r4, #1
 343              	.LVL45:
 344 0098 00E0     		b	.L25
 345              	.LVL46:
 346              	.L29:
 325:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 347              		.loc 4 325 0
 348 009a 0024     		movs	r4, #0
 349              	.LVL47:
 350              	.L25:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 351              		.loc 4 326 0
 352 009c 074B     		ldr	r3, .L31+4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 27


 353 009e 9B68     		ldr	r3, [r3, #8]
 354 00a0 1A69     		ldr	r2, [r3, #16]
 355 00a2 9442     		cmp	r4, r2
 356 00a4 F2D3     		bcc	.L26
 357              	.LVL48:
 358              	.L24:
 359              	.LBE38:
 360              	.LBE37:
 361              	.LBB40:
 362              	.LBB41:
 330:.\source\rte/sc_brakelight.h ****       }
 331:.\source\rte/sc_brakelight.h ****    }
 332:.\source\rte/sc_brakelight.h **** 
 333:.\source\rte/sc_brakelight.h ****    return ret;
 334:.\source\rte/sc_brakelight.h **** }                                                                                                  
 335:.\source\rte/sc_brakelight.h ****                                                                                                    
 336:.\source\rte/sc_brakelight.h ****                                                                                                    
 337:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 338:.\source\rte/sc_brakelight.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 340:.\source\rte/sc_brakelight.h **** 
 341:.\source\rte/sc_brakelight.h ****                                                                                                    
 342:.\source\rte/sc_brakelight.h **** /**
 343:.\source\rte/sc_brakelight.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_brakelight.h ****  *
 345:.\source\rte/sc_brakelight.h ****  * @param SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_brakelight.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_brakelight.h ****  *
 348:.\source\rte/sc_brakelight.h ****  */
 349:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_pullPort( SC_BRAKELIGHT_t * const signal )
 350:.\source\rte/sc_brakelight.h **** {                                                                                                  
 351:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_brakelight.h **** 
 353:.\source\rte/sc_brakelight.h ****                                                                                                    
 354:.\source\rte/sc_brakelight.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_brakelight.h ****    {
 356:.\source\rte/sc_brakelight.h **** 	  SC_BRAKELIGHT_data_t value = signal->value;
 357:.\source\rte/sc_brakelight.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_brakelight.h ****                                                                                                    
 359:.\source\rte/sc_brakelight.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_brakelight.h ****       {
 361:.\source\rte/sc_brakelight.h ****     	  //Critical Section
 362:.\source\rte/sc_brakelight.h ****     	  RTE_SC_BRAKELIGHT_set(signal, value);
 363:.\source\rte/sc_brakelight.h ****       }
 364:.\source\rte/sc_brakelight.h ****       else
 365:.\source\rte/sc_brakelight.h ****       {
 366:.\source\rte/sc_brakelight.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_brakelight.h **** 		  RTE_SC_BRAKELIGHT_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_brakelight.h ****       }
 369:.\source\rte/sc_brakelight.h **** 
 370:.\source\rte/sc_brakelight.h ****    }                                                                                               
 371:.\source\rte/sc_brakelight.h ****                                                                                                    
 372:.\source\rte/sc_brakelight.h ****    return ret;                                                                                     
 373:.\source\rte/sc_brakelight.h **** }                                                                                                  
 374:.\source\rte/sc_brakelight.h ****                                                                                                    
 375:.\source\rte/sc_brakelight.h **** /**
 376:.\source\rte/sc_brakelight.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 28


 377:.\source\rte/sc_brakelight.h ****  *
 378:.\source\rte/sc_brakelight.h ****  * @param SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_brakelight.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_brakelight.h ****  *
 381:.\source\rte/sc_brakelight.h ****  **/
 382:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_pushPort( const SC_BRAKELIGHT_t * const signal )
 383:.\source\rte/sc_brakelight.h **** {                                                                                                  
 384:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_brakelight.h **** 
 386:.\source\rte/sc_brakelight.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 363              		.loc 4 386 0
 364 00a6 054B     		ldr	r3, .L31+4
 365 00a8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 366 00aa 022B     		cmp	r3, #2
 367 00ac 03D1     		bne	.L17
 387:.\source\rte/sc_brakelight.h ****    {
 388:.\source\rte/sc_brakelight.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 368              		.loc 4 388 0
 369 00ae 0348     		ldr	r0, .L31+4
 370 00b0 8368     		ldr	r3, [r0, #8]
 371 00b2 5B68     		ldr	r3, [r3, #4]
 372 00b4 9847     		blx	r3
 373              	.LVL49:
 374              	.L17:
 375 00b6 38BD     		pop	{r3, r4, r5, pc}
 376              	.LVL50:
 377              	.L32:
 378              		.align	2
 379              	.L31:
 380 00b8 00000000 		.word	SO_SPEED_signal
 381 00bc 00000000 		.word	SO_BRAKELIGHT_signal
 382              	.LBE41:
 383              	.LBE40:
 384              		.cfi_endproc
 385              	.LFE166:
 386              		.size	OUTPUT_setBrakeLight_run, .-OUTPUT_setBrakeLight_run
 387              		.text
 388              	.Letext0:
 389              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 390              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 391              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 392              		.file 8 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 393              		.file 9 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
 394              		.file 10 "Generated_Source\\PSoC5/ErikaOS_ee_oo_common.inc"
 395              		.file 11 ".\\source\\bsw/global.h"
 396              		.file 12 ".\\source\\rte/rte_types.h"
 397              		.file 13 ".\\source\\rte/rte.h"
 398              		.file 14 "source\\asw\\watchdog.h"
 399              		.file 15 ".\\source\\bsw/error.h"
 400              		.file 16 ".\\source\\rte/sc_speed_type.h"
 401              		.file 17 ".\\source\\rte/sc_engine_type.h"
 402              		.file 18 ".\\source\\rte/sc_brakelight_type.h"
 403              		.file 19 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 404              		.file 20 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 405              		.file 21 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 406              		.file 22 "Generated_Source\\PSoC5/core_cm3.h"
 407              		.file 23 ".\\source\\rte/sp_common.h"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 29


 408              		.file 24 "Generated_Source\\PSoC5/ErikaOS_ee_oo_kernel.inc"
 409              		.section	.debug_info,"",%progbits
 410              	.Ldebug_info0:
 411 0000 240C0000 		.4byte	0xc24
 412 0004 0400     		.2byte	0x4
 413 0006 00000000 		.4byte	.Ldebug_abbrev0
 414 000a 04       		.byte	0x4
 415 000b 01       		.uleb128 0x1
 416 000c 48020000 		.4byte	.LASF144
 417 0010 0C       		.byte	0xc
 418 0011 22040000 		.4byte	.LASF145
 419 0015 79050000 		.4byte	.LASF146
 420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 421 001d 00000000 		.4byte	0
 422 0021 00000000 		.4byte	.Ldebug_line0
 423 0025 02       		.uleb128 0x2
 424 0026 01       		.byte	0x1
 425 0027 06       		.byte	0x6
 426 0028 0F090000 		.4byte	.LASF0
 427 002c 03       		.uleb128 0x3
 428 002d C6060000 		.4byte	.LASF4
 429 0031 05       		.byte	0x5
 430 0032 1D       		.byte	0x1d
 431 0033 37000000 		.4byte	0x37
 432 0037 02       		.uleb128 0x2
 433 0038 01       		.byte	0x1
 434 0039 08       		.byte	0x8
 435 003a D3070000 		.4byte	.LASF1
 436 003e 02       		.uleb128 0x2
 437 003f 02       		.byte	0x2
 438 0040 05       		.byte	0x5
 439 0041 4C060000 		.4byte	.LASF2
 440 0045 02       		.uleb128 0x2
 441 0046 02       		.byte	0x2
 442 0047 07       		.byte	0x7
 443 0048 1B090000 		.4byte	.LASF3
 444 004c 03       		.uleb128 0x3
 445 004d BD000000 		.4byte	.LASF5
 446 0051 05       		.byte	0x5
 447 0052 3F       		.byte	0x3f
 448 0053 57000000 		.4byte	0x57
 449 0057 02       		.uleb128 0x2
 450 0058 04       		.byte	0x4
 451 0059 05       		.byte	0x5
 452 005a 70060000 		.4byte	.LASF6
 453 005e 03       		.uleb128 0x3
 454 005f E1070000 		.4byte	.LASF7
 455 0063 05       		.byte	0x5
 456 0064 41       		.byte	0x41
 457 0065 69000000 		.4byte	0x69
 458 0069 02       		.uleb128 0x2
 459 006a 04       		.byte	0x4
 460 006b 07       		.byte	0x7
 461 006c 6D070000 		.4byte	.LASF8
 462 0070 02       		.uleb128 0x2
 463 0071 08       		.byte	0x8
 464 0072 05       		.byte	0x5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 30


 465 0073 7B040000 		.4byte	.LASF9
 466 0077 02       		.uleb128 0x2
 467 0078 08       		.byte	0x8
 468 0079 07       		.byte	0x7
 469 007a DD010000 		.4byte	.LASF10
 470 007e 04       		.uleb128 0x4
 471 007f 04       		.byte	0x4
 472 0080 05       		.byte	0x5
 473 0081 696E7400 		.ascii	"int\000"
 474 0085 02       		.uleb128 0x2
 475 0086 04       		.byte	0x4
 476 0087 07       		.byte	0x7
 477 0088 89000000 		.4byte	.LASF11
 478 008c 03       		.uleb128 0x3
 479 008d 13040000 		.4byte	.LASF12
 480 0091 06       		.byte	0x6
 481 0092 18       		.byte	0x18
 482 0093 2C000000 		.4byte	0x2c
 483 0097 03       		.uleb128 0x3
 484 0098 92070000 		.4byte	.LASF13
 485 009c 06       		.byte	0x6
 486 009d 2C       		.byte	0x2c
 487 009e 4C000000 		.4byte	0x4c
 488 00a2 03       		.uleb128 0x3
 489 00a3 9A010000 		.4byte	.LASF14
 490 00a7 06       		.byte	0x6
 491 00a8 30       		.byte	0x30
 492 00a9 5E000000 		.4byte	0x5e
 493 00ad 02       		.uleb128 0x2
 494 00ae 04       		.byte	0x4
 495 00af 04       		.byte	0x4
 496 00b0 C1010000 		.4byte	.LASF15
 497 00b4 02       		.uleb128 0x2
 498 00b5 08       		.byte	0x8
 499 00b6 04       		.byte	0x4
 500 00b7 59090000 		.4byte	.LASF16
 501 00bb 02       		.uleb128 0x2
 502 00bc 01       		.byte	0x1
 503 00bd 08       		.byte	0x8
 504 00be 95030000 		.4byte	.LASF17
 505 00c2 03       		.uleb128 0x3
 506 00c3 EB020000 		.4byte	.LASF18
 507 00c7 07       		.byte	0x7
 508 00c8 D8       		.byte	0xd8
 509 00c9 85000000 		.4byte	0x85
 510 00cd 02       		.uleb128 0x2
 511 00ce 08       		.byte	0x8
 512 00cf 04       		.byte	0x4
 513 00d0 CB050000 		.4byte	.LASF19
 514 00d4 03       		.uleb128 0x3
 515 00d5 3C070000 		.4byte	.LASF20
 516 00d9 08       		.byte	0x8
 517 00da 53       		.byte	0x53
 518 00db 7E000000 		.4byte	0x7e
 519 00df 03       		.uleb128 0x3
 520 00e0 0E060000 		.4byte	.LASF21
 521 00e4 08       		.byte	0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 31


 522 00e5 54       		.byte	0x54
 523 00e6 85000000 		.4byte	0x85
 524 00ea 03       		.uleb128 0x3
 525 00eb 34070000 		.4byte	.LASF22
 526 00ef 09       		.byte	0x9
 527 00f0 4D       		.byte	0x4d
 528 00f1 DF000000 		.4byte	0xdf
 529 00f5 03       		.uleb128 0x3
 530 00f6 0C010000 		.4byte	.LASF23
 531 00fa 09       		.byte	0x9
 532 00fb 4F       		.byte	0x4f
 533 00fc DF000000 		.4byte	0xdf
 534 0100 03       		.uleb128 0x3
 535 0101 1E020000 		.4byte	.LASF24
 536 0105 09       		.byte	0x9
 537 0106 78       		.byte	0x78
 538 0107 D4000000 		.4byte	0xd4
 539 010b 05       		.uleb128 0x5
 540 010c 08020000 		.4byte	.LASF25
 541 0110 0A       		.byte	0xa
 542 0111 F701     		.2byte	0x1f7
 543 0113 00010000 		.4byte	0x100
 544 0117 05       		.uleb128 0x5
 545 0118 11020000 		.4byte	.LASF26
 546 011c 0A       		.byte	0xa
 547 011d 2102     		.2byte	0x221
 548 011f EA000000 		.4byte	0xea
 549 0123 05       		.uleb128 0x5
 550 0124 65000000 		.4byte	.LASF27
 551 0128 0A       		.byte	0xa
 552 0129 2C02     		.2byte	0x22c
 553 012b EA000000 		.4byte	0xea
 554 012f 02       		.uleb128 0x2
 555 0130 04       		.byte	0x4
 556 0131 07       		.byte	0x7
 557 0132 45070000 		.4byte	.LASF28
 558 0136 03       		.uleb128 0x3
 559 0137 C0030000 		.4byte	.LASF29
 560 013b 0B       		.byte	0xb
 561 013c 9C       		.byte	0x9c
 562 013d 37000000 		.4byte	0x37
 563 0141 06       		.uleb128 0x6
 564 0142 01       		.byte	0x1
 565 0143 25000000 		.4byte	0x25
 566 0147 0B       		.byte	0xb
 567 0148 CF       		.byte	0xcf
 568 0149 EA010000 		.4byte	0x1ea
 569 014d 07       		.uleb128 0x7
 570 014e 9A030000 		.4byte	.LASF30
 571 0152 00       		.byte	0
 572 0153 08       		.uleb128 0x8
 573 0154 A3010000 		.4byte	.LASF31
 574 0158 7F       		.sleb128 -1
 575 0159 08       		.uleb128 0x8
 576 015a C7000000 		.4byte	.LASF32
 577 015e 7E       		.sleb128 -2
 578 015f 08       		.uleb128 0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 32


 579 0160 96000000 		.4byte	.LASF33
 580 0164 7D       		.sleb128 -3
 581 0165 08       		.uleb128 0x8
 582 0166 5A050000 		.4byte	.LASF34
 583 016a 7C       		.sleb128 -4
 584 016b 08       		.uleb128 0x8
 585 016c B2090000 		.4byte	.LASF35
 586 0170 7B       		.sleb128 -5
 587 0171 08       		.uleb128 0x8
 588 0172 C2070000 		.4byte	.LASF36
 589 0176 7A       		.sleb128 -6
 590 0177 08       		.uleb128 0x8
 591 0178 3B050000 		.4byte	.LASF37
 592 017c 79       		.sleb128 -7
 593 017d 08       		.uleb128 0x8
 594 017e 2A030000 		.4byte	.LASF38
 595 0182 78       		.sleb128 -8
 596 0183 08       		.uleb128 0x8
 597 0184 0F080000 		.4byte	.LASF39
 598 0188 77       		.sleb128 -9
 599 0189 08       		.uleb128 0x8
 600 018a 2B060000 		.4byte	.LASF40
 601 018e 76       		.sleb128 -10
 602 018f 08       		.uleb128 0x8
 603 0190 D5000000 		.4byte	.LASF41
 604 0194 75       		.sleb128 -11
 605 0195 08       		.uleb128 0x8
 606 0196 CF010000 		.4byte	.LASF42
 607 019a 74       		.sleb128 -12
 608 019b 08       		.uleb128 0x8
 609 019c F2020000 		.4byte	.LASF43
 610 01a0 73       		.sleb128 -13
 611 01a1 08       		.uleb128 0x8
 612 01a2 18060000 		.4byte	.LASF44
 613 01a6 72       		.sleb128 -14
 614 01a7 08       		.uleb128 0x8
 615 01a8 51000000 		.4byte	.LASF45
 616 01ac 71       		.sleb128 -15
 617 01ad 08       		.uleb128 0x8
 618 01ae B5060000 		.4byte	.LASF46
 619 01b2 70       		.sleb128 -16
 620 01b3 08       		.uleb128 0x8
 621 01b4 10070000 		.4byte	.LASF47
 622 01b8 6F       		.sleb128 -17
 623 01b9 08       		.uleb128 0x8
 624 01ba AC010000 		.4byte	.LASF48
 625 01be 6E       		.sleb128 -18
 626 01bf 08       		.uleb128 0x8
 627 01c0 17000000 		.4byte	.LASF49
 628 01c4 6D       		.sleb128 -19
 629 01c5 08       		.uleb128 0x8
 630 01c6 39060000 		.4byte	.LASF50
 631 01ca 6C       		.sleb128 -20
 632 01cb 08       		.uleb128 0x8
 633 01cc 01040000 		.4byte	.LASF51
 634 01d0 6B       		.sleb128 -21
 635 01d1 08       		.uleb128 0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 33


 636 01d2 A3040000 		.4byte	.LASF52
 637 01d6 6A       		.sleb128 -22
 638 01d7 08       		.uleb128 0x8
 639 01d8 E7000000 		.4byte	.LASF53
 640 01dc 69       		.sleb128 -23
 641 01dd 08       		.uleb128 0x8
 642 01de 55080000 		.4byte	.LASF54
 643 01e2 68       		.sleb128 -24
 644 01e3 08       		.uleb128 0x8
 645 01e4 9C060000 		.4byte	.LASF55
 646 01e8 67       		.sleb128 -25
 647 01e9 00       		.byte	0
 648 01ea 03       		.uleb128 0x3
 649 01eb 8D070000 		.4byte	.LASF56
 650 01ef 0B       		.byte	0xb
 651 01f0 EA       		.byte	0xea
 652 01f1 41010000 		.4byte	0x141
 653 01f5 03       		.uleb128 0x3
 654 01f6 7F070000 		.4byte	.LASF57
 655 01fa 0C       		.byte	0xc
 656 01fb 19       		.byte	0x19
 657 01fc 00020000 		.4byte	0x200
 658 0200 09       		.uleb128 0x9
 659 0201 0B010000 		.4byte	0x10b
 660 0205 0B020000 		.4byte	0x20b
 661 0209 0A       		.uleb128 0xa
 662 020a 00       		.byte	0
 663 020b 03       		.uleb128 0x3
 664 020c 25020000 		.4byte	.LASF58
 665 0210 0C       		.byte	0xc
 666 0211 21       		.byte	0x21
 667 0212 23010000 		.4byte	0x123
 668 0216 06       		.uleb128 0x6
 669 0217 01       		.byte	0x1
 670 0218 37000000 		.4byte	0x37
 671 021c 0D       		.byte	0xd
 672 021d 59       		.byte	0x59
 673 021e 3B020000 		.4byte	0x23b
 674 0222 07       		.uleb128 0x7
 675 0223 99090000 		.4byte	.LASF59
 676 0227 00       		.byte	0
 677 0228 07       		.uleb128 0x7
 678 0229 3C090000 		.4byte	.LASF60
 679 022d 01       		.byte	0x1
 680 022e 07       		.uleb128 0x7
 681 022f E4060000 		.4byte	.LASF61
 682 0233 02       		.byte	0x2
 683 0234 07       		.uleb128 0x7
 684 0235 D7050000 		.4byte	.LASF62
 685 0239 03       		.byte	0x3
 686 023a 00       		.byte	0
 687 023b 03       		.uleb128 0x3
 688 023c 86090000 		.4byte	.LASF63
 689 0240 0D       		.byte	0xd
 690 0241 5E       		.byte	0x5e
 691 0242 16020000 		.4byte	0x216
 692 0246 06       		.uleb128 0x6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 34


 693 0247 01       		.byte	0x1
 694 0248 37000000 		.4byte	0x37
 695 024c 0E       		.byte	0xe
 696 024d 2B       		.byte	0x2b
 697 024e 77020000 		.4byte	0x277
 698 0252 07       		.uleb128 0x7
 699 0253 56060000 		.4byte	.LASF64
 700 0257 00       		.byte	0
 701 0258 07       		.uleb128 0x7
 702 0259 A4000000 		.4byte	.LASF65
 703 025d 01       		.byte	0x1
 704 025e 07       		.uleb128 0x7
 705 025f 3E080000 		.4byte	.LASF66
 706 0263 02       		.byte	0x2
 707 0264 07       		.uleb128 0x7
 708 0265 E3040000 		.4byte	.LASF67
 709 0269 03       		.byte	0x3
 710 026a 07       		.uleb128 0x7
 711 026b D6020000 		.4byte	.LASF68
 712 026f 04       		.byte	0x4
 713 0270 07       		.uleb128 0x7
 714 0271 E6080000 		.4byte	.LASF69
 715 0275 05       		.byte	0x5
 716 0276 00       		.byte	0
 717 0277 06       		.uleb128 0x6
 718 0278 01       		.byte	0x1
 719 0279 37000000 		.4byte	0x37
 720 027d 0F       		.byte	0xf
 721 027e 2B       		.byte	0x2b
 722 027f A2020000 		.4byte	0x2a2
 723 0283 07       		.uleb128 0x7
 724 0284 C4080000 		.4byte	.LASF70
 725 0288 00       		.byte	0
 726 0289 07       		.uleb128 0x7
 727 028a FE000000 		.4byte	.LASF71
 728 028e 01       		.byte	0x1
 729 028f 07       		.uleb128 0x7
 730 0290 75090000 		.4byte	.LASF72
 731 0294 02       		.byte	0x2
 732 0295 07       		.uleb128 0x7
 733 0296 2A000000 		.4byte	.LASF73
 734 029a 03       		.byte	0x3
 735 029b 07       		.uleb128 0x7
 736 029c 6D040000 		.4byte	.LASF74
 737 02a0 04       		.byte	0x4
 738 02a1 00       		.byte	0
 739 02a2 0B       		.uleb128 0xb
 740 02a3 23010000 		.4byte	0x123
 741 02a7 0B       		.uleb128 0xb
 742 02a8 C2000000 		.4byte	0xc2
 743 02ac 0C       		.uleb128 0xc
 744 02ad 04       		.byte	0x4
 745 02ae F5010000 		.4byte	0x1f5
 746 02b2 0B       		.uleb128 0xb
 747 02b3 AC020000 		.4byte	0x2ac
 748 02b7 0B       		.uleb128 0xb
 749 02b8 36010000 		.4byte	0x136
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 35


 750 02bc 0B       		.uleb128 0xb
 751 02bd 17010000 		.4byte	0x117
 752 02c1 0D       		.uleb128 0xd
 753 02c2 01       		.byte	0x1
 754 02c3 10       		.byte	0x10
 755 02c4 21       		.byte	0x21
 756 02c5 D6020000 		.4byte	0x2d6
 757 02c9 0E       		.uleb128 0xe
 758 02ca FE040000 		.4byte	.LASF78
 759 02ce 10       		.byte	0x10
 760 02cf 23       		.byte	0x23
 761 02d0 8C000000 		.4byte	0x8c
 762 02d4 00       		.byte	0
 763 02d5 00       		.byte	0
 764 02d6 03       		.uleb128 0x3
 765 02d7 85030000 		.4byte	.LASF75
 766 02db 10       		.byte	0x10
 767 02dc 26       		.byte	0x26
 768 02dd C1020000 		.4byte	0x2c1
 769 02e1 03       		.uleb128 0x3
 770 02e2 66080000 		.4byte	.LASF76
 771 02e6 02       		.byte	0x2
 772 02e7 26       		.byte	0x26
 773 02e8 EC020000 		.4byte	0x2ec
 774 02ec 0C       		.uleb128 0xc
 775 02ed 04       		.byte	0x4
 776 02ee F2020000 		.4byte	0x2f2
 777 02f2 0F       		.uleb128 0xf
 778 02f3 EA010000 		.4byte	0x1ea
 779 02f7 01030000 		.4byte	0x301
 780 02fb 10       		.uleb128 0x10
 781 02fc 07030000 		.4byte	0x307
 782 0300 00       		.byte	0
 783 0301 0C       		.uleb128 0xc
 784 0302 04       		.byte	0x4
 785 0303 D6020000 		.4byte	0x2d6
 786 0307 0B       		.uleb128 0xb
 787 0308 01030000 		.4byte	0x301
 788 030c 03       		.uleb128 0x3
 789 030d FA080000 		.4byte	.LASF77
 790 0311 02       		.byte	0x2
 791 0312 2C       		.byte	0x2c
 792 0313 17030000 		.4byte	0x317
 793 0317 0C       		.uleb128 0xc
 794 0318 04       		.byte	0x4
 795 0319 1D030000 		.4byte	0x31d
 796 031d 0F       		.uleb128 0xf
 797 031e EA010000 		.4byte	0x1ea
 798 0322 2C030000 		.4byte	0x32c
 799 0326 10       		.uleb128 0x10
 800 0327 37030000 		.4byte	0x337
 801 032b 00       		.byte	0
 802 032c 0C       		.uleb128 0xc
 803 032d 04       		.byte	0x4
 804 032e 32030000 		.4byte	0x332
 805 0332 0B       		.uleb128 0xb
 806 0333 D6020000 		.4byte	0x2d6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 36


 807 0337 0B       		.uleb128 0xb
 808 0338 2C030000 		.4byte	0x32c
 809 033c 11       		.uleb128 0x11
 810 033d 3F030000 		.4byte	.LASF90
 811 0341 28       		.byte	0x28
 812 0342 02       		.byte	0x2
 813 0343 36       		.byte	0x36
 814 0344 C1030000 		.4byte	0x3c1
 815 0348 0E       		.uleb128 0xe
 816 0349 89040000 		.4byte	.LASF79
 817 034d 02       		.byte	0x2
 818 034e 3B       		.byte	0x3b
 819 034f C1030000 		.4byte	0x3c1
 820 0353 00       		.byte	0
 821 0354 0E       		.uleb128 0xe
 822 0355 6A050000 		.4byte	.LASF80
 823 0359 02       		.byte	0x2
 824 035a 40       		.byte	0x40
 825 035b C6030000 		.4byte	0x3c6
 826 035f 04       		.byte	0x4
 827 0360 0E       		.uleb128 0xe
 828 0361 E5030000 		.4byte	.LASF81
 829 0365 02       		.byte	0x2
 830 0366 45       		.byte	0x45
 831 0367 A2020000 		.4byte	0x2a2
 832 036b 08       		.byte	0x8
 833 036c 0E       		.uleb128 0xe
 834 036d F7070000 		.4byte	.LASF82
 835 0371 02       		.byte	0x2
 836 0372 4B       		.byte	0x4b
 837 0373 A2020000 		.4byte	0x2a2
 838 0377 0C       		.byte	0xc
 839 0378 0E       		.uleb128 0xe
 840 0379 14010000 		.4byte	.LASF83
 841 037d 02       		.byte	0x2
 842 037e 50       		.byte	0x50
 843 037f A7020000 		.4byte	0x2a7
 844 0383 10       		.byte	0x10
 845 0384 0E       		.uleb128 0xe
 846 0385 01080000 		.4byte	.LASF84
 847 0389 02       		.byte	0x2
 848 038a 55       		.byte	0x55
 849 038b B2020000 		.4byte	0x2b2
 850 038f 14       		.byte	0x14
 851 0390 0E       		.uleb128 0xe
 852 0391 92040000 		.4byte	.LASF85
 853 0395 02       		.byte	0x2
 854 0396 5A       		.byte	0x5a
 855 0397 A7020000 		.4byte	0x2a7
 856 039b 18       		.byte	0x18
 857 039c 0E       		.uleb128 0xe
 858 039d D9080000 		.4byte	.LASF86
 859 03a1 02       		.byte	0x2
 860 03a2 5F       		.byte	0x5f
 861 03a3 B2020000 		.4byte	0x2b2
 862 03a7 1C       		.byte	0x1c
 863 03a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 37


 864 03a9 57030000 		.4byte	.LASF87
 865 03ad 02       		.byte	0x2
 866 03ae 65       		.byte	0x65
 867 03af B7020000 		.4byte	0x2b7
 868 03b3 20       		.byte	0x20
 869 03b4 0E       		.uleb128 0xe
 870 03b5 4E030000 		.4byte	.LASF88
 871 03b9 02       		.byte	0x2
 872 03ba 6A       		.byte	0x6a
 873 03bb BC020000 		.4byte	0x2bc
 874 03bf 24       		.byte	0x24
 875 03c0 00       		.byte	0
 876 03c1 0B       		.uleb128 0xb
 877 03c2 E1020000 		.4byte	0x2e1
 878 03c6 0B       		.uleb128 0xb
 879 03c7 0C030000 		.4byte	0x30c
 880 03cb 03       		.uleb128 0x3
 881 03cc 4E070000 		.4byte	.LASF89
 882 03d0 02       		.byte	0x2
 883 03d1 6D       		.byte	0x6d
 884 03d2 D6030000 		.4byte	0x3d6
 885 03d6 0B       		.uleb128 0xb
 886 03d7 3C030000 		.4byte	0x33c
 887 03db 11       		.uleb128 0x11
 888 03dc CA030000 		.4byte	.LASF91
 889 03e0 0C       		.byte	0xc
 890 03e1 02       		.byte	0x2
 891 03e2 79       		.byte	0x79
 892 03e3 18040000 		.4byte	0x418
 893 03e7 0E       		.uleb128 0xe
 894 03e8 2F020000 		.4byte	.LASF92
 895 03ec 02       		.byte	0x2
 896 03ed 7F       		.byte	0x7f
 897 03ee D6020000 		.4byte	0x2d6
 898 03f2 00       		.byte	0
 899 03f3 0E       		.uleb128 0xe
 900 03f4 1B040000 		.4byte	.LASF93
 901 03f8 02       		.byte	0x2
 902 03f9 84       		.byte	0x84
 903 03fa 3B020000 		.4byte	0x23b
 904 03fe 01       		.byte	0x1
 905 03ff 12       		.uleb128 0x12
 906 0400 61676500 		.ascii	"age\000"
 907 0404 02       		.byte	0x2
 908 0405 89       		.byte	0x89
 909 0406 A2000000 		.4byte	0xa2
 910 040a 04       		.byte	0x4
 911 040b 0E       		.uleb128 0xe
 912 040c 7D030000 		.4byte	.LASF94
 913 0410 02       		.byte	0x2
 914 0411 8E       		.byte	0x8e
 915 0412 1E040000 		.4byte	0x41e
 916 0416 08       		.byte	0x8
 917 0417 00       		.byte	0
 918 0418 0C       		.uleb128 0xc
 919 0419 04       		.byte	0x4
 920 041a CB030000 		.4byte	0x3cb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 38


 921 041e 0B       		.uleb128 0xb
 922 041f 18040000 		.4byte	0x418
 923 0423 03       		.uleb128 0x3
 924 0424 D5030000 		.4byte	.LASF95
 925 0428 02       		.byte	0x2
 926 0429 91       		.byte	0x91
 927 042a DB030000 		.4byte	0x3db
 928 042e 0D       		.uleb128 0xd
 929 042f 01       		.byte	0x1
 930 0430 11       		.byte	0x11
 931 0431 21       		.byte	0x21
 932 0432 43040000 		.4byte	0x443
 933 0436 0E       		.uleb128 0xe
 934 0437 2E090000 		.4byte	.LASF96
 935 043b 11       		.byte	0x11
 936 043c 23       		.byte	0x23
 937 043d 8C000000 		.4byte	0x8c
 938 0441 00       		.byte	0
 939 0442 00       		.byte	0
 940 0443 03       		.uleb128 0x3
 941 0444 F0030000 		.4byte	.LASF97
 942 0448 11       		.byte	0x11
 943 0449 26       		.byte	0x26
 944 044a 2E040000 		.4byte	0x42e
 945 044e 03       		.uleb128 0x3
 946 044f 0B050000 		.4byte	.LASF98
 947 0453 03       		.byte	0x3
 948 0454 26       		.byte	0x26
 949 0455 59040000 		.4byte	0x459
 950 0459 0C       		.uleb128 0xc
 951 045a 04       		.byte	0x4
 952 045b 5F040000 		.4byte	0x45f
 953 045f 0F       		.uleb128 0xf
 954 0460 EA010000 		.4byte	0x1ea
 955 0464 6E040000 		.4byte	0x46e
 956 0468 10       		.uleb128 0x10
 957 0469 74040000 		.4byte	0x474
 958 046d 00       		.byte	0
 959 046e 0C       		.uleb128 0xc
 960 046f 04       		.byte	0x4
 961 0470 43040000 		.4byte	0x443
 962 0474 0B       		.uleb128 0xb
 963 0475 6E040000 		.4byte	0x46e
 964 0479 03       		.uleb128 0x3
 965 047a B5040000 		.4byte	.LASF99
 966 047e 03       		.byte	0x3
 967 047f 2C       		.byte	0x2c
 968 0480 84040000 		.4byte	0x484
 969 0484 0C       		.uleb128 0xc
 970 0485 04       		.byte	0x4
 971 0486 8A040000 		.4byte	0x48a
 972 048a 0F       		.uleb128 0xf
 973 048b EA010000 		.4byte	0x1ea
 974 048f 99040000 		.4byte	0x499
 975 0493 10       		.uleb128 0x10
 976 0494 A4040000 		.4byte	0x4a4
 977 0498 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 39


 978 0499 0C       		.uleb128 0xc
 979 049a 04       		.byte	0x4
 980 049b 9F040000 		.4byte	0x49f
 981 049f 0B       		.uleb128 0xb
 982 04a0 43040000 		.4byte	0x443
 983 04a4 0B       		.uleb128 0xb
 984 04a5 99040000 		.4byte	0x499
 985 04a9 11       		.uleb128 0x11
 986 04aa 41010000 		.4byte	.LASF100
 987 04ae 28       		.byte	0x28
 988 04af 03       		.byte	0x3
 989 04b0 36       		.byte	0x36
 990 04b1 2E050000 		.4byte	0x52e
 991 04b5 0E       		.uleb128 0xe
 992 04b6 89040000 		.4byte	.LASF79
 993 04ba 03       		.byte	0x3
 994 04bb 3B       		.byte	0x3b
 995 04bc 2E050000 		.4byte	0x52e
 996 04c0 00       		.byte	0
 997 04c1 0E       		.uleb128 0xe
 998 04c2 6A050000 		.4byte	.LASF80
 999 04c6 03       		.byte	0x3
 1000 04c7 40       		.byte	0x40
 1001 04c8 33050000 		.4byte	0x533
 1002 04cc 04       		.byte	0x4
 1003 04cd 0E       		.uleb128 0xe
 1004 04ce E5030000 		.4byte	.LASF81
 1005 04d2 03       		.byte	0x3
 1006 04d3 45       		.byte	0x45
 1007 04d4 A2020000 		.4byte	0x2a2
 1008 04d8 08       		.byte	0x8
 1009 04d9 0E       		.uleb128 0xe
 1010 04da F7070000 		.4byte	.LASF82
 1011 04de 03       		.byte	0x3
 1012 04df 4B       		.byte	0x4b
 1013 04e0 A2020000 		.4byte	0x2a2
 1014 04e4 0C       		.byte	0xc
 1015 04e5 0E       		.uleb128 0xe
 1016 04e6 14010000 		.4byte	.LASF83
 1017 04ea 03       		.byte	0x3
 1018 04eb 50       		.byte	0x50
 1019 04ec A7020000 		.4byte	0x2a7
 1020 04f0 10       		.byte	0x10
 1021 04f1 0E       		.uleb128 0xe
 1022 04f2 01080000 		.4byte	.LASF84
 1023 04f6 03       		.byte	0x3
 1024 04f7 55       		.byte	0x55
 1025 04f8 B2020000 		.4byte	0x2b2
 1026 04fc 14       		.byte	0x14
 1027 04fd 0E       		.uleb128 0xe
 1028 04fe 92040000 		.4byte	.LASF85
 1029 0502 03       		.byte	0x3
 1030 0503 5A       		.byte	0x5a
 1031 0504 A7020000 		.4byte	0x2a7
 1032 0508 18       		.byte	0x18
 1033 0509 0E       		.uleb128 0xe
 1034 050a D9080000 		.4byte	.LASF86
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 40


 1035 050e 03       		.byte	0x3
 1036 050f 5F       		.byte	0x5f
 1037 0510 B2020000 		.4byte	0x2b2
 1038 0514 1C       		.byte	0x1c
 1039 0515 0E       		.uleb128 0xe
 1040 0516 57030000 		.4byte	.LASF87
 1041 051a 03       		.byte	0x3
 1042 051b 65       		.byte	0x65
 1043 051c B7020000 		.4byte	0x2b7
 1044 0520 20       		.byte	0x20
 1045 0521 0E       		.uleb128 0xe
 1046 0522 4E030000 		.4byte	.LASF88
 1047 0526 03       		.byte	0x3
 1048 0527 6A       		.byte	0x6a
 1049 0528 BC020000 		.4byte	0x2bc
 1050 052c 24       		.byte	0x24
 1051 052d 00       		.byte	0
 1052 052e 0B       		.uleb128 0xb
 1053 052f 4E040000 		.4byte	0x44e
 1054 0533 0B       		.uleb128 0xb
 1055 0534 79040000 		.4byte	0x479
 1056 0538 03       		.uleb128 0x3
 1057 0539 51010000 		.4byte	.LASF101
 1058 053d 03       		.byte	0x3
 1059 053e 6D       		.byte	0x6d
 1060 053f 43050000 		.4byte	0x543
 1061 0543 0B       		.uleb128 0xb
 1062 0544 A9040000 		.4byte	0x4a9
 1063 0548 11       		.uleb128 0x11
 1064 0549 CB040000 		.4byte	.LASF102
 1065 054d 0C       		.byte	0xc
 1066 054e 03       		.byte	0x3
 1067 054f 79       		.byte	0x79
 1068 0550 85050000 		.4byte	0x585
 1069 0554 0E       		.uleb128 0xe
 1070 0555 2F020000 		.4byte	.LASF92
 1071 0559 03       		.byte	0x3
 1072 055a 7F       		.byte	0x7f
 1073 055b 43040000 		.4byte	0x443
 1074 055f 00       		.byte	0
 1075 0560 0E       		.uleb128 0xe
 1076 0561 1B040000 		.4byte	.LASF93
 1077 0565 03       		.byte	0x3
 1078 0566 84       		.byte	0x84
 1079 0567 3B020000 		.4byte	0x23b
 1080 056b 01       		.byte	0x1
 1081 056c 12       		.uleb128 0x12
 1082 056d 61676500 		.ascii	"age\000"
 1083 0571 03       		.byte	0x3
 1084 0572 89       		.byte	0x89
 1085 0573 A2000000 		.4byte	0xa2
 1086 0577 04       		.byte	0x4
 1087 0578 0E       		.uleb128 0xe
 1088 0579 7D030000 		.4byte	.LASF94
 1089 057d 03       		.byte	0x3
 1090 057e 8E       		.byte	0x8e
 1091 057f 8B050000 		.4byte	0x58b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 41


 1092 0583 08       		.byte	0x8
 1093 0584 00       		.byte	0
 1094 0585 0C       		.uleb128 0xc
 1095 0586 04       		.byte	0x4
 1096 0587 38050000 		.4byte	0x538
 1097 058b 0B       		.uleb128 0xb
 1098 058c 85050000 		.4byte	0x585
 1099 0590 03       		.uleb128 0x3
 1100 0591 D7040000 		.4byte	.LASF103
 1101 0595 03       		.byte	0x3
 1102 0596 91       		.byte	0x91
 1103 0597 48050000 		.4byte	0x548
 1104 059b 0D       		.uleb128 0xd
 1105 059c 01       		.byte	0x1
 1106 059d 12       		.byte	0x12
 1107 059e 21       		.byte	0x21
 1108 059f B0050000 		.4byte	0x5b0
 1109 05a3 0E       		.uleb128 0xe
 1110 05a4 4D050000 		.4byte	.LASF104
 1111 05a8 12       		.byte	0x12
 1112 05a9 23       		.byte	0x23
 1113 05aa 36010000 		.4byte	0x136
 1114 05ae 00       		.byte	0
 1115 05af 00       		.byte	0
 1116 05b0 03       		.uleb128 0x3
 1117 05b1 F9050000 		.4byte	.LASF105
 1118 05b5 12       		.byte	0x12
 1119 05b6 26       		.byte	0x26
 1120 05b7 9B050000 		.4byte	0x59b
 1121 05bb 03       		.uleb128 0x3
 1122 05bc 54040000 		.4byte	.LASF106
 1123 05c0 04       		.byte	0x4
 1124 05c1 26       		.byte	0x26
 1125 05c2 C6050000 		.4byte	0x5c6
 1126 05c6 0C       		.uleb128 0xc
 1127 05c7 04       		.byte	0x4
 1128 05c8 CC050000 		.4byte	0x5cc
 1129 05cc 0F       		.uleb128 0xf
 1130 05cd EA010000 		.4byte	0x1ea
 1131 05d1 DB050000 		.4byte	0x5db
 1132 05d5 10       		.uleb128 0x10
 1133 05d6 E1050000 		.4byte	0x5e1
 1134 05da 00       		.byte	0
 1135 05db 0C       		.uleb128 0xc
 1136 05dc 04       		.byte	0x4
 1137 05dd B0050000 		.4byte	0x5b0
 1138 05e1 0B       		.uleb128 0xb
 1139 05e2 DB050000 		.4byte	0x5db
 1140 05e6 03       		.uleb128 0x3
 1141 05e7 3A040000 		.4byte	.LASF107
 1142 05eb 04       		.byte	0x4
 1143 05ec 2C       		.byte	0x2c
 1144 05ed F1050000 		.4byte	0x5f1
 1145 05f1 0C       		.uleb128 0xc
 1146 05f2 04       		.byte	0x4
 1147 05f3 F7050000 		.4byte	0x5f7
 1148 05f7 0F       		.uleb128 0xf
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 42


 1149 05f8 EA010000 		.4byte	0x1ea
 1150 05fc 06060000 		.4byte	0x606
 1151 0600 10       		.uleb128 0x10
 1152 0601 11060000 		.4byte	0x611
 1153 0605 00       		.byte	0
 1154 0606 0C       		.uleb128 0xc
 1155 0607 04       		.byte	0x4
 1156 0608 0C060000 		.4byte	0x60c
 1157 060c 0B       		.uleb128 0xb
 1158 060d B0050000 		.4byte	0x5b0
 1159 0611 0B       		.uleb128 0xb
 1160 0612 06060000 		.4byte	0x606
 1161 0616 11       		.uleb128 0x11
 1162 0617 F4010000 		.4byte	.LASF108
 1163 061b 28       		.byte	0x28
 1164 061c 04       		.byte	0x4
 1165 061d 36       		.byte	0x36
 1166 061e 9B060000 		.4byte	0x69b
 1167 0622 0E       		.uleb128 0xe
 1168 0623 89040000 		.4byte	.LASF79
 1169 0627 04       		.byte	0x4
 1170 0628 3B       		.byte	0x3b
 1171 0629 9B060000 		.4byte	0x69b
 1172 062d 00       		.byte	0
 1173 062e 0E       		.uleb128 0xe
 1174 062f 6A050000 		.4byte	.LASF80
 1175 0633 04       		.byte	0x4
 1176 0634 40       		.byte	0x40
 1177 0635 A0060000 		.4byte	0x6a0
 1178 0639 04       		.byte	0x4
 1179 063a 0E       		.uleb128 0xe
 1180 063b E5030000 		.4byte	.LASF81
 1181 063f 04       		.byte	0x4
 1182 0640 45       		.byte	0x45
 1183 0641 A2020000 		.4byte	0x2a2
 1184 0645 08       		.byte	0x8
 1185 0646 0E       		.uleb128 0xe
 1186 0647 F7070000 		.4byte	.LASF82
 1187 064b 04       		.byte	0x4
 1188 064c 4B       		.byte	0x4b
 1189 064d A2020000 		.4byte	0x2a2
 1190 0651 0C       		.byte	0xc
 1191 0652 0E       		.uleb128 0xe
 1192 0653 14010000 		.4byte	.LASF83
 1193 0657 04       		.byte	0x4
 1194 0658 50       		.byte	0x50
 1195 0659 A7020000 		.4byte	0x2a7
 1196 065d 10       		.byte	0x10
 1197 065e 0E       		.uleb128 0xe
 1198 065f 01080000 		.4byte	.LASF84
 1199 0663 04       		.byte	0x4
 1200 0664 55       		.byte	0x55
 1201 0665 B2020000 		.4byte	0x2b2
 1202 0669 14       		.byte	0x14
 1203 066a 0E       		.uleb128 0xe
 1204 066b 92040000 		.4byte	.LASF85
 1205 066f 04       		.byte	0x4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 43


 1206 0670 5A       		.byte	0x5a
 1207 0671 A7020000 		.4byte	0x2a7
 1208 0675 18       		.byte	0x18
 1209 0676 0E       		.uleb128 0xe
 1210 0677 D9080000 		.4byte	.LASF86
 1211 067b 04       		.byte	0x4
 1212 067c 5F       		.byte	0x5f
 1213 067d B2020000 		.4byte	0x2b2
 1214 0681 1C       		.byte	0x1c
 1215 0682 0E       		.uleb128 0xe
 1216 0683 57030000 		.4byte	.LASF87
 1217 0687 04       		.byte	0x4
 1218 0688 65       		.byte	0x65
 1219 0689 B7020000 		.4byte	0x2b7
 1220 068d 20       		.byte	0x20
 1221 068e 0E       		.uleb128 0xe
 1222 068f 4E030000 		.4byte	.LASF88
 1223 0693 04       		.byte	0x4
 1224 0694 6A       		.byte	0x6a
 1225 0695 BC020000 		.4byte	0x2bc
 1226 0699 24       		.byte	0x24
 1227 069a 00       		.byte	0
 1228 069b 0B       		.uleb128 0xb
 1229 069c BB050000 		.4byte	0x5bb
 1230 06a0 0B       		.uleb128 0xb
 1231 06a1 E6050000 		.4byte	0x5e6
 1232 06a5 03       		.uleb128 0x3
 1233 06a6 D0060000 		.4byte	.LASF109
 1234 06aa 04       		.byte	0x4
 1235 06ab 6D       		.byte	0x6d
 1236 06ac B0060000 		.4byte	0x6b0
 1237 06b0 0B       		.uleb128 0xb
 1238 06b1 16060000 		.4byte	0x616
 1239 06b5 11       		.uleb128 0x11
 1240 06b6 5D070000 		.4byte	.LASF110
 1241 06ba 0C       		.byte	0xc
 1242 06bb 04       		.byte	0x4
 1243 06bc 79       		.byte	0x79
 1244 06bd F2060000 		.4byte	0x6f2
 1245 06c1 0E       		.uleb128 0xe
 1246 06c2 2F020000 		.4byte	.LASF92
 1247 06c6 04       		.byte	0x4
 1248 06c7 7F       		.byte	0x7f
 1249 06c8 B0050000 		.4byte	0x5b0
 1250 06cc 00       		.byte	0
 1251 06cd 0E       		.uleb128 0xe
 1252 06ce 1B040000 		.4byte	.LASF93
 1253 06d2 04       		.byte	0x4
 1254 06d3 84       		.byte	0x84
 1255 06d4 3B020000 		.4byte	0x23b
 1256 06d8 01       		.byte	0x1
 1257 06d9 12       		.uleb128 0x12
 1258 06da 61676500 		.ascii	"age\000"
 1259 06de 04       		.byte	0x4
 1260 06df 89       		.byte	0x89
 1261 06e0 A2000000 		.4byte	0xa2
 1262 06e4 04       		.byte	0x4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 44


 1263 06e5 0E       		.uleb128 0xe
 1264 06e6 7D030000 		.4byte	.LASF94
 1265 06ea 04       		.byte	0x4
 1266 06eb 8E       		.byte	0x8e
 1267 06ec F8060000 		.4byte	0x6f8
 1268 06f0 08       		.byte	0x8
 1269 06f1 00       		.byte	0
 1270 06f2 0C       		.uleb128 0xc
 1271 06f3 04       		.byte	0x4
 1272 06f4 A5060000 		.4byte	0x6a5
 1273 06f8 0B       		.uleb128 0xb
 1274 06f9 F2060000 		.4byte	0x6f2
 1275 06fd 03       		.uleb128 0x3
 1276 06fe 24070000 		.4byte	.LASF111
 1277 0702 04       		.byte	0x4
 1278 0703 91       		.byte	0x91
 1279 0704 B5060000 		.4byte	0x6b5
 1280 0708 13       		.uleb128 0x13
 1281 0709 83010000 		.4byte	.LASF112
 1282 070d 02       		.byte	0x2
 1283 070e B8       		.byte	0xb8
 1284 070f 3B020000 		.4byte	0x23b
 1285 0713 03       		.byte	0x3
 1286 0714 24070000 		.4byte	0x724
 1287 0718 14       		.uleb128 0x14
 1288 0719 73000000 		.4byte	.LASF114
 1289 071d 02       		.byte	0x2
 1290 071e B8       		.byte	0xb8
 1291 071f 2F070000 		.4byte	0x72f
 1292 0723 00       		.byte	0
 1293 0724 0C       		.uleb128 0xc
 1294 0725 04       		.byte	0x4
 1295 0726 2A070000 		.4byte	0x72a
 1296 072a 0B       		.uleb128 0xb
 1297 072b 23040000 		.4byte	0x423
 1298 072f 0B       		.uleb128 0xb
 1299 0730 24070000 		.4byte	0x724
 1300 0734 13       		.uleb128 0x13
 1301 0735 16030000 		.4byte	.LASF113
 1302 0739 02       		.byte	0x2
 1303 073a E4       		.byte	0xe4
 1304 073b A2000000 		.4byte	0xa2
 1305 073f 03       		.byte	0x3
 1306 0740 50070000 		.4byte	0x750
 1307 0744 14       		.uleb128 0x14
 1308 0745 73000000 		.4byte	.LASF114
 1309 0749 02       		.byte	0x2
 1310 074a E4       		.byte	0xe4
 1311 074b 2F070000 		.4byte	0x72f
 1312 074f 00       		.byte	0
 1313 0750 15       		.uleb128 0x15
 1314 0751 20050000 		.4byte	.LASF115
 1315 0755 02       		.byte	0x2
 1316 0756 2001     		.2byte	0x120
 1317 0758 EA010000 		.4byte	0x1ea
 1318 075c 03       		.byte	0x3
 1319 075d 7A070000 		.4byte	0x77a
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 45


 1320 0761 16       		.uleb128 0x16
 1321 0762 73000000 		.4byte	.LASF114
 1322 0766 02       		.byte	0x2
 1323 0767 2001     		.2byte	0x120
 1324 0769 2F070000 		.4byte	0x72f
 1325 076d 16       		.uleb128 0x16
 1326 076e E0030000 		.4byte	.LASF116
 1327 0772 02       		.byte	0x2
 1328 0773 2001     		.2byte	0x120
 1329 0775 07030000 		.4byte	0x307
 1330 0779 00       		.byte	0
 1331 077a 15       		.uleb128 0x15
 1332 077b 66030000 		.4byte	.LASF117
 1333 077f 03       		.byte	0x3
 1334 0780 7E01     		.2byte	0x17e
 1335 0782 EA010000 		.4byte	0x1ea
 1336 0786 03       		.byte	0x3
 1337 0787 A4070000 		.4byte	0x7a4
 1338 078b 16       		.uleb128 0x16
 1339 078c 73000000 		.4byte	.LASF114
 1340 0790 03       		.byte	0x3
 1341 0791 7E01     		.2byte	0x17e
 1342 0793 AF070000 		.4byte	0x7af
 1343 0797 17       		.uleb128 0x17
 1344 0798 72657400 		.ascii	"ret\000"
 1345 079c 03       		.byte	0x3
 1346 079d 8001     		.2byte	0x180
 1347 079f EA010000 		.4byte	0x1ea
 1348 07a3 00       		.byte	0
 1349 07a4 0C       		.uleb128 0xc
 1350 07a5 04       		.byte	0x4
 1351 07a6 AA070000 		.4byte	0x7aa
 1352 07aa 0B       		.uleb128 0xb
 1353 07ab 90050000 		.4byte	0x590
 1354 07af 0B       		.uleb128 0xb
 1355 07b0 A4070000 		.4byte	0x7a4
 1356 07b4 15       		.uleb128 0x15
 1357 07b5 3F000000 		.4byte	.LASF118
 1358 07b9 03       		.byte	0x3
 1359 07ba 3501     		.2byte	0x135
 1360 07bc EA010000 		.4byte	0x1ea
 1361 07c0 03       		.byte	0x3
 1362 07c1 10080000 		.4byte	0x810
 1363 07c5 16       		.uleb128 0x16
 1364 07c6 73000000 		.4byte	.LASF114
 1365 07ca 03       		.byte	0x3
 1366 07cb 3501     		.2byte	0x135
 1367 07cd 16080000 		.4byte	0x816
 1368 07d1 16       		.uleb128 0x16
 1369 07d2 2F020000 		.4byte	.LASF92
 1370 07d6 03       		.byte	0x3
 1371 07d7 3501     		.2byte	0x135
 1372 07d9 9F040000 		.4byte	0x49f
 1373 07dd 17       		.uleb128 0x17
 1374 07de 72657400 		.ascii	"ret\000"
 1375 07e2 03       		.byte	0x3
 1376 07e3 3801     		.2byte	0x138
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 46


 1377 07e5 EA010000 		.4byte	0x1ea
 1378 07e9 18       		.uleb128 0x18
 1379 07ea C7010000 		.4byte	.LASF119
 1380 07ee 03       		.byte	0x3
 1381 07ef 3901     		.2byte	0x139
 1382 07f1 C2000000 		.4byte	0xc2
 1383 07f5 18       		.uleb128 0x18
 1384 07f6 EC070000 		.4byte	.LASF120
 1385 07fa 03       		.byte	0x3
 1386 07fb 4301     		.2byte	0x143
 1387 07fd AC020000 		.4byte	0x2ac
 1388 0801 19       		.uleb128 0x19
 1389 0802 18       		.uleb128 0x18
 1390 0803 74050000 		.4byte	.LASF121
 1391 0807 03       		.byte	0x3
 1392 0808 4801     		.2byte	0x148
 1393 080a 0B010000 		.4byte	0x10b
 1394 080e 00       		.byte	0
 1395 080f 00       		.byte	0
 1396 0810 0C       		.uleb128 0xc
 1397 0811 04       		.byte	0x4
 1398 0812 90050000 		.4byte	0x590
 1399 0816 0B       		.uleb128 0xb
 1400 0817 10080000 		.4byte	0x810
 1401 081b 15       		.uleb128 0x15
 1402 081c A5030000 		.4byte	.LASF122
 1403 0820 04       		.byte	0x4
 1404 0821 7E01     		.2byte	0x17e
 1405 0823 EA010000 		.4byte	0x1ea
 1406 0827 03       		.byte	0x3
 1407 0828 45080000 		.4byte	0x845
 1408 082c 16       		.uleb128 0x16
 1409 082d 73000000 		.4byte	.LASF114
 1410 0831 04       		.byte	0x4
 1411 0832 7E01     		.2byte	0x17e
 1412 0834 50080000 		.4byte	0x850
 1413 0838 17       		.uleb128 0x17
 1414 0839 72657400 		.ascii	"ret\000"
 1415 083d 04       		.byte	0x4
 1416 083e 8001     		.2byte	0x180
 1417 0840 EA010000 		.4byte	0x1ea
 1418 0844 00       		.byte	0
 1419 0845 0C       		.uleb128 0xc
 1420 0846 04       		.byte	0x4
 1421 0847 4B080000 		.4byte	0x84b
 1422 084b 0B       		.uleb128 0xb
 1423 084c FD060000 		.4byte	0x6fd
 1424 0850 0B       		.uleb128 0xb
 1425 0851 45080000 		.4byte	0x845
 1426 0855 15       		.uleb128 0x15
 1427 0856 6D010000 		.4byte	.LASF123
 1428 085a 04       		.byte	0x4
 1429 085b 3501     		.2byte	0x135
 1430 085d EA010000 		.4byte	0x1ea
 1431 0861 03       		.byte	0x3
 1432 0862 B1080000 		.4byte	0x8b1
 1433 0866 16       		.uleb128 0x16
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 47


 1434 0867 73000000 		.4byte	.LASF114
 1435 086b 04       		.byte	0x4
 1436 086c 3501     		.2byte	0x135
 1437 086e B7080000 		.4byte	0x8b7
 1438 0872 16       		.uleb128 0x16
 1439 0873 2F020000 		.4byte	.LASF92
 1440 0877 04       		.byte	0x4
 1441 0878 3501     		.2byte	0x135
 1442 087a 0C060000 		.4byte	0x60c
 1443 087e 17       		.uleb128 0x17
 1444 087f 72657400 		.ascii	"ret\000"
 1445 0883 04       		.byte	0x4
 1446 0884 3801     		.2byte	0x138
 1447 0886 EA010000 		.4byte	0x1ea
 1448 088a 18       		.uleb128 0x18
 1449 088b C7010000 		.4byte	.LASF119
 1450 088f 04       		.byte	0x4
 1451 0890 3901     		.2byte	0x139
 1452 0892 C2000000 		.4byte	0xc2
 1453 0896 18       		.uleb128 0x18
 1454 0897 EC070000 		.4byte	.LASF120
 1455 089b 04       		.byte	0x4
 1456 089c 4301     		.2byte	0x143
 1457 089e AC020000 		.4byte	0x2ac
 1458 08a2 19       		.uleb128 0x19
 1459 08a3 18       		.uleb128 0x18
 1460 08a4 74050000 		.4byte	.LASF121
 1461 08a8 04       		.byte	0x4
 1462 08a9 4801     		.2byte	0x148
 1463 08ab 0B010000 		.4byte	0x10b
 1464 08af 00       		.byte	0
 1465 08b0 00       		.byte	0
 1466 08b1 0C       		.uleb128 0xc
 1467 08b2 04       		.byte	0x4
 1468 08b3 FD060000 		.4byte	0x6fd
 1469 08b7 0B       		.uleb128 0xb
 1470 08b8 B1080000 		.4byte	0x8b1
 1471 08bc 1A       		.uleb128 0x1a
 1472 08bd 2C010000 		.4byte	.LASF125
 1473 08c1 01       		.byte	0x1
 1474 08c2 2E       		.byte	0x2e
 1475 08c3 00000000 		.4byte	.LFB165
 1476 08c7 C0000000 		.4byte	.LFE165-.LFB165
 1477 08cb 01       		.uleb128 0x1
 1478 08cc 9C       		.byte	0x9c
 1479 08cd 270A0000 		.4byte	0xa27
 1480 08d1 1B       		.uleb128 0x1b
 1481 08d2 657600   		.ascii	"ev\000"
 1482 08d5 01       		.byte	0x1
 1483 08d6 2E       		.byte	0x2e
 1484 08d7 0B020000 		.4byte	0x20b
 1485 08db 00000000 		.4byte	.LLST0
 1486 08df 1C       		.uleb128 0x1c
 1487 08e0 67010000 		.4byte	.LASF124
 1488 08e4 01       		.byte	0x1
 1489 08e5 3B       		.byte	0x3b
 1490 08e6 D6020000 		.4byte	0x2d6
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 48


 1491 08ea 1D       		.uleb128 0x1d
 1492 08eb 00000000 		.4byte	.LASF127
 1493 08ef 01       		.byte	0x1
 1494 08f0 3F       		.byte	0x3f
 1495 08f1 43040000 		.4byte	0x443
 1496 08f5 21000000 		.4byte	.LLST1
 1497 08f9 1E       		.uleb128 0x1e
 1498 08fa 08070000 		.4byte	0x708
 1499 08fe 12000000 		.4byte	.LBB22
 1500 0902 04000000 		.4byte	.LBE22-.LBB22
 1501 0906 01       		.byte	0x1
 1502 0907 37       		.byte	0x37
 1503 0908 12090000 		.4byte	0x912
 1504 090c 1F       		.uleb128 0x1f
 1505 090d 18070000 		.4byte	0x718
 1506 0911 00       		.byte	0
 1507 0912 1E       		.uleb128 0x1e
 1508 0913 50070000 		.4byte	0x750
 1509 0917 1A000000 		.4byte	.LBB24
 1510 091b 26000000 		.4byte	.LBE24-.LBB24
 1511 091f 01       		.byte	0x1
 1512 0920 3D       		.byte	0x3d
 1513 0921 46090000 		.4byte	0x946
 1514 0925 20       		.uleb128 0x20
 1515 0926 6D070000 		.4byte	0x76d
 1516 092a 34000000 		.4byte	.LLST2
 1517 092e 1F       		.uleb128 0x1f
 1518 092f 61070000 		.4byte	0x761
 1519 0933 21       		.uleb128 0x21
 1520 0934 2C000000 		.4byte	.LVL7
 1521 0938 ED0B0000 		.4byte	0xbed
 1522 093c 21       		.uleb128 0x21
 1523 093d 40000000 		.4byte	.LVL8
 1524 0941 F90B0000 		.4byte	0xbf9
 1525 0945 00       		.byte	0
 1526 0946 1E       		.uleb128 0x1e
 1527 0947 34070000 		.4byte	0x734
 1528 094b 44000000 		.4byte	.LBB26
 1529 094f 04000000 		.4byte	.LBE26-.LBB26
 1530 0953 01       		.byte	0x1
 1531 0954 41       		.byte	0x41
 1532 0955 5F090000 		.4byte	0x95f
 1533 0959 1F       		.uleb128 0x1f
 1534 095a 44070000 		.4byte	0x744
 1535 095e 00       		.byte	0
 1536 095f 1E       		.uleb128 0x1e
 1537 0960 B4070000 		.4byte	0x7b4
 1538 0964 50000000 		.4byte	.LBB28
 1539 0968 56000000 		.4byte	.LBE28-.LBB28
 1540 096c 01       		.byte	0x1
 1541 096d 47       		.byte	0x47
 1542 096e D8090000 		.4byte	0x9d8
 1543 0972 20       		.uleb128 0x20
 1544 0973 D1070000 		.4byte	0x7d1
 1545 0977 4C000000 		.4byte	.LLST3
 1546 097b 1F       		.uleb128 0x1f
 1547 097c C5070000 		.4byte	0x7c5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 49


 1548 0980 22       		.uleb128 0x22
 1549 0981 50000000 		.4byte	.LBB29
 1550 0985 56000000 		.4byte	.LBE29-.LBB29
 1551 0989 23       		.uleb128 0x23
 1552 098a DD070000 		.4byte	0x7dd
 1553 098e 75000000 		.4byte	.LLST4
 1554 0992 23       		.uleb128 0x23
 1555 0993 E9070000 		.4byte	0x7e9
 1556 0997 89000000 		.4byte	.LLST5
 1557 099b 23       		.uleb128 0x23
 1558 099c F5070000 		.4byte	0x7f5
 1559 09a0 BF000000 		.4byte	.LLST6
 1560 09a4 24       		.uleb128 0x24
 1561 09a5 8C000000 		.4byte	.LBB30
 1562 09a9 0A000000 		.4byte	.LBE30-.LBB30
 1563 09ad C4090000 		.4byte	0x9c4
 1564 09b1 23       		.uleb128 0x23
 1565 09b2 02080000 		.4byte	0x802
 1566 09b6 D2000000 		.4byte	.LLST7
 1567 09ba 21       		.uleb128 0x21
 1568 09bb 96000000 		.4byte	.LVL19
 1569 09bf 050C0000 		.4byte	0xc05
 1570 09c3 00       		.byte	0
 1571 09c4 21       		.uleb128 0x21
 1572 09c5 62000000 		.4byte	.LVL14
 1573 09c9 ED0B0000 		.4byte	0xbed
 1574 09cd 21       		.uleb128 0x21
 1575 09ce 7E000000 		.4byte	.LVL16
 1576 09d2 F90B0000 		.4byte	0xbf9
 1577 09d6 00       		.byte	0
 1578 09d7 00       		.byte	0
 1579 09d8 1E       		.uleb128 0x1e
 1580 09d9 7A070000 		.4byte	0x77a
 1581 09dd A6000000 		.4byte	.LBB31
 1582 09e1 1A000000 		.4byte	.LBE31-.LBB31
 1583 09e5 01       		.byte	0x1
 1584 09e6 48       		.byte	0x48
 1585 09e7 040A0000 		.4byte	0xa04
 1586 09eb 1F       		.uleb128 0x1f
 1587 09ec 8B070000 		.4byte	0x78b
 1588 09f0 22       		.uleb128 0x22
 1589 09f1 A6000000 		.4byte	.LBB32
 1590 09f5 1A000000 		.4byte	.LBE32-.LBB32
 1591 09f9 23       		.uleb128 0x23
 1592 09fa 97070000 		.4byte	0x797
 1593 09fe EB000000 		.4byte	.LLST8
 1594 0a02 00       		.byte	0
 1595 0a03 00       		.byte	0
 1596 0a04 25       		.uleb128 0x25
 1597 0a05 08000000 		.4byte	.LVL2
 1598 0a09 110C0000 		.4byte	0xc11
 1599 0a0d 170A0000 		.4byte	0xa17
 1600 0a11 26       		.uleb128 0x26
 1601 0a12 01       		.uleb128 0x1
 1602 0a13 50       		.byte	0x50
 1603 0a14 01       		.uleb128 0x1
 1604 0a15 32       		.byte	0x32
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 50


 1605 0a16 00       		.byte	0
 1606 0a17 27       		.uleb128 0x27
 1607 0a18 0E000000 		.4byte	.LVL3
 1608 0a1c 1C0C0000 		.4byte	0xc1c
 1609 0a20 26       		.uleb128 0x26
 1610 0a21 01       		.uleb128 0x1
 1611 0a22 50       		.byte	0x50
 1612 0a23 01       		.uleb128 0x1
 1613 0a24 32       		.byte	0x32
 1614 0a25 00       		.byte	0
 1615 0a26 00       		.byte	0
 1616 0a27 1A       		.uleb128 0x1a
 1617 0a28 7A080000 		.4byte	.LASF126
 1618 0a2c 01       		.byte	0x1
 1619 0a2d 5A       		.byte	0x5a
 1620 0a2e 00000000 		.4byte	.LFB166
 1621 0a32 C0000000 		.4byte	.LFE166-.LFB166
 1622 0a36 01       		.uleb128 0x1
 1623 0a37 9C       		.byte	0x9c
 1624 0a38 840B0000 		.4byte	0xb84
 1625 0a3c 1B       		.uleb128 0x1b
 1626 0a3d 657600   		.ascii	"ev\000"
 1627 0a40 01       		.byte	0x1
 1628 0a41 5A       		.byte	0x5a
 1629 0a42 0B020000 		.4byte	0x20b
 1630 0a46 00010000 		.4byte	.LLST9
 1631 0a4a 1C       		.uleb128 0x1c
 1632 0a4b 67010000 		.4byte	.LASF124
 1633 0a4f 01       		.byte	0x1
 1634 0a50 67       		.byte	0x67
 1635 0a51 D6020000 		.4byte	0x2d6
 1636 0a55 1D       		.uleb128 0x1d
 1637 0a56 61010000 		.4byte	.LASF128
 1638 0a5a 01       		.byte	0x1
 1639 0a5b 6C       		.byte	0x6c
 1640 0a5c B0050000 		.4byte	0x5b0
 1641 0a60 21010000 		.4byte	.LLST10
 1642 0a64 1C       		.uleb128 0x1c
 1643 0a65 26010000 		.4byte	.LASF129
 1644 0a69 01       		.byte	0x1
 1645 0a6a 74       		.byte	0x74
 1646 0a6b EA010000 		.4byte	0x1ea
 1647 0a6f 1E       		.uleb128 0x1e
 1648 0a70 08070000 		.4byte	0x708
 1649 0a74 12000000 		.4byte	.LBB33
 1650 0a78 04000000 		.4byte	.LBE33-.LBB33
 1651 0a7c 01       		.byte	0x1
 1652 0a7d 63       		.byte	0x63
 1653 0a7e 880A0000 		.4byte	0xa88
 1654 0a82 1F       		.uleb128 0x1f
 1655 0a83 18070000 		.4byte	0x718
 1656 0a87 00       		.byte	0
 1657 0a88 1E       		.uleb128 0x1e
 1658 0a89 50070000 		.4byte	0x750
 1659 0a8d 1A000000 		.4byte	.LBB35
 1660 0a91 26000000 		.4byte	.LBE35-.LBB35
 1661 0a95 01       		.byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 51


 1662 0a96 69       		.byte	0x69
 1663 0a97 BC0A0000 		.4byte	0xabc
 1664 0a9b 20       		.uleb128 0x20
 1665 0a9c 6D070000 		.4byte	0x76d
 1666 0aa0 34010000 		.4byte	.LLST11
 1667 0aa4 1F       		.uleb128 0x1f
 1668 0aa5 61070000 		.4byte	0x761
 1669 0aa9 21       		.uleb128 0x21
 1670 0aaa 2C000000 		.4byte	.LVL33
 1671 0aae ED0B0000 		.4byte	0xbed
 1672 0ab2 21       		.uleb128 0x21
 1673 0ab3 40000000 		.4byte	.LVL34
 1674 0ab7 F90B0000 		.4byte	0xbf9
 1675 0abb 00       		.byte	0
 1676 0abc 1E       		.uleb128 0x1e
 1677 0abd 55080000 		.4byte	0x855
 1678 0ac1 50000000 		.4byte	.LBB37
 1679 0ac5 56000000 		.4byte	.LBE37-.LBB37
 1680 0ac9 01       		.byte	0x1
 1681 0aca 72       		.byte	0x72
 1682 0acb 350B0000 		.4byte	0xb35
 1683 0acf 20       		.uleb128 0x20
 1684 0ad0 72080000 		.4byte	0x872
 1685 0ad4 4C010000 		.4byte	.LLST12
 1686 0ad8 1F       		.uleb128 0x1f
 1687 0ad9 66080000 		.4byte	0x866
 1688 0add 22       		.uleb128 0x22
 1689 0ade 50000000 		.4byte	.LBB38
 1690 0ae2 56000000 		.4byte	.LBE38-.LBB38
 1691 0ae6 23       		.uleb128 0x23
 1692 0ae7 7E080000 		.4byte	0x87e
 1693 0aeb 75010000 		.4byte	.LLST13
 1694 0aef 23       		.uleb128 0x23
 1695 0af0 8A080000 		.4byte	0x88a
 1696 0af4 89010000 		.4byte	.LLST14
 1697 0af8 23       		.uleb128 0x23
 1698 0af9 96080000 		.4byte	0x896
 1699 0afd BF010000 		.4byte	.LLST15
 1700 0b01 24       		.uleb128 0x24
 1701 0b02 8C000000 		.4byte	.LBB39
 1702 0b06 0A000000 		.4byte	.LBE39-.LBB39
 1703 0b0a 210B0000 		.4byte	0xb21
 1704 0b0e 23       		.uleb128 0x23
 1705 0b0f A3080000 		.4byte	0x8a3
 1706 0b13 D2010000 		.4byte	.LLST16
 1707 0b17 21       		.uleb128 0x21
 1708 0b18 96000000 		.4byte	.LVL44
 1709 0b1c 050C0000 		.4byte	0xc05
 1710 0b20 00       		.byte	0
 1711 0b21 21       		.uleb128 0x21
 1712 0b22 62000000 		.4byte	.LVL39
 1713 0b26 ED0B0000 		.4byte	0xbed
 1714 0b2a 21       		.uleb128 0x21
 1715 0b2b 7E000000 		.4byte	.LVL41
 1716 0b2f F90B0000 		.4byte	0xbf9
 1717 0b33 00       		.byte	0
 1718 0b34 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 52


 1719 0b35 1E       		.uleb128 0x1e
 1720 0b36 1B080000 		.4byte	0x81b
 1721 0b3a A6000000 		.4byte	.LBB40
 1722 0b3e 1A000000 		.4byte	.LBE40-.LBB40
 1723 0b42 01       		.byte	0x1
 1724 0b43 74       		.byte	0x74
 1725 0b44 610B0000 		.4byte	0xb61
 1726 0b48 1F       		.uleb128 0x1f
 1727 0b49 2C080000 		.4byte	0x82c
 1728 0b4d 22       		.uleb128 0x22
 1729 0b4e A6000000 		.4byte	.LBB41
 1730 0b52 1A000000 		.4byte	.LBE41-.LBB41
 1731 0b56 23       		.uleb128 0x23
 1732 0b57 38080000 		.4byte	0x838
 1733 0b5b EB010000 		.4byte	.LLST17
 1734 0b5f 00       		.byte	0
 1735 0b60 00       		.byte	0
 1736 0b61 25       		.uleb128 0x25
 1737 0b62 08000000 		.4byte	.LVL28
 1738 0b66 110C0000 		.4byte	0xc11
 1739 0b6a 740B0000 		.4byte	0xb74
 1740 0b6e 26       		.uleb128 0x26
 1741 0b6f 01       		.uleb128 0x1
 1742 0b70 50       		.byte	0x50
 1743 0b71 01       		.uleb128 0x1
 1744 0b72 33       		.byte	0x33
 1745 0b73 00       		.byte	0
 1746 0b74 27       		.uleb128 0x27
 1747 0b75 0E000000 		.4byte	.LVL29
 1748 0b79 1C0C0000 		.4byte	0xc1c
 1749 0b7d 26       		.uleb128 0x26
 1750 0b7e 01       		.uleb128 0x1
 1751 0b7f 50       		.byte	0x50
 1752 0b80 01       		.uleb128 0x1
 1753 0b81 33       		.byte	0x33
 1754 0b82 00       		.byte	0
 1755 0b83 00       		.byte	0
 1756 0b84 28       		.uleb128 0x28
 1757 0b85 AC080000 		.4byte	.LASF130
 1758 0b89 13       		.byte	0x13
 1759 0b8a 40       		.byte	0x40
 1760 0b8b EA000000 		.4byte	0xea
 1761 0b8f 28       		.uleb128 0x28
 1762 0b90 93080000 		.4byte	.LASF131
 1763 0b94 13       		.byte	0x13
 1764 0b95 47       		.byte	0x47
 1765 0b96 F5000000 		.4byte	0xf5
 1766 0b9a 28       		.uleb128 0x28
 1767 0b9b 35020000 		.4byte	.LASF132
 1768 0b9f 13       		.byte	0x13
 1769 0ba0 4A       		.byte	0x4a
 1770 0ba1 EA000000 		.4byte	0xea
 1771 0ba5 28       		.uleb128 0x28
 1772 0ba6 25080000 		.4byte	.LASF133
 1773 0baa 14       		.byte	0x14
 1774 0bab 48       		.byte	0x48
 1775 0bac 00010000 		.4byte	0x100
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 53


 1776 0bb0 28       		.uleb128 0x28
 1777 0bb1 FB060000 		.4byte	.LASF134
 1778 0bb5 15       		.byte	0x15
 1779 0bb6 44       		.byte	0x44
 1780 0bb7 EA000000 		.4byte	0xea
 1781 0bbb 29       		.uleb128 0x29
 1782 0bbc 79060000 		.4byte	.LASF135
 1783 0bc0 16       		.byte	0x16
 1784 0bc1 1207     		.2byte	0x712
 1785 0bc3 C70B0000 		.4byte	0xbc7
 1786 0bc7 2A       		.uleb128 0x2a
 1787 0bc8 97000000 		.4byte	0x97
 1788 0bcc 28       		.uleb128 0x28
 1789 0bcd 07000000 		.4byte	.LASF136
 1790 0bd1 17       		.byte	0x17
 1791 0bd2 3A       		.byte	0x3a
 1792 0bd3 23040000 		.4byte	0x423
 1793 0bd7 28       		.uleb128 0x28
 1794 0bd8 9A070000 		.4byte	.LASF137
 1795 0bdc 17       		.byte	0x17
 1796 0bdd 49       		.byte	0x49
 1797 0bde 90050000 		.4byte	0x590
 1798 0be2 28       		.uleb128 0x28
 1799 0be3 60090000 		.4byte	.LASF138
 1800 0be7 17       		.byte	0x17
 1801 0be8 58       		.byte	0x58
 1802 0be9 FD060000 		.4byte	0x6fd
 1803 0bed 2B       		.uleb128 0x2b
 1804 0bee 04030000 		.4byte	.LASF139
 1805 0bf2 04030000 		.4byte	.LASF139
 1806 0bf6 18       		.byte	0x18
 1807 0bf7 1901     		.2byte	0x119
 1808 0bf9 2B       		.uleb128 0x2b
 1809 0bfa 86060000 		.4byte	.LASF140
 1810 0bfe 86060000 		.4byte	.LASF140
 1811 0c02 18       		.byte	0x18
 1812 0c03 1E01     		.2byte	0x11e
 1813 0c05 2B       		.uleb128 0x2b
 1814 0c06 7A000000 		.4byte	.LASF141
 1815 0c0a 7A000000 		.4byte	.LASF141
 1816 0c0e 18       		.byte	0x18
 1817 0c0f 4A01     		.2byte	0x14a
 1818 0c11 2C       		.uleb128 0x2c
 1819 0c12 F0050000 		.4byte	.LASF142
 1820 0c16 F0050000 		.4byte	.LASF142
 1821 0c1a 0E       		.byte	0xe
 1822 0c1b 5F       		.byte	0x5f
 1823 0c1c 2C       		.uleb128 0x2c
 1824 0c1d AB070000 		.4byte	.LASF143
 1825 0c21 AB070000 		.4byte	.LASF143
 1826 0c25 0F       		.byte	0xf
 1827 0c26 4C       		.byte	0x4c
 1828 0c27 00       		.byte	0
 1829              		.section	.debug_abbrev,"",%progbits
 1830              	.Ldebug_abbrev0:
 1831 0000 01       		.uleb128 0x1
 1832 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 54


 1833 0002 01       		.byte	0x1
 1834 0003 25       		.uleb128 0x25
 1835 0004 0E       		.uleb128 0xe
 1836 0005 13       		.uleb128 0x13
 1837 0006 0B       		.uleb128 0xb
 1838 0007 03       		.uleb128 0x3
 1839 0008 0E       		.uleb128 0xe
 1840 0009 1B       		.uleb128 0x1b
 1841 000a 0E       		.uleb128 0xe
 1842 000b 55       		.uleb128 0x55
 1843 000c 17       		.uleb128 0x17
 1844 000d 11       		.uleb128 0x11
 1845 000e 01       		.uleb128 0x1
 1846 000f 10       		.uleb128 0x10
 1847 0010 17       		.uleb128 0x17
 1848 0011 00       		.byte	0
 1849 0012 00       		.byte	0
 1850 0013 02       		.uleb128 0x2
 1851 0014 24       		.uleb128 0x24
 1852 0015 00       		.byte	0
 1853 0016 0B       		.uleb128 0xb
 1854 0017 0B       		.uleb128 0xb
 1855 0018 3E       		.uleb128 0x3e
 1856 0019 0B       		.uleb128 0xb
 1857 001a 03       		.uleb128 0x3
 1858 001b 0E       		.uleb128 0xe
 1859 001c 00       		.byte	0
 1860 001d 00       		.byte	0
 1861 001e 03       		.uleb128 0x3
 1862 001f 16       		.uleb128 0x16
 1863 0020 00       		.byte	0
 1864 0021 03       		.uleb128 0x3
 1865 0022 0E       		.uleb128 0xe
 1866 0023 3A       		.uleb128 0x3a
 1867 0024 0B       		.uleb128 0xb
 1868 0025 3B       		.uleb128 0x3b
 1869 0026 0B       		.uleb128 0xb
 1870 0027 49       		.uleb128 0x49
 1871 0028 13       		.uleb128 0x13
 1872 0029 00       		.byte	0
 1873 002a 00       		.byte	0
 1874 002b 04       		.uleb128 0x4
 1875 002c 24       		.uleb128 0x24
 1876 002d 00       		.byte	0
 1877 002e 0B       		.uleb128 0xb
 1878 002f 0B       		.uleb128 0xb
 1879 0030 3E       		.uleb128 0x3e
 1880 0031 0B       		.uleb128 0xb
 1881 0032 03       		.uleb128 0x3
 1882 0033 08       		.uleb128 0x8
 1883 0034 00       		.byte	0
 1884 0035 00       		.byte	0
 1885 0036 05       		.uleb128 0x5
 1886 0037 16       		.uleb128 0x16
 1887 0038 00       		.byte	0
 1888 0039 03       		.uleb128 0x3
 1889 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 55


 1890 003b 3A       		.uleb128 0x3a
 1891 003c 0B       		.uleb128 0xb
 1892 003d 3B       		.uleb128 0x3b
 1893 003e 05       		.uleb128 0x5
 1894 003f 49       		.uleb128 0x49
 1895 0040 13       		.uleb128 0x13
 1896 0041 00       		.byte	0
 1897 0042 00       		.byte	0
 1898 0043 06       		.uleb128 0x6
 1899 0044 04       		.uleb128 0x4
 1900 0045 01       		.byte	0x1
 1901 0046 0B       		.uleb128 0xb
 1902 0047 0B       		.uleb128 0xb
 1903 0048 49       		.uleb128 0x49
 1904 0049 13       		.uleb128 0x13
 1905 004a 3A       		.uleb128 0x3a
 1906 004b 0B       		.uleb128 0xb
 1907 004c 3B       		.uleb128 0x3b
 1908 004d 0B       		.uleb128 0xb
 1909 004e 01       		.uleb128 0x1
 1910 004f 13       		.uleb128 0x13
 1911 0050 00       		.byte	0
 1912 0051 00       		.byte	0
 1913 0052 07       		.uleb128 0x7
 1914 0053 28       		.uleb128 0x28
 1915 0054 00       		.byte	0
 1916 0055 03       		.uleb128 0x3
 1917 0056 0E       		.uleb128 0xe
 1918 0057 1C       		.uleb128 0x1c
 1919 0058 0B       		.uleb128 0xb
 1920 0059 00       		.byte	0
 1921 005a 00       		.byte	0
 1922 005b 08       		.uleb128 0x8
 1923 005c 28       		.uleb128 0x28
 1924 005d 00       		.byte	0
 1925 005e 03       		.uleb128 0x3
 1926 005f 0E       		.uleb128 0xe
 1927 0060 1C       		.uleb128 0x1c
 1928 0061 0D       		.uleb128 0xd
 1929 0062 00       		.byte	0
 1930 0063 00       		.byte	0
 1931 0064 09       		.uleb128 0x9
 1932 0065 01       		.uleb128 0x1
 1933 0066 01       		.byte	0x1
 1934 0067 49       		.uleb128 0x49
 1935 0068 13       		.uleb128 0x13
 1936 0069 01       		.uleb128 0x1
 1937 006a 13       		.uleb128 0x13
 1938 006b 00       		.byte	0
 1939 006c 00       		.byte	0
 1940 006d 0A       		.uleb128 0xa
 1941 006e 21       		.uleb128 0x21
 1942 006f 00       		.byte	0
 1943 0070 00       		.byte	0
 1944 0071 00       		.byte	0
 1945 0072 0B       		.uleb128 0xb
 1946 0073 26       		.uleb128 0x26
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 56


 1947 0074 00       		.byte	0
 1948 0075 49       		.uleb128 0x49
 1949 0076 13       		.uleb128 0x13
 1950 0077 00       		.byte	0
 1951 0078 00       		.byte	0
 1952 0079 0C       		.uleb128 0xc
 1953 007a 0F       		.uleb128 0xf
 1954 007b 00       		.byte	0
 1955 007c 0B       		.uleb128 0xb
 1956 007d 0B       		.uleb128 0xb
 1957 007e 49       		.uleb128 0x49
 1958 007f 13       		.uleb128 0x13
 1959 0080 00       		.byte	0
 1960 0081 00       		.byte	0
 1961 0082 0D       		.uleb128 0xd
 1962 0083 13       		.uleb128 0x13
 1963 0084 01       		.byte	0x1
 1964 0085 0B       		.uleb128 0xb
 1965 0086 0B       		.uleb128 0xb
 1966 0087 3A       		.uleb128 0x3a
 1967 0088 0B       		.uleb128 0xb
 1968 0089 3B       		.uleb128 0x3b
 1969 008a 0B       		.uleb128 0xb
 1970 008b 01       		.uleb128 0x1
 1971 008c 13       		.uleb128 0x13
 1972 008d 00       		.byte	0
 1973 008e 00       		.byte	0
 1974 008f 0E       		.uleb128 0xe
 1975 0090 0D       		.uleb128 0xd
 1976 0091 00       		.byte	0
 1977 0092 03       		.uleb128 0x3
 1978 0093 0E       		.uleb128 0xe
 1979 0094 3A       		.uleb128 0x3a
 1980 0095 0B       		.uleb128 0xb
 1981 0096 3B       		.uleb128 0x3b
 1982 0097 0B       		.uleb128 0xb
 1983 0098 49       		.uleb128 0x49
 1984 0099 13       		.uleb128 0x13
 1985 009a 38       		.uleb128 0x38
 1986 009b 0B       		.uleb128 0xb
 1987 009c 00       		.byte	0
 1988 009d 00       		.byte	0
 1989 009e 0F       		.uleb128 0xf
 1990 009f 15       		.uleb128 0x15
 1991 00a0 01       		.byte	0x1
 1992 00a1 27       		.uleb128 0x27
 1993 00a2 19       		.uleb128 0x19
 1994 00a3 49       		.uleb128 0x49
 1995 00a4 13       		.uleb128 0x13
 1996 00a5 01       		.uleb128 0x1
 1997 00a6 13       		.uleb128 0x13
 1998 00a7 00       		.byte	0
 1999 00a8 00       		.byte	0
 2000 00a9 10       		.uleb128 0x10
 2001 00aa 05       		.uleb128 0x5
 2002 00ab 00       		.byte	0
 2003 00ac 49       		.uleb128 0x49
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 57


 2004 00ad 13       		.uleb128 0x13
 2005 00ae 00       		.byte	0
 2006 00af 00       		.byte	0
 2007 00b0 11       		.uleb128 0x11
 2008 00b1 13       		.uleb128 0x13
 2009 00b2 01       		.byte	0x1
 2010 00b3 03       		.uleb128 0x3
 2011 00b4 0E       		.uleb128 0xe
 2012 00b5 0B       		.uleb128 0xb
 2013 00b6 0B       		.uleb128 0xb
 2014 00b7 3A       		.uleb128 0x3a
 2015 00b8 0B       		.uleb128 0xb
 2016 00b9 3B       		.uleb128 0x3b
 2017 00ba 0B       		.uleb128 0xb
 2018 00bb 01       		.uleb128 0x1
 2019 00bc 13       		.uleb128 0x13
 2020 00bd 00       		.byte	0
 2021 00be 00       		.byte	0
 2022 00bf 12       		.uleb128 0x12
 2023 00c0 0D       		.uleb128 0xd
 2024 00c1 00       		.byte	0
 2025 00c2 03       		.uleb128 0x3
 2026 00c3 08       		.uleb128 0x8
 2027 00c4 3A       		.uleb128 0x3a
 2028 00c5 0B       		.uleb128 0xb
 2029 00c6 3B       		.uleb128 0x3b
 2030 00c7 0B       		.uleb128 0xb
 2031 00c8 49       		.uleb128 0x49
 2032 00c9 13       		.uleb128 0x13
 2033 00ca 38       		.uleb128 0x38
 2034 00cb 0B       		.uleb128 0xb
 2035 00cc 00       		.byte	0
 2036 00cd 00       		.byte	0
 2037 00ce 13       		.uleb128 0x13
 2038 00cf 2E       		.uleb128 0x2e
 2039 00d0 01       		.byte	0x1
 2040 00d1 3F       		.uleb128 0x3f
 2041 00d2 19       		.uleb128 0x19
 2042 00d3 03       		.uleb128 0x3
 2043 00d4 0E       		.uleb128 0xe
 2044 00d5 3A       		.uleb128 0x3a
 2045 00d6 0B       		.uleb128 0xb
 2046 00d7 3B       		.uleb128 0x3b
 2047 00d8 0B       		.uleb128 0xb
 2048 00d9 27       		.uleb128 0x27
 2049 00da 19       		.uleb128 0x19
 2050 00db 49       		.uleb128 0x49
 2051 00dc 13       		.uleb128 0x13
 2052 00dd 20       		.uleb128 0x20
 2053 00de 0B       		.uleb128 0xb
 2054 00df 01       		.uleb128 0x1
 2055 00e0 13       		.uleb128 0x13
 2056 00e1 00       		.byte	0
 2057 00e2 00       		.byte	0
 2058 00e3 14       		.uleb128 0x14
 2059 00e4 05       		.uleb128 0x5
 2060 00e5 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 58


 2061 00e6 03       		.uleb128 0x3
 2062 00e7 0E       		.uleb128 0xe
 2063 00e8 3A       		.uleb128 0x3a
 2064 00e9 0B       		.uleb128 0xb
 2065 00ea 3B       		.uleb128 0x3b
 2066 00eb 0B       		.uleb128 0xb
 2067 00ec 49       		.uleb128 0x49
 2068 00ed 13       		.uleb128 0x13
 2069 00ee 00       		.byte	0
 2070 00ef 00       		.byte	0
 2071 00f0 15       		.uleb128 0x15
 2072 00f1 2E       		.uleb128 0x2e
 2073 00f2 01       		.byte	0x1
 2074 00f3 3F       		.uleb128 0x3f
 2075 00f4 19       		.uleb128 0x19
 2076 00f5 03       		.uleb128 0x3
 2077 00f6 0E       		.uleb128 0xe
 2078 00f7 3A       		.uleb128 0x3a
 2079 00f8 0B       		.uleb128 0xb
 2080 00f9 3B       		.uleb128 0x3b
 2081 00fa 05       		.uleb128 0x5
 2082 00fb 27       		.uleb128 0x27
 2083 00fc 19       		.uleb128 0x19
 2084 00fd 49       		.uleb128 0x49
 2085 00fe 13       		.uleb128 0x13
 2086 00ff 20       		.uleb128 0x20
 2087 0100 0B       		.uleb128 0xb
 2088 0101 01       		.uleb128 0x1
 2089 0102 13       		.uleb128 0x13
 2090 0103 00       		.byte	0
 2091 0104 00       		.byte	0
 2092 0105 16       		.uleb128 0x16
 2093 0106 05       		.uleb128 0x5
 2094 0107 00       		.byte	0
 2095 0108 03       		.uleb128 0x3
 2096 0109 0E       		.uleb128 0xe
 2097 010a 3A       		.uleb128 0x3a
 2098 010b 0B       		.uleb128 0xb
 2099 010c 3B       		.uleb128 0x3b
 2100 010d 05       		.uleb128 0x5
 2101 010e 49       		.uleb128 0x49
 2102 010f 13       		.uleb128 0x13
 2103 0110 00       		.byte	0
 2104 0111 00       		.byte	0
 2105 0112 17       		.uleb128 0x17
 2106 0113 34       		.uleb128 0x34
 2107 0114 00       		.byte	0
 2108 0115 03       		.uleb128 0x3
 2109 0116 08       		.uleb128 0x8
 2110 0117 3A       		.uleb128 0x3a
 2111 0118 0B       		.uleb128 0xb
 2112 0119 3B       		.uleb128 0x3b
 2113 011a 05       		.uleb128 0x5
 2114 011b 49       		.uleb128 0x49
 2115 011c 13       		.uleb128 0x13
 2116 011d 00       		.byte	0
 2117 011e 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 59


 2118 011f 18       		.uleb128 0x18
 2119 0120 34       		.uleb128 0x34
 2120 0121 00       		.byte	0
 2121 0122 03       		.uleb128 0x3
 2122 0123 0E       		.uleb128 0xe
 2123 0124 3A       		.uleb128 0x3a
 2124 0125 0B       		.uleb128 0xb
 2125 0126 3B       		.uleb128 0x3b
 2126 0127 05       		.uleb128 0x5
 2127 0128 49       		.uleb128 0x49
 2128 0129 13       		.uleb128 0x13
 2129 012a 00       		.byte	0
 2130 012b 00       		.byte	0
 2131 012c 19       		.uleb128 0x19
 2132 012d 0B       		.uleb128 0xb
 2133 012e 01       		.byte	0x1
 2134 012f 00       		.byte	0
 2135 0130 00       		.byte	0
 2136 0131 1A       		.uleb128 0x1a
 2137 0132 2E       		.uleb128 0x2e
 2138 0133 01       		.byte	0x1
 2139 0134 3F       		.uleb128 0x3f
 2140 0135 19       		.uleb128 0x19
 2141 0136 03       		.uleb128 0x3
 2142 0137 0E       		.uleb128 0xe
 2143 0138 3A       		.uleb128 0x3a
 2144 0139 0B       		.uleb128 0xb
 2145 013a 3B       		.uleb128 0x3b
 2146 013b 0B       		.uleb128 0xb
 2147 013c 27       		.uleb128 0x27
 2148 013d 19       		.uleb128 0x19
 2149 013e 11       		.uleb128 0x11
 2150 013f 01       		.uleb128 0x1
 2151 0140 12       		.uleb128 0x12
 2152 0141 06       		.uleb128 0x6
 2153 0142 40       		.uleb128 0x40
 2154 0143 18       		.uleb128 0x18
 2155 0144 9642     		.uleb128 0x2116
 2156 0146 19       		.uleb128 0x19
 2157 0147 01       		.uleb128 0x1
 2158 0148 13       		.uleb128 0x13
 2159 0149 00       		.byte	0
 2160 014a 00       		.byte	0
 2161 014b 1B       		.uleb128 0x1b
 2162 014c 05       		.uleb128 0x5
 2163 014d 00       		.byte	0
 2164 014e 03       		.uleb128 0x3
 2165 014f 08       		.uleb128 0x8
 2166 0150 3A       		.uleb128 0x3a
 2167 0151 0B       		.uleb128 0xb
 2168 0152 3B       		.uleb128 0x3b
 2169 0153 0B       		.uleb128 0xb
 2170 0154 49       		.uleb128 0x49
 2171 0155 13       		.uleb128 0x13
 2172 0156 02       		.uleb128 0x2
 2173 0157 17       		.uleb128 0x17
 2174 0158 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 60


 2175 0159 00       		.byte	0
 2176 015a 1C       		.uleb128 0x1c
 2177 015b 34       		.uleb128 0x34
 2178 015c 00       		.byte	0
 2179 015d 03       		.uleb128 0x3
 2180 015e 0E       		.uleb128 0xe
 2181 015f 3A       		.uleb128 0x3a
 2182 0160 0B       		.uleb128 0xb
 2183 0161 3B       		.uleb128 0x3b
 2184 0162 0B       		.uleb128 0xb
 2185 0163 49       		.uleb128 0x49
 2186 0164 13       		.uleb128 0x13
 2187 0165 00       		.byte	0
 2188 0166 00       		.byte	0
 2189 0167 1D       		.uleb128 0x1d
 2190 0168 34       		.uleb128 0x34
 2191 0169 00       		.byte	0
 2192 016a 03       		.uleb128 0x3
 2193 016b 0E       		.uleb128 0xe
 2194 016c 3A       		.uleb128 0x3a
 2195 016d 0B       		.uleb128 0xb
 2196 016e 3B       		.uleb128 0x3b
 2197 016f 0B       		.uleb128 0xb
 2198 0170 49       		.uleb128 0x49
 2199 0171 13       		.uleb128 0x13
 2200 0172 02       		.uleb128 0x2
 2201 0173 17       		.uleb128 0x17
 2202 0174 00       		.byte	0
 2203 0175 00       		.byte	0
 2204 0176 1E       		.uleb128 0x1e
 2205 0177 1D       		.uleb128 0x1d
 2206 0178 01       		.byte	0x1
 2207 0179 31       		.uleb128 0x31
 2208 017a 13       		.uleb128 0x13
 2209 017b 11       		.uleb128 0x11
 2210 017c 01       		.uleb128 0x1
 2211 017d 12       		.uleb128 0x12
 2212 017e 06       		.uleb128 0x6
 2213 017f 58       		.uleb128 0x58
 2214 0180 0B       		.uleb128 0xb
 2215 0181 59       		.uleb128 0x59
 2216 0182 0B       		.uleb128 0xb
 2217 0183 01       		.uleb128 0x1
 2218 0184 13       		.uleb128 0x13
 2219 0185 00       		.byte	0
 2220 0186 00       		.byte	0
 2221 0187 1F       		.uleb128 0x1f
 2222 0188 05       		.uleb128 0x5
 2223 0189 00       		.byte	0
 2224 018a 31       		.uleb128 0x31
 2225 018b 13       		.uleb128 0x13
 2226 018c 00       		.byte	0
 2227 018d 00       		.byte	0
 2228 018e 20       		.uleb128 0x20
 2229 018f 05       		.uleb128 0x5
 2230 0190 00       		.byte	0
 2231 0191 31       		.uleb128 0x31
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 61


 2232 0192 13       		.uleb128 0x13
 2233 0193 02       		.uleb128 0x2
 2234 0194 17       		.uleb128 0x17
 2235 0195 00       		.byte	0
 2236 0196 00       		.byte	0
 2237 0197 21       		.uleb128 0x21
 2238 0198 898201   		.uleb128 0x4109
 2239 019b 00       		.byte	0
 2240 019c 11       		.uleb128 0x11
 2241 019d 01       		.uleb128 0x1
 2242 019e 31       		.uleb128 0x31
 2243 019f 13       		.uleb128 0x13
 2244 01a0 00       		.byte	0
 2245 01a1 00       		.byte	0
 2246 01a2 22       		.uleb128 0x22
 2247 01a3 0B       		.uleb128 0xb
 2248 01a4 01       		.byte	0x1
 2249 01a5 11       		.uleb128 0x11
 2250 01a6 01       		.uleb128 0x1
 2251 01a7 12       		.uleb128 0x12
 2252 01a8 06       		.uleb128 0x6
 2253 01a9 00       		.byte	0
 2254 01aa 00       		.byte	0
 2255 01ab 23       		.uleb128 0x23
 2256 01ac 34       		.uleb128 0x34
 2257 01ad 00       		.byte	0
 2258 01ae 31       		.uleb128 0x31
 2259 01af 13       		.uleb128 0x13
 2260 01b0 02       		.uleb128 0x2
 2261 01b1 17       		.uleb128 0x17
 2262 01b2 00       		.byte	0
 2263 01b3 00       		.byte	0
 2264 01b4 24       		.uleb128 0x24
 2265 01b5 0B       		.uleb128 0xb
 2266 01b6 01       		.byte	0x1
 2267 01b7 11       		.uleb128 0x11
 2268 01b8 01       		.uleb128 0x1
 2269 01b9 12       		.uleb128 0x12
 2270 01ba 06       		.uleb128 0x6
 2271 01bb 01       		.uleb128 0x1
 2272 01bc 13       		.uleb128 0x13
 2273 01bd 00       		.byte	0
 2274 01be 00       		.byte	0
 2275 01bf 25       		.uleb128 0x25
 2276 01c0 898201   		.uleb128 0x4109
 2277 01c3 01       		.byte	0x1
 2278 01c4 11       		.uleb128 0x11
 2279 01c5 01       		.uleb128 0x1
 2280 01c6 31       		.uleb128 0x31
 2281 01c7 13       		.uleb128 0x13
 2282 01c8 01       		.uleb128 0x1
 2283 01c9 13       		.uleb128 0x13
 2284 01ca 00       		.byte	0
 2285 01cb 00       		.byte	0
 2286 01cc 26       		.uleb128 0x26
 2287 01cd 8A8201   		.uleb128 0x410a
 2288 01d0 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 62


 2289 01d1 02       		.uleb128 0x2
 2290 01d2 18       		.uleb128 0x18
 2291 01d3 9142     		.uleb128 0x2111
 2292 01d5 18       		.uleb128 0x18
 2293 01d6 00       		.byte	0
 2294 01d7 00       		.byte	0
 2295 01d8 27       		.uleb128 0x27
 2296 01d9 898201   		.uleb128 0x4109
 2297 01dc 01       		.byte	0x1
 2298 01dd 11       		.uleb128 0x11
 2299 01de 01       		.uleb128 0x1
 2300 01df 31       		.uleb128 0x31
 2301 01e0 13       		.uleb128 0x13
 2302 01e1 00       		.byte	0
 2303 01e2 00       		.byte	0
 2304 01e3 28       		.uleb128 0x28
 2305 01e4 34       		.uleb128 0x34
 2306 01e5 00       		.byte	0
 2307 01e6 03       		.uleb128 0x3
 2308 01e7 0E       		.uleb128 0xe
 2309 01e8 3A       		.uleb128 0x3a
 2310 01e9 0B       		.uleb128 0xb
 2311 01ea 3B       		.uleb128 0x3b
 2312 01eb 0B       		.uleb128 0xb
 2313 01ec 49       		.uleb128 0x49
 2314 01ed 13       		.uleb128 0x13
 2315 01ee 3F       		.uleb128 0x3f
 2316 01ef 19       		.uleb128 0x19
 2317 01f0 3C       		.uleb128 0x3c
 2318 01f1 19       		.uleb128 0x19
 2319 01f2 00       		.byte	0
 2320 01f3 00       		.byte	0
 2321 01f4 29       		.uleb128 0x29
 2322 01f5 34       		.uleb128 0x34
 2323 01f6 00       		.byte	0
 2324 01f7 03       		.uleb128 0x3
 2325 01f8 0E       		.uleb128 0xe
 2326 01f9 3A       		.uleb128 0x3a
 2327 01fa 0B       		.uleb128 0xb
 2328 01fb 3B       		.uleb128 0x3b
 2329 01fc 05       		.uleb128 0x5
 2330 01fd 49       		.uleb128 0x49
 2331 01fe 13       		.uleb128 0x13
 2332 01ff 3F       		.uleb128 0x3f
 2333 0200 19       		.uleb128 0x19
 2334 0201 3C       		.uleb128 0x3c
 2335 0202 19       		.uleb128 0x19
 2336 0203 00       		.byte	0
 2337 0204 00       		.byte	0
 2338 0205 2A       		.uleb128 0x2a
 2339 0206 35       		.uleb128 0x35
 2340 0207 00       		.byte	0
 2341 0208 49       		.uleb128 0x49
 2342 0209 13       		.uleb128 0x13
 2343 020a 00       		.byte	0
 2344 020b 00       		.byte	0
 2345 020c 2B       		.uleb128 0x2b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 63


 2346 020d 2E       		.uleb128 0x2e
 2347 020e 00       		.byte	0
 2348 020f 3F       		.uleb128 0x3f
 2349 0210 19       		.uleb128 0x19
 2350 0211 3C       		.uleb128 0x3c
 2351 0212 19       		.uleb128 0x19
 2352 0213 6E       		.uleb128 0x6e
 2353 0214 0E       		.uleb128 0xe
 2354 0215 03       		.uleb128 0x3
 2355 0216 0E       		.uleb128 0xe
 2356 0217 3A       		.uleb128 0x3a
 2357 0218 0B       		.uleb128 0xb
 2358 0219 3B       		.uleb128 0x3b
 2359 021a 05       		.uleb128 0x5
 2360 021b 00       		.byte	0
 2361 021c 00       		.byte	0
 2362 021d 2C       		.uleb128 0x2c
 2363 021e 2E       		.uleb128 0x2e
 2364 021f 00       		.byte	0
 2365 0220 3F       		.uleb128 0x3f
 2366 0221 19       		.uleb128 0x19
 2367 0222 3C       		.uleb128 0x3c
 2368 0223 19       		.uleb128 0x19
 2369 0224 6E       		.uleb128 0x6e
 2370 0225 0E       		.uleb128 0xe
 2371 0226 03       		.uleb128 0x3
 2372 0227 0E       		.uleb128 0xe
 2373 0228 3A       		.uleb128 0x3a
 2374 0229 0B       		.uleb128 0xb
 2375 022a 3B       		.uleb128 0x3b
 2376 022b 0B       		.uleb128 0xb
 2377 022c 00       		.byte	0
 2378 022d 00       		.byte	0
 2379 022e 00       		.byte	0
 2380              		.section	.debug_loc,"",%progbits
 2381              	.Ldebug_loc0:
 2382              	.LLST0:
 2383 0000 00000000 		.4byte	.LVL0
 2384 0004 04000000 		.4byte	.LVL1
 2385 0008 0100     		.2byte	0x1
 2386 000a 50       		.byte	0x50
 2387 000b 04000000 		.4byte	.LVL1
 2388 000f C0000000 		.4byte	.LFE165
 2389 0013 0400     		.2byte	0x4
 2390 0015 F3       		.byte	0xf3
 2391 0016 01       		.uleb128 0x1
 2392 0017 50       		.byte	0x50
 2393 0018 9F       		.byte	0x9f
 2394 0019 00000000 		.4byte	0
 2395 001d 00000000 		.4byte	0
 2396              	.LLST1:
 2397 0021 4E000000 		.4byte	.LVL11
 2398 0025 52000000 		.4byte	.LVL13
 2399 0029 0100     		.2byte	0x1
 2400 002b 53       		.byte	0x53
 2401 002c 00000000 		.4byte	0
 2402 0030 00000000 		.4byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 64


 2403              	.LLST2:
 2404 0034 1A000000 		.4byte	.LVL6
 2405 0038 40000000 		.4byte	.LVL8
 2406 003c 0600     		.2byte	0x6
 2407 003e F2       		.byte	0xf2
 2408 003f DF080000 		.4byte	.Ldebug_info0+2271
 2409 0043 00       		.sleb128 0
 2410 0044 00000000 		.4byte	0
 2411 0048 00000000 		.4byte	0
 2412              	.LLST3:
 2413 004c 64000000 		.4byte	.LVL15
 2414 0050 8C000000 		.4byte	.LVL18
 2415 0054 0100     		.2byte	0x1
 2416 0056 54       		.byte	0x54
 2417 0057 9A000000 		.4byte	.LVL21
 2418 005b 9C000000 		.4byte	.LVL22
 2419 005f 0100     		.2byte	0x1
 2420 0061 54       		.byte	0x54
 2421 0062 A6000000 		.4byte	.LVL23
 2422 0066 B8000000 		.4byte	.LVL25
 2423 006a 0100     		.2byte	0x1
 2424 006c 54       		.byte	0x54
 2425 006d 00000000 		.4byte	0
 2426 0071 00000000 		.4byte	0
 2427              	.LLST4:
 2428 0075 50000000 		.4byte	.LVL12
 2429 0079 B6000000 		.4byte	.LVL24
 2430 007d 0200     		.2byte	0x2
 2431 007f 30       		.byte	0x30
 2432 0080 9F       		.byte	0x9f
 2433 0081 00000000 		.4byte	0
 2434 0085 00000000 		.4byte	0
 2435              	.LLST5:
 2436 0089 50000000 		.4byte	.LVL12
 2437 008d 8C000000 		.4byte	.LVL18
 2438 0091 0200     		.2byte	0x2
 2439 0093 30       		.byte	0x30
 2440 0094 9F       		.byte	0x9f
 2441 0095 8C000000 		.4byte	.LVL18
 2442 0099 9A000000 		.4byte	.LVL21
 2443 009d 0100     		.2byte	0x1
 2444 009f 54       		.byte	0x54
 2445 00a0 9A000000 		.4byte	.LVL21
 2446 00a4 9C000000 		.4byte	.LVL22
 2447 00a8 0200     		.2byte	0x2
 2448 00aa 30       		.byte	0x30
 2449 00ab 9F       		.byte	0x9f
 2450 00ac 9C000000 		.4byte	.LVL22
 2451 00b0 A6000000 		.4byte	.LVL23
 2452 00b4 0100     		.2byte	0x1
 2453 00b6 54       		.byte	0x54
 2454 00b7 00000000 		.4byte	0
 2455 00bb 00000000 		.4byte	0
 2456              	.LLST6:
 2457 00bf 84000000 		.4byte	.LVL17
 2458 00c3 A6000000 		.4byte	.LVL23
 2459 00c7 0100     		.2byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 65


 2460 00c9 55       		.byte	0x55
 2461 00ca 00000000 		.4byte	0
 2462 00ce 00000000 		.4byte	0
 2463              	.LLST7:
 2464 00d2 8C000000 		.4byte	.LVL18
 2465 00d6 95000000 		.4byte	.LVL19-1
 2466 00da 0700     		.2byte	0x7
 2467 00dc 74       		.byte	0x74
 2468 00dd 00       		.sleb128 0
 2469 00de 32       		.byte	0x32
 2470 00df 24       		.byte	0x24
 2471 00e0 75       		.byte	0x75
 2472 00e1 00       		.sleb128 0
 2473 00e2 22       		.byte	0x22
 2474 00e3 00000000 		.4byte	0
 2475 00e7 00000000 		.4byte	0
 2476              	.LLST8:
 2477 00eb A6000000 		.4byte	.LVL23
 2478 00ef B6000000 		.4byte	.LVL24
 2479 00f3 0300     		.2byte	0x3
 2480 00f5 09       		.byte	0x9
 2481 00f6 FF       		.byte	0xff
 2482 00f7 9F       		.byte	0x9f
 2483 00f8 00000000 		.4byte	0
 2484 00fc 00000000 		.4byte	0
 2485              	.LLST9:
 2486 0100 00000000 		.4byte	.LVL26
 2487 0104 04000000 		.4byte	.LVL27
 2488 0108 0100     		.2byte	0x1
 2489 010a 50       		.byte	0x50
 2490 010b 04000000 		.4byte	.LVL27
 2491 010f C0000000 		.4byte	.LFE166
 2492 0113 0400     		.2byte	0x4
 2493 0115 F3       		.byte	0xf3
 2494 0116 01       		.uleb128 0x1
 2495 0117 50       		.byte	0x50
 2496 0118 9F       		.byte	0x9f
 2497 0119 00000000 		.4byte	0
 2498 011d 00000000 		.4byte	0
 2499              	.LLST10:
 2500 0121 4E000000 		.4byte	.LVL36
 2501 0125 52000000 		.4byte	.LVL38
 2502 0129 0100     		.2byte	0x1
 2503 012b 53       		.byte	0x53
 2504 012c 00000000 		.4byte	0
 2505 0130 00000000 		.4byte	0
 2506              	.LLST11:
 2507 0134 1A000000 		.4byte	.LVL32
 2508 0138 40000000 		.4byte	.LVL34
 2509 013c 0600     		.2byte	0x6
 2510 013e F2       		.byte	0xf2
 2511 013f 4A0A0000 		.4byte	.Ldebug_info0+2634
 2512 0143 00       		.sleb128 0
 2513 0144 00000000 		.4byte	0
 2514 0148 00000000 		.4byte	0
 2515              	.LLST12:
 2516 014c 64000000 		.4byte	.LVL40
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 66


 2517 0150 8C000000 		.4byte	.LVL43
 2518 0154 0100     		.2byte	0x1
 2519 0156 54       		.byte	0x54
 2520 0157 9A000000 		.4byte	.LVL46
 2521 015b 9C000000 		.4byte	.LVL47
 2522 015f 0100     		.2byte	0x1
 2523 0161 54       		.byte	0x54
 2524 0162 A6000000 		.4byte	.LVL48
 2525 0166 B8000000 		.4byte	.LVL50
 2526 016a 0100     		.2byte	0x1
 2527 016c 54       		.byte	0x54
 2528 016d 00000000 		.4byte	0
 2529 0171 00000000 		.4byte	0
 2530              	.LLST13:
 2531 0175 50000000 		.4byte	.LVL37
 2532 0179 B6000000 		.4byte	.LVL49
 2533 017d 0200     		.2byte	0x2
 2534 017f 30       		.byte	0x30
 2535 0180 9F       		.byte	0x9f
 2536 0181 00000000 		.4byte	0
 2537 0185 00000000 		.4byte	0
 2538              	.LLST14:
 2539 0189 50000000 		.4byte	.LVL37
 2540 018d 8C000000 		.4byte	.LVL43
 2541 0191 0200     		.2byte	0x2
 2542 0193 30       		.byte	0x30
 2543 0194 9F       		.byte	0x9f
 2544 0195 8C000000 		.4byte	.LVL43
 2545 0199 9A000000 		.4byte	.LVL46
 2546 019d 0100     		.2byte	0x1
 2547 019f 54       		.byte	0x54
 2548 01a0 9A000000 		.4byte	.LVL46
 2549 01a4 9C000000 		.4byte	.LVL47
 2550 01a8 0200     		.2byte	0x2
 2551 01aa 30       		.byte	0x30
 2552 01ab 9F       		.byte	0x9f
 2553 01ac 9C000000 		.4byte	.LVL47
 2554 01b0 A6000000 		.4byte	.LVL48
 2555 01b4 0100     		.2byte	0x1
 2556 01b6 54       		.byte	0x54
 2557 01b7 00000000 		.4byte	0
 2558 01bb 00000000 		.4byte	0
 2559              	.LLST15:
 2560 01bf 84000000 		.4byte	.LVL42
 2561 01c3 A6000000 		.4byte	.LVL48
 2562 01c7 0100     		.2byte	0x1
 2563 01c9 55       		.byte	0x55
 2564 01ca 00000000 		.4byte	0
 2565 01ce 00000000 		.4byte	0
 2566              	.LLST16:
 2567 01d2 8C000000 		.4byte	.LVL43
 2568 01d6 95000000 		.4byte	.LVL44-1
 2569 01da 0700     		.2byte	0x7
 2570 01dc 74       		.byte	0x74
 2571 01dd 00       		.sleb128 0
 2572 01de 32       		.byte	0x32
 2573 01df 24       		.byte	0x24
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 67


 2574 01e0 75       		.byte	0x75
 2575 01e1 00       		.sleb128 0
 2576 01e2 22       		.byte	0x22
 2577 01e3 00000000 		.4byte	0
 2578 01e7 00000000 		.4byte	0
 2579              	.LLST17:
 2580 01eb A6000000 		.4byte	.LVL48
 2581 01ef B6000000 		.4byte	.LVL49
 2582 01f3 0300     		.2byte	0x3
 2583 01f5 09       		.byte	0x9
 2584 01f6 FF       		.byte	0xff
 2585 01f7 9F       		.byte	0x9f
 2586 01f8 00000000 		.4byte	0
 2587 01fc 00000000 		.4byte	0
 2588              		.section	.debug_aranges,"",%progbits
 2589 0000 24000000 		.4byte	0x24
 2590 0004 0200     		.2byte	0x2
 2591 0006 00000000 		.4byte	.Ldebug_info0
 2592 000a 04       		.byte	0x4
 2593 000b 00       		.byte	0
 2594 000c 0000     		.2byte	0
 2595 000e 0000     		.2byte	0
 2596 0010 00000000 		.4byte	.LFB165
 2597 0014 C0000000 		.4byte	.LFE165-.LFB165
 2598 0018 00000000 		.4byte	.LFB166
 2599 001c C0000000 		.4byte	.LFE166-.LFB166
 2600 0020 00000000 		.4byte	0
 2601 0024 00000000 		.4byte	0
 2602              		.section	.debug_ranges,"",%progbits
 2603              	.Ldebug_ranges0:
 2604 0000 00000000 		.4byte	.LFB165
 2605 0004 C0000000 		.4byte	.LFE165
 2606 0008 00000000 		.4byte	.LFB166
 2607 000c C0000000 		.4byte	.LFE166
 2608 0010 00000000 		.4byte	0
 2609 0014 00000000 		.4byte	0
 2610              		.section	.debug_line,"",%progbits
 2611              	.Ldebug_line0:
 2612 0000 17040000 		.section	.debug_str,"MS",%progbits,1
 2612      02008303 
 2612      00000201 
 2612      FB0E0D00 
 2612      01010101 
 2613              	.LASF127:
 2614 0000 656E6769 		.ascii	"engine\000"
 2614      6E6500
 2615              	.LASF136:
 2616 0007 534F5F53 		.ascii	"SO_SPEED_signal\000"
 2616      50454544 
 2616      5F736967 
 2616      6E616C00 
 2617              	.LASF49:
 2618 0017 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 2618      52524F52 
 2618      5F4E4F54 
 2618      5F4D4154 
 2618      434800
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 68


 2619              	.LASF73:
 2620 002a 4552524F 		.ascii	"ERROR_SET_BRAKELIGHT\000"
 2620      525F5345 
 2620      545F4252 
 2620      414B454C 
 2620      49474854 
 2621              	.LASF118:
 2622 003f 5254455F 		.ascii	"RTE_SC_ENGINE_set\000"
 2622      53435F45 
 2622      4E47494E 
 2622      455F7365 
 2622      7400
 2623              	.LASF45:
 2624 0051 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 2624      52524F52 
 2624      5F575249 
 2624      54455F4F 
 2624      4E4C5900 
 2625              	.LASF27:
 2626 0065 4576656E 		.ascii	"EventMaskType\000"
 2626      744D6173 
 2626      6B547970 
 2626      6500
 2627              	.LASF114:
 2628 0073 7369676E 		.ascii	"signal\000"
 2628      616C00
 2629              	.LASF141:
 2630 007a 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 2630      6F5F5365 
 2630      74457665 
 2630      6E7400
 2631              	.LASF11:
 2632 0089 756E7369 		.ascii	"unsigned int\000"
 2632      676E6564 
 2632      20696E74 
 2632      00
 2633              	.LASF33:
 2634 0096 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 2634      52524F52 
 2634      5F5A4552 
 2634      4F00
 2635              	.LASF65:
 2636 00a4 57415443 		.ascii	"WATCHDOG_RUN_CALCCONTROL\000"
 2636      48444F47 
 2636      5F52554E 
 2636      5F43414C 
 2636      43434F4E 
 2637              	.LASF5:
 2638 00bd 5F5F696E 		.ascii	"__int32_t\000"
 2638      7433325F 
 2638      7400
 2639              	.LASF32:
 2640 00c7 52435F45 		.ascii	"RC_ERROR_NULL\000"
 2640      52524F52 
 2640      5F4E554C 
 2640      4C00
 2641              	.LASF41:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 69


 2642 00d5 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 2642      52524F52 
 2642      5F54494D 
 2642      455F4F55 
 2642      5400
 2643              	.LASF53:
 2644 00e7 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 2644      52524F52 
 2644      5F494E56 
 2644      414C4944 
 2644      5F535441 
 2645              	.LASF71:
 2646 00fe 4552524F 		.ascii	"ERROR_CONTROL\000"
 2646      525F434F 
 2646      4E54524F 
 2646      4C00
 2647              	.LASF23:
 2648 010c 45455F46 		.ascii	"EE_FREG\000"
 2648      52454700 
 2649              	.LASF83:
 2650 0114 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 2650      64617465 
 2650      5461736B 
 2650      436F756E 
 2650      7400
 2651              	.LASF129:
 2652 0126 6572726F 		.ascii	"error\000"
 2652      7200
 2653              	.LASF125:
 2654 012c 4F555450 		.ascii	"OUTPUT_setEngine_run\000"
 2654      55545F73 
 2654      6574456E 
 2654      67696E65 
 2654      5F72756E 
 2655              	.LASF100:
 2656 0141 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 2656      4E47494E 
 2656      455F6366 
 2656      675F7300 
 2657              	.LASF101:
 2658 0151 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 2658      4E47494E 
 2658      455F6366 
 2658      675F7400 
 2659              	.LASF128:
 2660 0161 6272616B 		.ascii	"brake\000"
 2660      6500
 2661              	.LASF124:
 2662 0167 73706565 		.ascii	"speed\000"
 2662      6400
 2663              	.LASF123:
 2664 016d 5254455F 		.ascii	"RTE_SC_BRAKELIGHT_set\000"
 2664      53435F42 
 2664      52414B45 
 2664      4C494748 
 2664      545F7365 
 2665              	.LASF112:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 70


 2666 0183 5254455F 		.ascii	"RTE_SC_SPEED_getStatus\000"
 2666      53435F53 
 2666      50454544 
 2666      5F676574 
 2666      53746174 
 2667              	.LASF14:
 2668 019a 75696E74 		.ascii	"uint32_t\000"
 2668      33325F74 
 2668      00
 2669              	.LASF31:
 2670 01a3 52435F45 		.ascii	"RC_ERROR\000"
 2670      52524F52 
 2670      00
 2671              	.LASF48:
 2672 01ac 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 2672      52524F52 
 2672      5F575249 
 2672      54455F46 
 2672      41494C53 
 2673              	.LASF15:
 2674 01c1 666C6F61 		.ascii	"float\000"
 2674      7400
 2675              	.LASF119:
 2676 01c7 7461736B 		.ascii	"taskNum\000"
 2676      4E756D00 
 2677              	.LASF42:
 2678 01cf 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 2678      52524F52 
 2678      5F4F5045 
 2678      4E00
 2679              	.LASF10:
 2680 01dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 2680      206C6F6E 
 2680      6720756E 
 2680      7369676E 
 2680      65642069 
 2681              	.LASF108:
 2682 01f4 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_s\000"
 2682      52414B45 
 2682      4C494748 
 2682      545F6366 
 2682      675F7300 
 2683              	.LASF25:
 2684 0208 5461736B 		.ascii	"TaskType\000"
 2684      54797065 
 2684      00
 2685              	.LASF26:
 2686 0211 5265736F 		.ascii	"ResourceType\000"
 2686      75726365 
 2686      54797065 
 2686      00
 2687              	.LASF24:
 2688 021e 45455F54 		.ascii	"EE_TID\000"
 2688      494400
 2689              	.LASF58:
 2690 0225 5254455F 		.ascii	"RTE_event\000"
 2690      6576656E 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 71


 2690      7400
 2691              	.LASF92:
 2692 022f 76616C75 		.ascii	"value\000"
 2692      6500
 2693              	.LASF132:
 2694 0235 45455F41 		.ascii	"EE_ApplicationMode\000"
 2694      70706C69 
 2694      63617469 
 2694      6F6E4D6F 
 2694      646500
 2695              	.LASF144:
 2696 0248 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2696      43313120 
 2696      352E342E 
 2696      31203230 
 2696      31363036 
 2697 027b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2697      20726576 
 2697      6973696F 
 2697      6E203233 
 2697      37373135 
 2698 02ae 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2698      66756E63 
 2698      74696F6E 
 2698      2D736563 
 2698      74696F6E 
 2699              	.LASF68:
 2700 02d6 57415443 		.ascii	"WATCHDOG_RUN_LOGGING\000"
 2700      48444F47 
 2700      5F52554E 
 2700      5F4C4F47 
 2700      47494E47 
 2701              	.LASF18:
 2702 02eb 73697A65 		.ascii	"size_t\000"
 2702      5F7400
 2703              	.LASF43:
 2704 02f2 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 2704      52524F52 
 2704      5F434845 
 2704      434B5355 
 2704      4D00
 2705              	.LASF139:
 2706 0304 45455F6F 		.ascii	"EE_oo_GetResource\000"
 2706      6F5F4765 
 2706      74526573 
 2706      6F757263 
 2706      6500
 2707              	.LASF113:
 2708 0316 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 2708      53435F53 
 2708      50454544 
 2708      5F676574 
 2708      41676500 
 2709              	.LASF38:
 2710 032a 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 2710      52524F52 
 2710      5F425546 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 72


 2710      4645525F 
 2710      46554C4C 
 2711              	.LASF90:
 2712 033f 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 2712      50454544 
 2712      5F636667 
 2712      5F7300
 2713              	.LASF88:
 2714 034e 7265736F 		.ascii	"resource\000"
 2714      75726365 
 2714      00
 2715              	.LASF87:
 2716 0357 7265736F 		.ascii	"resourceActive\000"
 2716      75726365 
 2716      41637469 
 2716      766500
 2717              	.LASF117:
 2718 0366 5254455F 		.ascii	"RTE_SC_ENGINE_pushPort\000"
 2718      53435F45 
 2718      4E47494E 
 2718      455F7075 
 2718      7368506F 
 2719              	.LASF94:
 2720 037d 70536967 		.ascii	"pSigCfg\000"
 2720      43666700 
 2721              	.LASF75:
 2722 0385 53435F53 		.ascii	"SC_SPEED_data_t\000"
 2722      50454544 
 2722      5F646174 
 2722      615F7400 
 2723              	.LASF17:
 2724 0395 63686172 		.ascii	"char\000"
 2724      00
 2725              	.LASF30:
 2726 039a 52435F53 		.ascii	"RC_SUCCESS\000"
 2726      55434345 
 2726      535300
 2727              	.LASF122:
 2728 03a5 5254455F 		.ascii	"RTE_SC_BRAKELIGHT_pushPort\000"
 2728      53435F42 
 2728      52414B45 
 2728      4C494748 
 2728      545F7075 
 2729              	.LASF29:
 2730 03c0 626F6F6C 		.ascii	"boolean_t\000"
 2730      65616E5F 
 2730      7400
 2731              	.LASF91:
 2732 03ca 53435F53 		.ascii	"SC_SPEED_s\000"
 2732      50454544 
 2732      5F7300
 2733              	.LASF95:
 2734 03d5 53435F53 		.ascii	"SC_SPEED_t\000"
 2734      50454544 
 2734      5F7400
 2735              	.LASF116:
 2736 03e0 64617461 		.ascii	"data\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 73


 2736      00
 2737              	.LASF81:
 2738 03e5 65764F6E 		.ascii	"evOnUpdate\000"
 2738      55706461 
 2738      746500
 2739              	.LASF97:
 2740 03f0 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 2740      4E47494E 
 2740      455F6461 
 2740      74615F74 
 2740      00
 2741              	.LASF51:
 2742 0401 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 2742      52524F52 
 2742      5F424144 
 2742      5F444154 
 2742      4100
 2743              	.LASF12:
 2744 0413 75696E74 		.ascii	"uint8_t\000"
 2744      385F7400 
 2745              	.LASF93:
 2746 041b 73746174 		.ascii	"status\000"
 2746      757300
 2747              	.LASF145:
 2748 0422 736F7572 		.ascii	"source\\asw\\swc_output.c\000"
 2748      63655C61 
 2748      73775C73 
 2748      77635F6F 
 2748      75747075 
 2749              	.LASF107:
 2750 043a 53435F42 		.ascii	"SC_BRAKELIGHT_driverOut_t\000"
 2750      52414B45 
 2750      4C494748 
 2750      545F6472 
 2750      69766572 
 2751              	.LASF106:
 2752 0454 53435F42 		.ascii	"SC_BRAKELIGHT_driverIn_t\000"
 2752      52414B45 
 2752      4C494748 
 2752      545F6472 
 2752      69766572 
 2753              	.LASF74:
 2754 046d 4552524F 		.ascii	"ERROR_LOGGING\000"
 2754      525F4C4F 
 2754      4747494E 
 2754      4700
 2755              	.LASF9:
 2756 047b 6C6F6E67 		.ascii	"long long int\000"
 2756      206C6F6E 
 2756      6720696E 
 2756      7400
 2757              	.LASF79:
 2758 0489 696E4472 		.ascii	"inDriver\000"
 2758      69766572 
 2758      00
 2759              	.LASF85:
 2760 0492 6F6E4572 		.ascii	"onErrorTaskCount\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 74


 2760      726F7254 
 2760      61736B43 
 2760      6F756E74 
 2760      00
 2761              	.LASF52:
 2762 04a3 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 2762      52524F52 
 2762      5F43414E 
 2762      43454C45 
 2762      4400
 2763              	.LASF99:
 2764 04b5 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 2764      4E47494E 
 2764      455F6472 
 2764      69766572 
 2764      4F75745F 
 2765              	.LASF102:
 2766 04cb 53435F45 		.ascii	"SC_ENGINE_s\000"
 2766      4E47494E 
 2766      455F7300 
 2767              	.LASF103:
 2768 04d7 53435F45 		.ascii	"SC_ENGINE_t\000"
 2768      4E47494E 
 2768      455F7400 
 2769              	.LASF67:
 2770 04e3 57415443 		.ascii	"WATCHDOG_RUN_SETBRAKELIGHT\000"
 2770      48444F47 
 2770      5F52554E 
 2770      5F534554 
 2770      4252414B 
 2771              	.LASF78:
 2772 04fe 6D5F7370 		.ascii	"m_speedValue\000"
 2772      65656456 
 2772      616C7565 
 2772      00
 2773              	.LASF98:
 2774 050b 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 2774      4E47494E 
 2774      455F6472 
 2774      69766572 
 2774      496E5F74 
 2775              	.LASF115:
 2776 0520 5254455F 		.ascii	"RTE_SC_SPEED_getThreadSafe\000"
 2776      53435F53 
 2776      50454544 
 2776      5F676574 
 2776      54687265 
 2777              	.LASF37:
 2778 053b 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 2778      52524F52 
 2778      5F554E44 
 2778      45525255 
 2778      4E00
 2779              	.LASF104:
 2780 054d 6D5F6272 		.ascii	"m_brakeValue\000"
 2780      616B6556 
 2780      616C7565 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 75


 2780      00
 2781              	.LASF34:
 2782 055a 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 2782      52524F52 
 2782      5F4D454D 
 2782      4F525900 
 2783              	.LASF80:
 2784 056a 6F757444 		.ascii	"outDriver\000"
 2784      72697665 
 2784      7200
 2785              	.LASF121:
 2786 0574 7461736B 		.ascii	"task\000"
 2786      00
 2787              	.LASF146:
 2788 0579 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EAA\\RTE_Gaspedal_Watc"
 2788      73657273 
 2788      5C7A616B 
 2788      69735C44 
 2788      6F63756D 
 2789 05a7 68646F67 		.ascii	"hdog\\LabOne\\Gaspedal_Watchdog.cydsn\000"
 2789      5C4C6162 
 2789      4F6E655C 
 2789      47617370 
 2789      6564616C 
 2790              	.LASF19:
 2791 05cb 6C6F6E67 		.ascii	"long double\000"
 2791      20646F75 
 2791      626C6500 
 2792              	.LASF62:
 2793 05d7 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 2793      5349474E 
 2793      414C5354 
 2793      41545553 
 2793      5F494E56 
 2794              	.LASF142:
 2795 05f0 57445F41 		.ascii	"WD_Alive\000"
 2795      6C697665 
 2795      00
 2796              	.LASF105:
 2797 05f9 53435F42 		.ascii	"SC_BRAKELIGHT_data_t\000"
 2797      52414B45 
 2797      4C494748 
 2797      545F6461 
 2797      74615F74 
 2798              	.LASF21:
 2799 060e 45455F55 		.ascii	"EE_UINT32\000"
 2799      494E5433 
 2799      3200
 2800              	.LASF44:
 2801 0618 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 2801      52524F52 
 2801      5F524541 
 2801      445F4F4E 
 2801      4C5900
 2802              	.LASF40:
 2803 062b 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 2803      52524F52 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 76


 2803      5F425553 
 2803      5900
 2804              	.LASF50:
 2805 0639 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 2805      52524F52 
 2805      5F424144 
 2805      5F504152 
 2805      414D00
 2806              	.LASF2:
 2807 064c 73686F72 		.ascii	"short int\000"
 2807      7420696E 
 2807      7400
 2808              	.LASF64:
 2809 0656 57415443 		.ascii	"WATCHDOG_RUN_READJOYSTICK\000"
 2809      48444F47 
 2809      5F52554E 
 2809      5F524541 
 2809      444A4F59 
 2810              	.LASF6:
 2811 0670 6C6F6E67 		.ascii	"long int\000"
 2811      20696E74 
 2811      00
 2812              	.LASF135:
 2813 0679 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2813      52784275 
 2813      66666572 
 2813      00
 2814              	.LASF140:
 2815 0686 45455F6F 		.ascii	"EE_oo_ReleaseResource\000"
 2815      6F5F5265 
 2815      6C656173 
 2815      65526573 
 2815      6F757263 
 2816              	.LASF55:
 2817 069c 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 2817      52524F52 
 2817      5F4E4F54 
 2817      5F494D50 
 2817      4C454D45 
 2818              	.LASF46:
 2819 06b5 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 2819      52524F52 
 2819      5F494E56 
 2819      414C4944 
 2819      00
 2820              	.LASF4:
 2821 06c6 5F5F7569 		.ascii	"__uint8_t\000"
 2821      6E74385F 
 2821      7400
 2822              	.LASF109:
 2823 06d0 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_t\000"
 2823      52414B45 
 2823      4C494748 
 2823      545F6366 
 2823      675F7400 
 2824              	.LASF61:
 2825 06e4 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 77


 2825      5349474E 
 2825      414C5354 
 2825      41545553 
 2825      5F56414C 
 2826              	.LASF134:
 2827 06fb 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2827      52515F6E 
 2827      65737469 
 2827      6E675F6C 
 2827      6576656C 
 2828              	.LASF47:
 2829 0710 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 2829      52524F52 
 2829      5F524541 
 2829      445F4641 
 2829      494C5300 
 2830              	.LASF111:
 2831 0724 53435F42 		.ascii	"SC_BRAKELIGHT_t\000"
 2831      52414B45 
 2831      4C494748 
 2831      545F7400 
 2832              	.LASF22:
 2833 0734 45455F55 		.ascii	"EE_UREG\000"
 2833      52454700 
 2834              	.LASF20:
 2835 073c 45455F49 		.ascii	"EE_INT32\000"
 2835      4E543332 
 2835      00
 2836              	.LASF28:
 2837 0745 73697A65 		.ascii	"sizetype\000"
 2837      74797065 
 2837      00
 2838              	.LASF89:
 2839 074e 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 2839      50454544 
 2839      5F636667 
 2839      5F7400
 2840              	.LASF110:
 2841 075d 53435F42 		.ascii	"SC_BRAKELIGHT_s\000"
 2841      52414B45 
 2841      4C494748 
 2841      545F7300 
 2842              	.LASF8:
 2843 076d 6C6F6E67 		.ascii	"long unsigned int\000"
 2843      20756E73 
 2843      69676E65 
 2843      6420696E 
 2843      7400
 2844              	.LASF57:
 2845 077f 5461736B 		.ascii	"TaskTypeArray\000"
 2845      54797065 
 2845      41727261 
 2845      7900
 2846              	.LASF56:
 2847 078d 52435F74 		.ascii	"RC_t\000"
 2847      00
 2848              	.LASF13:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 78


 2849 0792 696E7433 		.ascii	"int32_t\000"
 2849      325F7400 
 2850              	.LASF137:
 2851 079a 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 2851      4E47494E 
 2851      455F7369 
 2851      676E616C 
 2851      00
 2852              	.LASF143:
 2853 07ab 4552524F 		.ascii	"ERROR_isRunnableActive\000"
 2853      525F6973 
 2853      52756E6E 
 2853      61626C65 
 2853      41637469 
 2854              	.LASF36:
 2855 07c2 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 2855      52524F52 
 2855      5F4F5645 
 2855      5252554E 
 2855      00
 2856              	.LASF1:
 2857 07d3 756E7369 		.ascii	"unsigned char\000"
 2857      676E6564 
 2857      20636861 
 2857      7200
 2858              	.LASF7:
 2859 07e1 5F5F7569 		.ascii	"__uint32_t\000"
 2859      6E743332 
 2859      5F7400
 2860              	.LASF120:
 2861 07ec 70546173 		.ascii	"pTaskArray\000"
 2861      6B417272 
 2861      617900
 2862              	.LASF82:
 2863 07f7 65764F6E 		.ascii	"evOnError\000"
 2863      4572726F 
 2863      7200
 2864              	.LASF84:
 2865 0801 6F6E5570 		.ascii	"onUpdateTasks\000"
 2865      64617465 
 2865      5461736B 
 2865      7300
 2866              	.LASF39:
 2867 080f 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 2867      52524F52 
 2867      5F425546 
 2867      4645525F 
 2867      454D5450 
 2868              	.LASF133:
 2869 0825 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2869      74645F65 
 2869      6E646379 
 2869      636C655F 
 2869      6E657874 
 2870              	.LASF66:
 2871 083e 57415443 		.ascii	"WATCHDOG_RUN_SETENGINE\000"
 2871      48444F47 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 79


 2871      5F52554E 
 2871      5F534554 
 2871      454E4749 
 2872              	.LASF54:
 2873 0855 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 2873      52524F52 
 2873      5F554E4B 
 2873      4E4F574E 
 2873      00
 2874              	.LASF76:
 2875 0866 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 2875      50454544 
 2875      5F647269 
 2875      76657249 
 2875      6E5F7400 
 2876              	.LASF126:
 2877 087a 4F555450 		.ascii	"OUTPUT_setBrakeLight_run\000"
 2877      55545F73 
 2877      65744272 
 2877      616B654C 
 2877      69676874 
 2878              	.LASF131:
 2879 0893 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2879      6F5F4952 
 2879      515F7375 
 2879      7370656E 
 2879      645F7374 
 2880              	.LASF130:
 2881 08ac 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2881      6F5F4952 
 2881      515F6469 
 2881      7361626C 
 2881      655F636F 
 2882              	.LASF70:
 2883 08c4 4552524F 		.ascii	"ERROR_INPUT_JOYSTICK\000"
 2883      525F494E 
 2883      5055545F 
 2883      4A4F5953 
 2883      5449434B 
 2884              	.LASF86:
 2885 08d9 6F6E4572 		.ascii	"onErrorTasks\000"
 2885      726F7254 
 2885      61736B73 
 2885      00
 2886              	.LASF69:
 2887 08e6 57415443 		.ascii	"WATCHDOG_RUN_SYSTEM\000"
 2887      48444F47 
 2887      5F52554E 
 2887      5F535953 
 2887      54454D00 
 2888              	.LASF77:
 2889 08fa 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 2889      50454544 
 2889      5F647269 
 2889      7665724F 
 2889      75745F74 
 2890              	.LASF0:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccsH9XdZ.s 			page 80


 2891 090f 7369676E 		.ascii	"signed char\000"
 2891      65642063 
 2891      68617200 
 2892              	.LASF3:
 2893 091b 73686F72 		.ascii	"short unsigned int\000"
 2893      7420756E 
 2893      7369676E 
 2893      65642069 
 2893      6E7400
 2894              	.LASF96:
 2895 092e 6D5F656E 		.ascii	"m_engineValue\000"
 2895      67696E65 
 2895      56616C75 
 2895      6500
 2896              	.LASF60:
 2897 093c 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 2897      5349474E 
 2897      414C5354 
 2897      41545553 
 2897      5F494E49 
 2898              	.LASF16:
 2899 0959 646F7562 		.ascii	"double\000"
 2899      6C6500
 2900              	.LASF138:
 2901 0960 534F5F42 		.ascii	"SO_BRAKELIGHT_signal\000"
 2901      52414B45 
 2901      4C494748 
 2901      545F7369 
 2901      676E616C 
 2902              	.LASF72:
 2903 0975 4552524F 		.ascii	"ERROR_SET_ENGINE\000"
 2903      525F5345 
 2903      545F454E 
 2903      47494E45 
 2903      00
 2904              	.LASF63:
 2905 0986 5254455F 		.ascii	"RTE_signalStatus_t\000"
 2905      7369676E 
 2905      616C5374 
 2905      61747573 
 2905      5F7400
 2906              	.LASF59:
 2907 0999 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 2907      5349474E 
 2907      414C5354 
 2907      41545553 
 2907      5F535441 
 2908              	.LASF35:
 2909 09b2 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 2909      52524F52 
 2909      5F52414E 
 2909      474500
 2910              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
