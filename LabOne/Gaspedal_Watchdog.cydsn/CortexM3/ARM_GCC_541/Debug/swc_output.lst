ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_output.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OUTPUT_setEngine_run,"ax",%progbits
  20              		.align	2
  21              		.global	OUTPUT_setEngine_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	OUTPUT_setEngine_run, %function
  25              	OUTPUT_setEngine_run:
  26              	.LFB165:
  27              		.file 1 "source\\asw\\swc_output.c"
   1:source\asw/swc_output.c **** /*
   2:source\asw/swc_output.c ****  * Filename: swc_output.c
   3:source\asw/swc_output.c ****  *
   4:source\asw/swc_output.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:source\asw/swc_output.c ****  *
   6:source\asw/swc_output.c ****  * description: engine and brakelights
   7:source\asw/swc_output.c ****  * name: swc_output
   8:source\asw/swc_output.c ****  * shortname: output
   9:source\asw/swc_output.c ****  *
  10:source\asw/swc_output.c ****  */
  11:source\asw/swc_output.c **** 
  12:source\asw/swc_output.c **** #include "project.h"
  13:source\asw/swc_output.c **** #include "global.h"
  14:source\asw/swc_output.c **** #include "rte.h"
  15:source\asw/swc_output.c **** #include "rte_types.h"
  16:source\asw/swc_output.c **** #include "swc_output.h"
  17:source\asw/swc_output.c **** 
  18:source\asw/swc_output.c **** 
  19:source\asw/swc_output.c **** 
  20:source\asw/swc_output.c **** /* USER CODE START SWC_OUTPUT_INCLUDE */
  21:source\asw/swc_output.c **** #include "watchdog.h"
  22:source\asw/swc_output.c **** 
  23:source\asw/swc_output.c **** /* USER CODE END SWC_OUTPUT_INCLUDE */
  24:source\asw/swc_output.c **** 
  25:source\asw/swc_output.c **** 
  26:source\asw/swc_output.c **** #include "sp_common.h"
  27:source\asw/swc_output.c **** 
  28:source\asw/swc_output.c **** /* USER CODE START SWC_OUTPUT_USERDEFINITIONS */
  29:source\asw/swc_output.c **** 
  30:source\asw/swc_output.c **** /* USER CODE END SWC_OUTPUT_USERDEFINITIONS */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 2


  31:source\asw/swc_output.c **** 
  32:source\asw/swc_output.c **** 
  33:source\asw/swc_output.c **** 
  34:source\asw/swc_output.c **** /*
  35:source\asw/swc_output.c ****  * component: swc_output
  36:source\asw/swc_output.c ****  * cycletime: 100
  37:source\asw/swc_output.c ****  * description: Sets Green LED according to Engine Speed
  38:source\asw/swc_output.c ****  * events: 
  39:source\asw/swc_output.c ****  * name: OUTPUT_setEngine_run
  40:source\asw/swc_output.c ****  * shortname: setEngine
  41:source\asw/swc_output.c ****  * signalIN: so_speed
  42:source\asw/swc_output.c ****  * signalOUT: so_engine
  43:source\asw/swc_output.c ****  * task: tsk_io
  44:source\asw/swc_output.c ****  */
  45:source\asw/swc_output.c **** void OUTPUT_setEngine_run(RTE_event ev){
  28              		.loc 1 45 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  40              	.LBB18:
  41              	.LBB19:
  42              		.file 2 ".\\source\\rte/sc_speed.h"
   1:.\source\rte/sc_speed.h **** 
   2:.\source\rte/sc_speed.h **** 
   3:.\source\rte/sc_speed.h **** /**
   4:.\source\rte/sc_speed.h ****  *  file    SC_SPEED_signal.h
   5:.\source\rte/sc_speed.h ****  *
   6:.\source\rte/sc_speed.h ****  *  brief   signal base class for signal sc_speed
   7:.\source\rte/sc_speed.h ****  *
   8:.\source\rte/sc_speed.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_speed.h ****  *
  10:.\source\rte/sc_speed.h ****  * description: Signal for Speed
  11:.\source\rte/sc_speed.h ****  * name: sc_speed
  12:.\source\rte/sc_speed.h ****  * shortname: speed
  13:.\source\rte/sc_speed.h ****  *
  14:.\source\rte/sc_speed.h ****  */
  15:.\source\rte/sc_speed.h **** 
  16:.\source\rte/sc_speed.h **** 
  17:.\source\rte/sc_speed.h **** 
  18:.\source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_speed.h **** 
  21:.\source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_speed.h **** #include "global.h"
  23:.\source\rte/sc_speed.h **** #include "project.h"
  24:.\source\rte/sc_speed.h **** #include "rte.h"
  25:.\source\rte/sc_speed.h **** #include "rte_types.h"
  26:.\source\rte/sc_speed.h **** 
  27:.\source\rte/sc_speed.h **** #include "sc_speed_type.h"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 3


  28:.\source\rte/sc_speed.h **** 
  29:.\source\rte/sc_speed.h **** 
  30:.\source\rte/sc_speed.h **** /**************************************************************************************************
  31:.\source\rte/sc_speed.h **** /* The driver API block																						*/
  32:.\source\rte/sc_speed.h **** /**************************************************************************************************
  33:.\source\rte/sc_speed.h ****                                                                                                    
  34:.\source\rte/sc_speed.h **** /**
  35:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_speed.h ****  *  I-Port
  37:.\source\rte/sc_speed.h ****  */
  38:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  39:.\source\rte/sc_speed.h **** 
  40:.\source\rte/sc_speed.h **** /**
  41:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_speed.h ****  *  O-Port
  43:.\source\rte/sc_speed.h ****  */
  44:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  45:.\source\rte/sc_speed.h **** 
  46:.\source\rte/sc_speed.h **** 
  47:.\source\rte/sc_speed.h **** /**************************************************************************************************
  48:.\source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_speed.h **** /**************************************************************************************************
  50:.\source\rte/sc_speed.h **** 
  51:.\source\rte/sc_speed.h **** /**
  52:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_speed.h ****  */
  54:.\source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  55:.\source\rte/sc_speed.h **** {
  56:.\source\rte/sc_speed.h ****     /**
  57:.\source\rte/sc_speed.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_speed.h ****      */
  59:.\source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  60:.\source\rte/sc_speed.h **** 
  61:.\source\rte/sc_speed.h ****     /**
  62:.\source\rte/sc_speed.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_speed.h ****      */
  64:.\source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  65:.\source\rte/sc_speed.h ****    
  66:.\source\rte/sc_speed.h ****     /**
  67:.\source\rte/sc_speed.h ****      * Event onUpdate
  68:.\source\rte/sc_speed.h ****      */
  69:.\source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_speed.h ****     
  71:.\source\rte/sc_speed.h ****     
  72:.\source\rte/sc_speed.h ****     /**
  73:.\source\rte/sc_speed.h ****      * Event onError
  74:.\source\rte/sc_speed.h ****      */
  75:.\source\rte/sc_speed.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_speed.h ****     
  77:.\source\rte/sc_speed.h ****     /**
  78:.\source\rte/sc_speed.h ****      * Task Count onUpdate
  79:.\source\rte/sc_speed.h ****      */
  80:.\source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_speed.h **** 
  82:.\source\rte/sc_speed.h ****     /**
  83:.\source\rte/sc_speed.h ****      * Task List onUpdate
  84:.\source\rte/sc_speed.h ****      */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 4


  85:.\source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_speed.h ****     
  87:.\source\rte/sc_speed.h ****     /**
  88:.\source\rte/sc_speed.h ****      * Task Count onError
  89:.\source\rte/sc_speed.h ****      */
  90:.\source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_speed.h **** 
  92:.\source\rte/sc_speed.h ****     /**
  93:.\source\rte/sc_speed.h ****      * Task List onError
  94:.\source\rte/sc_speed.h ****      */
  95:.\source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_speed.h **** 	
  97:.\source\rte/sc_speed.h **** 	
  98:.\source\rte/sc_speed.h **** 	/**
  99:.\source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_speed.h **** 	 */
 101:.\source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_speed.h **** 	 
 103:.\source\rte/sc_speed.h **** 	/**
 104:.\source\rte/sc_speed.h **** 	 * Ressourse 
 105:.\source\rte/sc_speed.h **** 	 */
 106:.\source\rte/sc_speed.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_speed.h **** 
 108:.\source\rte/sc_speed.h **** };                                                                                                 
 109:.\source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 110:.\source\rte/sc_speed.h ****                               
 111:.\source\rte/sc_speed.h **** /**************************************************************************************************
 112:.\source\rte/sc_speed.h **** /* The data interface block																							*/
 113:.\source\rte/sc_speed.h **** /**************************************************************************************************
 114:.\source\rte/sc_speed.h **** 
 115:.\source\rte/sc_speed.h ****                                                                                                    
 116:.\source\rte/sc_speed.h **** 							  
 117:.\source\rte/sc_speed.h **** /**
 118:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 119:.\source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_speed.h ****  */
 121:.\source\rte/sc_speed.h **** struct SC_SPEED_s
 122:.\source\rte/sc_speed.h **** {                                                                                                  
 123:.\source\rte/sc_speed.h **** 
 124:.\source\rte/sc_speed.h **** 	/**
 125:.\source\rte/sc_speed.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_speed.h **** 	 */
 127:.\source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 128:.\source\rte/sc_speed.h **** 
 129:.\source\rte/sc_speed.h ****     /**
 130:.\source\rte/sc_speed.h ****      * Current signal status
 131:.\source\rte/sc_speed.h ****      */
 132:.\source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_speed.h **** 
 134:.\source\rte/sc_speed.h ****     /**
 135:.\source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_speed.h ****      */
 137:.\source\rte/sc_speed.h ****     uint32_t age;
 138:.\source\rte/sc_speed.h **** 
 139:.\source\rte/sc_speed.h ****     /**
 140:.\source\rte/sc_speed.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_speed.h ****      */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 5


 142:.\source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_speed.h **** 
 144:.\source\rte/sc_speed.h **** };                                                                                                 
 145:.\source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 146:.\source\rte/sc_speed.h **** 
 147:.\source\rte/sc_speed.h **** /**************************************************************************************************
 148:.\source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_speed.h **** /**************************************************************************************************
 150:.\source\rte/sc_speed.h **** 
 151:.\source\rte/sc_speed.h **** /**
 152:.\source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_speed.h ****  *
 156:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_speed.h ****  *
 159:.\source\rte/sc_speed.h ****  **/
 160:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal )
 161:.\source\rte/sc_speed.h **** {                                                                                                  
 162:.\source\rte/sc_speed.h **** 
 163:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_speed.h **** 
 165:.\source\rte/sc_speed.h ****    //Set value and raw value
 166:.\source\rte/sc_speed.h ****    signal->value  = SC_SPEED_INIT_DATA;
 167:.\source\rte/sc_speed.h ****    signal->age    = 0;
 168:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_speed.h **** 
 170:.\source\rte/sc_speed.h ****    return ret;
 171:.\source\rte/sc_speed.h **** }
 172:.\source\rte/sc_speed.h **** 
 173:.\source\rte/sc_speed.h **** /**************************************************************************************************
 174:.\source\rte/sc_speed.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_speed.h **** /**************************************************************************************************
 176:.\source\rte/sc_speed.h **** 
 177:.\source\rte/sc_speed.h **** /**
 178:.\source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_speed.h ****  *
 180:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_speed.h ****  *
 183:.\source\rte/sc_speed.h ****  **/
 184:.\source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 185:.\source\rte/sc_speed.h **** {
 186:.\source\rte/sc_speed.h ****    return signal->status;
 187:.\source\rte/sc_speed.h **** }
 188:.\source\rte/sc_speed.h **** 
 189:.\source\rte/sc_speed.h **** 
 190:.\source\rte/sc_speed.h **** /**
 191:.\source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_speed.h ****  *
 193:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_speed.h ****  *
 197:.\source\rte/sc_speed.h ****  */
 198:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 6


 199:.\source\rte/sc_speed.h **** {
 200:.\source\rte/sc_speed.h ****    signal->status = status;
 201:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 202:.\source\rte/sc_speed.h ****    
 203:.\source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_speed.h ****    {
 206:.\source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_speed.h **** 
 209:.\source\rte/sc_speed.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_speed.h **** 			}
 214:.\source\rte/sc_speed.h **** 		}
 215:.\source\rte/sc_speed.h ****    }
 216:.\source\rte/sc_speed.h ****    
 217:.\source\rte/sc_speed.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_speed.h **** }
 219:.\source\rte/sc_speed.h **** 
 220:.\source\rte/sc_speed.h **** 
 221:.\source\rte/sc_speed.h **** /**
 222:.\source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_speed.h ****  *
 225:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_speed.h ****  */
 228:.\source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 229:.\source\rte/sc_speed.h **** {
 230:.\source\rte/sc_speed.h ****    return signal->age;
 231:.\source\rte/sc_speed.h **** }
 232:.\source\rte/sc_speed.h **** 
 233:.\source\rte/sc_speed.h **** /**
 234:.\source\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_speed.h ****  * @return void
 238:.\source\rte/sc_speed.h ****  */
 239:.\source\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 240:.\source\rte/sc_speed.h **** {
 241:.\source\rte/sc_speed.h **** 	   //Hack....
 242:.\source\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_speed.h **** 	   {
 244:.\source\rte/sc_speed.h **** 	      signal->age += increment;
 245:.\source\rte/sc_speed.h **** 	   }
 246:.\source\rte/sc_speed.h **** }
 247:.\source\rte/sc_speed.h **** 
 248:.\source\rte/sc_speed.h **** 
 249:.\source\rte/sc_speed.h **** /**************************************************************************************************
 250:.\source\rte/sc_speed.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_speed.h **** /**************************************************************************************************
 252:.\source\rte/sc_speed.h **** 
 253:.\source\rte/sc_speed.h **** /**
 254:.\source\rte/sc_speed.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_speed.h ****  * Careful: This is not threadsafe!!!
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 7


 256:.\source\rte/sc_speed.h ****  *
 257:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_speed.h ****  *
 260:.\source\rte/sc_speed.h ****  **/
 261:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t* RTE_SC_SPEED_getPtr( SC_SPEED_t * const signal )
 262:.\source\rte/sc_speed.h **** {               
 263:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_speed.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_speed.h **** }
 266:.\source\rte/sc_speed.h **** 
 267:.\source\rte/sc_speed.h **** /**
 268:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_speed.h ****  *
 270:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t: current value of the application data buffer
 272:.\source\rte/sc_speed.h ****  *
 273:.\source\rte/sc_speed.h ****  **/
 274:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t RTE_SC_SPEED_get( const SC_SPEED_t * const signal )
 275:.\source\rte/sc_speed.h **** {               
 276:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_speed.h ****    return signal->value;                                                                           
  43              		.loc 2 277 0
  44 0002 204A     		ldr	r2, .L11
  45 0004 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
  46              	.LVL2:
  47              	.LBE19:
  48              	.LBE18:
  46:source\asw/swc_output.c **** 	
  47:source\asw/swc_output.c **** 	/* USER CODE START OUTPUT_setEngine_run */
  48:source\asw/swc_output.c ****     
  49:source\asw/swc_output.c **** //    UART_Logs_PutString("In Engine\n");
  50:source\asw/swc_output.c **** //    UART_Logs_PutChar(SO_SPEED_signal.age);
  51:source\asw/swc_output.c **** //    UART_Logs_PutString("\n"); 
  52:source\asw/swc_output.c ****     
  53:source\asw/swc_output.c ****     SC_SPEED_data_t speed = RTE_SC_SPEED_get(&SO_SPEED_signal);
  54:source\asw/swc_output.c ****     SC_ENGINE_data_t engine = SC_ENGINE_INIT_DATA;
  49              		.loc 1 54 0
  50 0006 4FF00003 		mov	r3, #0
  51              	.LVL3:
  52              	.LBB20:
  53              	.LBB21:
 230:.\source\rte/sc_speed.h **** }
  54              		.loc 2 230 0
  55 000a 5268     		ldr	r2, [r2, #4]
  56              	.LVL4:
  57              	.LBE21:
  58              	.LBE20:
  55:source\asw/swc_output.c ****     
  56:source\asw/swc_output.c ****     if (RTE_SC_SPEED_getAge(&SO_SPEED_signal) < 50){
  59              		.loc 1 56 0
  60 000c 312A     		cmp	r2, #49
  61 000e 00D8     		bhi	.L2
  57:source\asw/swc_output.c ****         engine.m_engineValue = speed.m_speedValue;
  62              		.loc 1 57 0
  63 0010 0B46     		mov	r3, r1
  64              	.L2:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 8


  65              	.LVL5:
  66 0012 1C46     		mov	r4, r3
  67              	.LVL6:
  68              	.LBB22:
  69              	.LBB23:
  70              		.file 3 ".\\source\\rte/sc_engine.h"
   1:.\source\rte/sc_engine.h **** 
   2:.\source\rte/sc_engine.h **** 
   3:.\source\rte/sc_engine.h **** /**
   4:.\source\rte/sc_engine.h ****  *  file    SC_ENGINE_signal.h
   5:.\source\rte/sc_engine.h ****  *
   6:.\source\rte/sc_engine.h ****  *  brief   signal base class for signal sc_engine
   7:.\source\rte/sc_engine.h ****  *
   8:.\source\rte/sc_engine.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_engine.h ****  *
  10:.\source\rte/sc_engine.h ****  * description: Signal for engine
  11:.\source\rte/sc_engine.h ****  * name: sc_engine
  12:.\source\rte/sc_engine.h ****  * shortname: engine
  13:.\source\rte/sc_engine.h ****  *
  14:.\source\rte/sc_engine.h ****  */
  15:.\source\rte/sc_engine.h **** 
  16:.\source\rte/sc_engine.h **** 
  17:.\source\rte/sc_engine.h **** 
  18:.\source\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_engine.h **** 
  21:.\source\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_engine.h **** #include "global.h"
  23:.\source\rte/sc_engine.h **** #include "project.h"
  24:.\source\rte/sc_engine.h **** #include "rte.h"
  25:.\source\rte/sc_engine.h **** #include "rte_types.h"
  26:.\source\rte/sc_engine.h **** 
  27:.\source\rte/sc_engine.h **** #include "sc_engine_type.h"
  28:.\source\rte/sc_engine.h **** 
  29:.\source\rte/sc_engine.h **** 
  30:.\source\rte/sc_engine.h **** /**************************************************************************************************
  31:.\source\rte/sc_engine.h **** /* The driver API block																						*/
  32:.\source\rte/sc_engine.h **** /**************************************************************************************************
  33:.\source\rte/sc_engine.h ****                                                                                                    
  34:.\source\rte/sc_engine.h **** /**
  35:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_engine.h ****  *  I-Port
  37:.\source\rte/sc_engine.h ****  */
  38:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  39:.\source\rte/sc_engine.h **** 
  40:.\source\rte/sc_engine.h **** /**
  41:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_engine.h ****  *  O-Port
  43:.\source\rte/sc_engine.h ****  */
  44:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  45:.\source\rte/sc_engine.h **** 
  46:.\source\rte/sc_engine.h **** 
  47:.\source\rte/sc_engine.h **** /**************************************************************************************************
  48:.\source\rte/sc_engine.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_engine.h **** /**************************************************************************************************
  50:.\source\rte/sc_engine.h **** 
  51:.\source\rte/sc_engine.h **** /**
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 9


  52:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_engine.h ****  */
  54:.\source\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  55:.\source\rte/sc_engine.h **** {
  56:.\source\rte/sc_engine.h ****     /**
  57:.\source\rte/sc_engine.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_engine.h ****      */
  59:.\source\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  60:.\source\rte/sc_engine.h **** 
  61:.\source\rte/sc_engine.h ****     /**
  62:.\source\rte/sc_engine.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_engine.h ****      */
  64:.\source\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  65:.\source\rte/sc_engine.h ****    
  66:.\source\rte/sc_engine.h ****     /**
  67:.\source\rte/sc_engine.h ****      * Event onUpdate
  68:.\source\rte/sc_engine.h ****      */
  69:.\source\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_engine.h ****     
  71:.\source\rte/sc_engine.h ****     
  72:.\source\rte/sc_engine.h ****     /**
  73:.\source\rte/sc_engine.h ****      * Event onError
  74:.\source\rte/sc_engine.h ****      */
  75:.\source\rte/sc_engine.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_engine.h ****     
  77:.\source\rte/sc_engine.h ****     /**
  78:.\source\rte/sc_engine.h ****      * Task Count onUpdate
  79:.\source\rte/sc_engine.h ****      */
  80:.\source\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_engine.h **** 
  82:.\source\rte/sc_engine.h ****     /**
  83:.\source\rte/sc_engine.h ****      * Task List onUpdate
  84:.\source\rte/sc_engine.h ****      */
  85:.\source\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_engine.h ****     
  87:.\source\rte/sc_engine.h ****     /**
  88:.\source\rte/sc_engine.h ****      * Task Count onError
  89:.\source\rte/sc_engine.h ****      */
  90:.\source\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_engine.h **** 
  92:.\source\rte/sc_engine.h ****     /**
  93:.\source\rte/sc_engine.h ****      * Task List onError
  94:.\source\rte/sc_engine.h ****      */
  95:.\source\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_engine.h **** 	
  97:.\source\rte/sc_engine.h **** 	
  98:.\source\rte/sc_engine.h **** 	/**
  99:.\source\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_engine.h **** 	 */
 101:.\source\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_engine.h **** 	 
 103:.\source\rte/sc_engine.h **** 	/**
 104:.\source\rte/sc_engine.h **** 	 * Ressourse 
 105:.\source\rte/sc_engine.h **** 	 */
 106:.\source\rte/sc_engine.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_engine.h **** 
 108:.\source\rte/sc_engine.h **** };                                                                                                 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 10


 109:.\source\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 110:.\source\rte/sc_engine.h ****                               
 111:.\source\rte/sc_engine.h **** /**************************************************************************************************
 112:.\source\rte/sc_engine.h **** /* The data interface block																							*/
 113:.\source\rte/sc_engine.h **** /**************************************************************************************************
 114:.\source\rte/sc_engine.h **** 
 115:.\source\rte/sc_engine.h ****                                                                                                    
 116:.\source\rte/sc_engine.h **** 							  
 117:.\source\rte/sc_engine.h **** /**
 118:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 119:.\source\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_engine.h ****  */
 121:.\source\rte/sc_engine.h **** struct SC_ENGINE_s
 122:.\source\rte/sc_engine.h **** {                                                                                                  
 123:.\source\rte/sc_engine.h **** 
 124:.\source\rte/sc_engine.h **** 	/**
 125:.\source\rte/sc_engine.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_engine.h **** 	 */
 127:.\source\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 128:.\source\rte/sc_engine.h **** 
 129:.\source\rte/sc_engine.h ****     /**
 130:.\source\rte/sc_engine.h ****      * Current signal status
 131:.\source\rte/sc_engine.h ****      */
 132:.\source\rte/sc_engine.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_engine.h **** 
 134:.\source\rte/sc_engine.h ****     /**
 135:.\source\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_engine.h ****      */
 137:.\source\rte/sc_engine.h ****     uint32_t age;
 138:.\source\rte/sc_engine.h **** 
 139:.\source\rte/sc_engine.h ****     /**
 140:.\source\rte/sc_engine.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_engine.h ****      */
 142:.\source\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_engine.h **** 
 144:.\source\rte/sc_engine.h **** };                                                                                                 
 145:.\source\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 146:.\source\rte/sc_engine.h **** 
 147:.\source\rte/sc_engine.h **** /**************************************************************************************************
 148:.\source\rte/sc_engine.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_engine.h **** /**************************************************************************************************
 150:.\source\rte/sc_engine.h **** 
 151:.\source\rte/sc_engine.h **** /**
 152:.\source\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_engine.h ****  *
 156:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_engine.h ****  *
 159:.\source\rte/sc_engine.h ****  **/
 160:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal )
 161:.\source\rte/sc_engine.h **** {                                                                                                  
 162:.\source\rte/sc_engine.h **** 
 163:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_engine.h **** 
 165:.\source\rte/sc_engine.h ****    //Set value and raw value
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 11


 166:.\source\rte/sc_engine.h ****    signal->value  = SC_ENGINE_INIT_DATA;
 167:.\source\rte/sc_engine.h ****    signal->age    = 0;
 168:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_engine.h **** 
 170:.\source\rte/sc_engine.h ****    return ret;
 171:.\source\rte/sc_engine.h **** }
 172:.\source\rte/sc_engine.h **** 
 173:.\source\rte/sc_engine.h **** /**************************************************************************************************
 174:.\source\rte/sc_engine.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_engine.h **** /**************************************************************************************************
 176:.\source\rte/sc_engine.h **** 
 177:.\source\rte/sc_engine.h **** /**
 178:.\source\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_engine.h ****  *
 180:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_engine.h ****  *
 183:.\source\rte/sc_engine.h ****  **/
 184:.\source\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 185:.\source\rte/sc_engine.h **** {
 186:.\source\rte/sc_engine.h ****    return signal->status;
 187:.\source\rte/sc_engine.h **** }
 188:.\source\rte/sc_engine.h **** 
 189:.\source\rte/sc_engine.h **** 
 190:.\source\rte/sc_engine.h **** /**
 191:.\source\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_engine.h ****  *
 193:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_engine.h ****  *
 197:.\source\rte/sc_engine.h ****  */
 198:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_engine.h **** {
 200:.\source\rte/sc_engine.h ****    signal->status = status;
 201:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 202:.\source\rte/sc_engine.h ****    
 203:.\source\rte/sc_engine.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_engine.h ****    {
 206:.\source\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_engine.h **** 
 209:.\source\rte/sc_engine.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_engine.h **** 			}
 214:.\source\rte/sc_engine.h **** 		}
 215:.\source\rte/sc_engine.h ****    }
 216:.\source\rte/sc_engine.h ****    
 217:.\source\rte/sc_engine.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_engine.h **** }
 219:.\source\rte/sc_engine.h **** 
 220:.\source\rte/sc_engine.h **** 
 221:.\source\rte/sc_engine.h **** /**
 222:.\source\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 12


 223:.\source\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_engine.h ****  *
 225:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_engine.h ****  */
 228:.\source\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 229:.\source\rte/sc_engine.h **** {
 230:.\source\rte/sc_engine.h ****    return signal->age;
 231:.\source\rte/sc_engine.h **** }
 232:.\source\rte/sc_engine.h **** 
 233:.\source\rte/sc_engine.h **** /**
 234:.\source\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_engine.h ****  * @return void
 238:.\source\rte/sc_engine.h ****  */
 239:.\source\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 240:.\source\rte/sc_engine.h **** {
 241:.\source\rte/sc_engine.h **** 	   //Hack....
 242:.\source\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_engine.h **** 	   {
 244:.\source\rte/sc_engine.h **** 	      signal->age += increment;
 245:.\source\rte/sc_engine.h **** 	   }
 246:.\source\rte/sc_engine.h **** }
 247:.\source\rte/sc_engine.h **** 
 248:.\source\rte/sc_engine.h **** 
 249:.\source\rte/sc_engine.h **** /**************************************************************************************************
 250:.\source\rte/sc_engine.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_engine.h **** /**************************************************************************************************
 252:.\source\rte/sc_engine.h **** 
 253:.\source\rte/sc_engine.h **** /**
 254:.\source\rte/sc_engine.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_engine.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_engine.h ****  *
 257:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_engine.h ****  *
 260:.\source\rte/sc_engine.h ****  **/
 261:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t* RTE_SC_ENGINE_getPtr( SC_ENGINE_t * const signal )
 262:.\source\rte/sc_engine.h **** {               
 263:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_engine.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_engine.h **** }
 266:.\source\rte/sc_engine.h **** 
 267:.\source\rte/sc_engine.h **** /**
 268:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_engine.h ****  *
 270:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t: current value of the application data buffer
 272:.\source\rte/sc_engine.h ****  *
 273:.\source\rte/sc_engine.h ****  **/
 274:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t RTE_SC_ENGINE_get( const SC_ENGINE_t * const signal )
 275:.\source\rte/sc_engine.h **** {               
 276:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_engine.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_engine.h **** }                                                                                                  
 279:.\source\rte/sc_engine.h ****                                                                                                    
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 13


 280:.\source\rte/sc_engine.h **** /**
 281:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_engine.h ****  *
 283:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_engine.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_engine.h ****  *
 287:.\source\rte/sc_engine.h ****  **/
 288:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_getThreadSafe( const SC_ENGINE_t * const signal, SC_ENGINE_data_t * const
 289:.\source\rte/sc_engine.h **** {    
 290:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_engine.h ****    *data = signal->value;
 292:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_engine.h **** 
 294:.\source\rte/sc_engine.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_engine.h ****    
 296:.\source\rte/sc_engine.h **** }                                                                                                  
 297:.\source\rte/sc_engine.h ****                                                                                                    
 298:.\source\rte/sc_engine.h **** /**
 299:.\source\rte/sc_engine.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_engine.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_engine.h ****  * signal specific scaling function.
 302:.\source\rte/sc_engine.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_engine.h ****  *
 304:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_engine.h ****  * @param  sc_engine_data_t const value: value for the application data buffer
 306:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_engine.h ****  *
 308:.\source\rte/sc_engine.h ****  **/
 309:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_set(SC_ENGINE_t * const signal, const SC_ENGINE_data_t value  )
 310:.\source\rte/sc_engine.h **** {
 311:.\source\rte/sc_engine.h **** 
 312:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 314:.\source\rte/sc_engine.h **** 
 315:.\source\rte/sc_engine.h **** 
 316:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
  71              		.loc 3 316 0
  72 0014 1C4B     		ldr	r3, .L11+4
  73              	.LVL7:
  74 0016 9B68     		ldr	r3, [r3, #8]
  75 0018 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
  76 001c 012A     		cmp	r2, #1
  77 001e 02D1     		bne	.L3
  78 0020 586A     		ldr	r0, [r3, #36]
  79              	.LVL8:
  80 0022 FFF7FEFF 		bl	EE_oo_GetResource
  81              	.LVL9:
  82              	.L3:
 317:.\source\rte/sc_engine.h ****    signal->value  = value;
  83              		.loc 3 317 0
  84 0026 184B     		ldr	r3, .L11+4
  85              	.LVL10:
  86 0028 1C70     		strb	r4, [r3]
 318:.\source\rte/sc_engine.h ****    signal->age    = 0;
  87              		.loc 3 318 0
  88 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 14


  89 002c 5A60     		str	r2, [r3, #4]
 319:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
  90              		.loc 3 319 0
  91 002e 0222     		movs	r2, #2
  92 0030 5A70     		strb	r2, [r3, #1]
 320:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
  93              		.loc 3 320 0
  94 0032 9B68     		ldr	r3, [r3, #8]
  95 0034 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
  96 0038 012A     		cmp	r2, #1
  97 003a 02D1     		bne	.L4
  98 003c 586A     		ldr	r0, [r3, #36]
  99 003e FFF7FEFF 		bl	EE_oo_ReleaseResource
 100              	.LVL11:
 101              	.L4:
 321:.\source\rte/sc_engine.h **** 
 322:.\source\rte/sc_engine.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_engine.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 102              		.loc 3 323 0
 103 0042 114B     		ldr	r3, .L11+4
 104 0044 9B68     		ldr	r3, [r3, #8]
 105 0046 5D69     		ldr	r5, [r3, #20]
 106              	.LVL12:
 324:.\source\rte/sc_engine.h **** 
 325:.\source\rte/sc_engine.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 107              		.loc 3 325 0
 108 0048 9B68     		ldr	r3, [r3, #8]
 109 004a 73B1     		cbz	r3, .L5
 110 004c 3DB9     		cbnz	r5, .L9
 111 004e 0CE0     		b	.L5
 112              	.LVL13:
 113              	.L7:
 114              	.LBB24:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_engine.h **** 		  
 328:.\source\rte/sc_engine.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_engine.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 115              		.loc 3 329 0
 116 0050 9968     		ldr	r1, [r3, #8]
 117 0052 55F82400 		ldr	r0, [r5, r4, lsl #2]
 118 0056 FFF7FEFF 		bl	EE_oo_SetEvent
 119              	.LVL14:
 120              	.LBE24:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 121              		.loc 3 326 0
 122 005a 0134     		adds	r4, r4, #1
 123              	.LVL15:
 124 005c 00E0     		b	.L6
 125              	.LVL16:
 126              	.L9:
 325:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 127              		.loc 3 325 0
 128 005e 0024     		movs	r4, #0
 129              	.LVL17:
 130              	.L6:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 131              		.loc 3 326 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 15


 132 0060 094B     		ldr	r3, .L11+4
 133 0062 9B68     		ldr	r3, [r3, #8]
 134 0064 1A69     		ldr	r2, [r3, #16]
 135 0066 9442     		cmp	r4, r2
 136 0068 F2D3     		bcc	.L7
 137              	.LVL18:
 138              	.L5:
 139              	.LBE23:
 140              	.LBE22:
 141              	.LBB25:
 142              	.LBB26:
 330:.\source\rte/sc_engine.h ****       }
 331:.\source\rte/sc_engine.h ****    }
 332:.\source\rte/sc_engine.h **** 
 333:.\source\rte/sc_engine.h ****    return ret;
 334:.\source\rte/sc_engine.h **** }                                                                                                  
 335:.\source\rte/sc_engine.h ****                                                                                                    
 336:.\source\rte/sc_engine.h ****                                                                                                    
 337:.\source\rte/sc_engine.h **** /**************************************************************************************************
 338:.\source\rte/sc_engine.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_engine.h **** /**************************************************************************************************
 340:.\source\rte/sc_engine.h **** 
 341:.\source\rte/sc_engine.h ****                                                                                                    
 342:.\source\rte/sc_engine.h **** /**
 343:.\source\rte/sc_engine.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_engine.h ****  *
 345:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_engine.h ****  *
 348:.\source\rte/sc_engine.h ****  */
 349:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pullPort( SC_ENGINE_t * const signal )
 350:.\source\rte/sc_engine.h **** {                                                                                                  
 351:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_engine.h **** 
 353:.\source\rte/sc_engine.h ****                                                                                                    
 354:.\source\rte/sc_engine.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_engine.h ****    {
 356:.\source\rte/sc_engine.h **** 	  SC_ENGINE_data_t value = signal->value;
 357:.\source\rte/sc_engine.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_engine.h ****                                                                                                    
 359:.\source\rte/sc_engine.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_engine.h ****       {
 361:.\source\rte/sc_engine.h ****     	  //Critical Section
 362:.\source\rte/sc_engine.h ****     	  RTE_SC_ENGINE_set(signal, value);
 363:.\source\rte/sc_engine.h ****       }
 364:.\source\rte/sc_engine.h ****       else
 365:.\source\rte/sc_engine.h ****       {
 366:.\source\rte/sc_engine.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_engine.h **** 		  RTE_SC_ENGINE_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_engine.h ****       }
 369:.\source\rte/sc_engine.h **** 
 370:.\source\rte/sc_engine.h ****    }                                                                                               
 371:.\source\rte/sc_engine.h ****                                                                                                    
 372:.\source\rte/sc_engine.h ****    return ret;                                                                                     
 373:.\source\rte/sc_engine.h **** }                                                                                                  
 374:.\source\rte/sc_engine.h ****                                                                                                    
 375:.\source\rte/sc_engine.h **** /**
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 16


 376:.\source\rte/sc_engine.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_engine.h ****  *
 378:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_engine.h ****  *
 381:.\source\rte/sc_engine.h ****  **/
 382:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pushPort( const SC_ENGINE_t * const signal )
 383:.\source\rte/sc_engine.h **** {                                                                                                  
 384:.\source\rte/sc_engine.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_engine.h **** 
 386:.\source\rte/sc_engine.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 143              		.loc 3 386 0
 144 006a 074B     		ldr	r3, .L11+4
 145 006c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 146 006e 022B     		cmp	r3, #2
 147 0070 03D1     		bne	.L8
 387:.\source\rte/sc_engine.h ****    {
 388:.\source\rte/sc_engine.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 148              		.loc 3 388 0
 149 0072 0548     		ldr	r0, .L11+4
 150 0074 8368     		ldr	r3, [r0, #8]
 151 0076 5B68     		ldr	r3, [r3, #4]
 152 0078 9847     		blx	r3
 153              	.LVL19:
 154              	.L8:
 155              	.LBE26:
 156              	.LBE25:
  58:source\asw/swc_output.c ****     } else {
  59:source\asw/swc_output.c ****         engine.m_engineValue = 0;
  60:source\asw/swc_output.c ****     }
  61:source\asw/swc_output.c ****     
  62:source\asw/swc_output.c ****     RTE_SC_ENGINE_set(&SO_ENGINE_signal, engine);
  63:source\asw/swc_output.c ****     RC_t error = RTE_SC_ENGINE_pushPort(&SO_ENGINE_signal);
  64:source\asw/swc_output.c ****     
  65:source\asw/swc_output.c ****     WD_Alive(WATCHDOG_RUN_SETENGINE);
 157              		.loc 1 65 0
 158 007a 0220     		movs	r0, #2
 159 007c FFF7FEFF 		bl	WD_Alive
 160              	.LVL20:
 161 0080 38BD     		pop	{r3, r4, r5, pc}
 162              	.LVL21:
 163              	.L12:
 164 0082 00BF     		.align	2
 165              	.L11:
 166 0084 00000000 		.word	SO_SPEED_signal
 167 0088 00000000 		.word	SO_ENGINE_signal
 168              		.cfi_endproc
 169              	.LFE165:
 170              		.size	OUTPUT_setEngine_run, .-OUTPUT_setEngine_run
 171              		.section	.text.OUTPUT_setBrakeLight_run,"ax",%progbits
 172              		.align	2
 173              		.global	OUTPUT_setBrakeLight_run
 174              		.thumb
 175              		.thumb_func
 176              		.type	OUTPUT_setBrakeLight_run, %function
 177              	OUTPUT_setBrakeLight_run:
 178              	.LFB166:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 17


  66:source\asw/swc_output.c **** 
  67:source\asw/swc_output.c ****     /* USER CODE END OUTPUT_setEngine_run */
  68:source\asw/swc_output.c **** }
  69:source\asw/swc_output.c **** 
  70:source\asw/swc_output.c **** /*
  71:source\asw/swc_output.c ****  * component: swc_output
  72:source\asw/swc_output.c ****  * cycletime: 0
  73:source\asw/swc_output.c ****  * description: Sets LED according to brake condition
  74:source\asw/swc_output.c ****  * events: ev_speed_onData
  75:source\asw/swc_output.c ****  * name: OUTPUT_setBrakeLight_run
  76:source\asw/swc_output.c ****  * shortname: setBrakeLight
  77:source\asw/swc_output.c ****  * signalIN: so_speed
  78:source\asw/swc_output.c ****  * signalOUT: so_brakelight
  79:source\asw/swc_output.c ****  * task: tsk_io
  80:source\asw/swc_output.c ****  */
  81:source\asw/swc_output.c **** void OUTPUT_setBrakeLight_run(RTE_event ev){
 179              		.loc 1 81 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL22:
 184 0000 30B5     		push	{r4, r5, lr}
 185              		.cfi_def_cfa_offset 12
 186              		.cfi_offset 4, -12
 187              		.cfi_offset 5, -8
 188              		.cfi_offset 14, -4
 189 0002 83B0     		sub	sp, sp, #12
 190              		.cfi_def_cfa_offset 24
 191              	.LVL23:
 192              	.LBB27:
 193              	.LBB28:
 194              		.loc 2 277 0
 195 0004 224B     		ldr	r3, .L23
 196 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 0008 8DF80430 		strb	r3, [sp, #4]
 198              	.LVL24:
 199              	.LBE28:
 200              	.LBE27:
  82:source\asw/swc_output.c **** 	
  83:source\asw/swc_output.c **** 	/* USER CODE START OUTPUT_setBrakeLight_run */
  84:source\asw/swc_output.c ****     
  85:source\asw/swc_output.c **** //    UART_Logs_PutString("In Brakelight\n");
  86:source\asw/swc_output.c ****     
  87:source\asw/swc_output.c ****     
  88:source\asw/swc_output.c ****     volatile SC_SPEED_data_t speed = RTE_SC_SPEED_get(&SO_SPEED_signal);
  89:source\asw/swc_output.c ****     SC_BRAKELIGHT_data_t brake = SC_BRAKELIGHT_INIT_DATA;
 201              		.loc 1 89 0
 202 000c 4FF00003 		mov	r3, #0
 203              	.LVL25:
  90:source\asw/swc_output.c ****     if (speed.m_speedValue <= 0){
 204              		.loc 1 90 0
 205 0010 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 206 0014 12F0FF0F 		tst	r2, #255
 207 0018 01D1     		bne	.L14
  91:source\asw/swc_output.c ****         brake.m_brakeValue = TRUE;
 208              		.loc 1 91 0
 209 001a 4FF00103 		mov	r3, #1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 18


 210              	.L14:
 211              	.LVL26:
 212 001e 1C46     		mov	r4, r3
 213              	.LVL27:
 214              	.LBB29:
 215              	.LBB30:
 216              		.file 4 ".\\source\\rte/sc_brakelight.h"
   1:.\source\rte/sc_brakelight.h **** 
   2:.\source\rte/sc_brakelight.h **** 
   3:.\source\rte/sc_brakelight.h **** /**
   4:.\source\rte/sc_brakelight.h ****  *  file    SC_BRAKELIGHT_signal.h
   5:.\source\rte/sc_brakelight.h ****  *
   6:.\source\rte/sc_brakelight.h ****  *  brief   signal base class for signal sc_brakelight
   7:.\source\rte/sc_brakelight.h ****  *
   8:.\source\rte/sc_brakelight.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_brakelight.h ****  *
  10:.\source\rte/sc_brakelight.h ****  * description: Signal for brake
  11:.\source\rte/sc_brakelight.h ****  * name: sc_brakelight
  12:.\source\rte/sc_brakelight.h ****  * shortname: brakelight
  13:.\source\rte/sc_brakelight.h ****  *
  14:.\source\rte/sc_brakelight.h ****  */
  15:.\source\rte/sc_brakelight.h **** 
  16:.\source\rte/sc_brakelight.h **** 
  17:.\source\rte/sc_brakelight.h **** 
  18:.\source\rte/sc_brakelight.h **** #ifndef SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_brakelight.h **** #define SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_brakelight.h **** 
  21:.\source\rte/sc_brakelight.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_brakelight.h **** #include "global.h"
  23:.\source\rte/sc_brakelight.h **** #include "project.h"
  24:.\source\rte/sc_brakelight.h **** #include "rte.h"
  25:.\source\rte/sc_brakelight.h **** #include "rte_types.h"
  26:.\source\rte/sc_brakelight.h **** 
  27:.\source\rte/sc_brakelight.h **** #include "sc_brakelight_type.h"
  28:.\source\rte/sc_brakelight.h **** 
  29:.\source\rte/sc_brakelight.h **** 
  30:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  31:.\source\rte/sc_brakelight.h **** /* The driver API block																						*/
  32:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  33:.\source\rte/sc_brakelight.h ****                                                                                                    
  34:.\source\rte/sc_brakelight.h **** /**
  35:.\source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_brakelight.h ****  *  I-Port
  37:.\source\rte/sc_brakelight.h ****  */
  38:.\source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverIn_t)(SC_BRAKELIGHT_data_t * const);
  39:.\source\rte/sc_brakelight.h **** 
  40:.\source\rte/sc_brakelight.h **** /**
  41:.\source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_brakelight.h ****  *  O-Port
  43:.\source\rte/sc_brakelight.h ****  */
  44:.\source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverOut_t)( const SC_BRAKELIGHT_data_t * const);
  45:.\source\rte/sc_brakelight.h **** 
  46:.\source\rte/sc_brakelight.h **** 
  47:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  48:.\source\rte/sc_brakelight.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
  50:.\source\rte/sc_brakelight.h **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 19


  51:.\source\rte/sc_brakelight.h **** /**
  52:.\source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_brakelight.h ****  */
  54:.\source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_cfg_s
  55:.\source\rte/sc_brakelight.h **** {
  56:.\source\rte/sc_brakelight.h ****     /**
  57:.\source\rte/sc_brakelight.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_brakelight.h ****      */
  59:.\source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_driverIn_t const inDriver;
  60:.\source\rte/sc_brakelight.h **** 
  61:.\source\rte/sc_brakelight.h ****     /**
  62:.\source\rte/sc_brakelight.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_brakelight.h ****      */
  64:.\source\rte/sc_brakelight.h ****    SC_BRAKELIGHT_driverOut_t const outDriver;
  65:.\source\rte/sc_brakelight.h ****    
  66:.\source\rte/sc_brakelight.h ****     /**
  67:.\source\rte/sc_brakelight.h ****      * Event onUpdate
  68:.\source\rte/sc_brakelight.h ****      */
  69:.\source\rte/sc_brakelight.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_brakelight.h ****     
  71:.\source\rte/sc_brakelight.h ****     
  72:.\source\rte/sc_brakelight.h ****     /**
  73:.\source\rte/sc_brakelight.h ****      * Event onError
  74:.\source\rte/sc_brakelight.h ****      */
  75:.\source\rte/sc_brakelight.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_brakelight.h ****     
  77:.\source\rte/sc_brakelight.h ****     /**
  78:.\source\rte/sc_brakelight.h ****      * Task Count onUpdate
  79:.\source\rte/sc_brakelight.h ****      */
  80:.\source\rte/sc_brakelight.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_brakelight.h **** 
  82:.\source\rte/sc_brakelight.h ****     /**
  83:.\source\rte/sc_brakelight.h ****      * Task List onUpdate
  84:.\source\rte/sc_brakelight.h ****      */
  85:.\source\rte/sc_brakelight.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_brakelight.h ****     
  87:.\source\rte/sc_brakelight.h ****     /**
  88:.\source\rte/sc_brakelight.h ****      * Task Count onError
  89:.\source\rte/sc_brakelight.h ****      */
  90:.\source\rte/sc_brakelight.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_brakelight.h **** 
  92:.\source\rte/sc_brakelight.h ****     /**
  93:.\source\rte/sc_brakelight.h ****      * Task List onError
  94:.\source\rte/sc_brakelight.h ****      */
  95:.\source\rte/sc_brakelight.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_brakelight.h **** 	
  97:.\source\rte/sc_brakelight.h **** 	
  98:.\source\rte/sc_brakelight.h **** 	/**
  99:.\source\rte/sc_brakelight.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_brakelight.h **** 	 */
 101:.\source\rte/sc_brakelight.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_brakelight.h **** 	 
 103:.\source\rte/sc_brakelight.h **** 	/**
 104:.\source\rte/sc_brakelight.h **** 	 * Ressourse 
 105:.\source\rte/sc_brakelight.h **** 	 */
 106:.\source\rte/sc_brakelight.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_brakelight.h **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 20


 108:.\source\rte/sc_brakelight.h **** };                                                                                                 
 109:.\source\rte/sc_brakelight.h **** typedef const struct SC_BRAKELIGHT_cfg_s SC_BRAKELIGHT_cfg_t;
 110:.\source\rte/sc_brakelight.h ****                               
 111:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 112:.\source\rte/sc_brakelight.h **** /* The data interface block																							*/
 113:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 114:.\source\rte/sc_brakelight.h **** 
 115:.\source\rte/sc_brakelight.h ****                                                                                                    
 116:.\source\rte/sc_brakelight.h **** 							  
 117:.\source\rte/sc_brakelight.h **** /**
 118:.\source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_t represent the signal objects.
 119:.\source\rte/sc_brakelight.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_brakelight.h ****  */
 121:.\source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_s
 122:.\source\rte/sc_brakelight.h **** {                                                                                                  
 123:.\source\rte/sc_brakelight.h **** 
 124:.\source\rte/sc_brakelight.h **** 	/**
 125:.\source\rte/sc_brakelight.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_brakelight.h **** 	 */
 127:.\source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_data_t value;
 128:.\source\rte/sc_brakelight.h **** 
 129:.\source\rte/sc_brakelight.h ****     /**
 130:.\source\rte/sc_brakelight.h ****      * Current signal status
 131:.\source\rte/sc_brakelight.h ****      */
 132:.\source\rte/sc_brakelight.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_brakelight.h **** 
 134:.\source\rte/sc_brakelight.h ****     /**
 135:.\source\rte/sc_brakelight.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_brakelight.h ****      */
 137:.\source\rte/sc_brakelight.h ****     uint32_t age;
 138:.\source\rte/sc_brakelight.h **** 
 139:.\source\rte/sc_brakelight.h ****     /**
 140:.\source\rte/sc_brakelight.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_brakelight.h ****      */
 142:.\source\rte/sc_brakelight.h **** 	const SC_BRAKELIGHT_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_brakelight.h **** 
 144:.\source\rte/sc_brakelight.h **** };                                                                                                 
 145:.\source\rte/sc_brakelight.h **** typedef struct SC_BRAKELIGHT_s SC_BRAKELIGHT_t;
 146:.\source\rte/sc_brakelight.h **** 
 147:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 148:.\source\rte/sc_brakelight.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 150:.\source\rte/sc_brakelight.h **** 
 151:.\source\rte/sc_brakelight.h **** /**
 152:.\source\rte/sc_brakelight.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_brakelight.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_brakelight.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_brakelight.h ****  *
 156:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_brakelight.h ****  *
 159:.\source\rte/sc_brakelight.h ****  **/
 160:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_init( SC_BRAKELIGHT_t * const signal )
 161:.\source\rte/sc_brakelight.h **** {                                                                                                  
 162:.\source\rte/sc_brakelight.h **** 
 163:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_brakelight.h **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 21


 165:.\source\rte/sc_brakelight.h ****    //Set value and raw value
 166:.\source\rte/sc_brakelight.h ****    signal->value  = SC_BRAKELIGHT_INIT_DATA;
 167:.\source\rte/sc_brakelight.h ****    signal->age    = 0;
 168:.\source\rte/sc_brakelight.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_brakelight.h **** 
 170:.\source\rte/sc_brakelight.h ****    return ret;
 171:.\source\rte/sc_brakelight.h **** }
 172:.\source\rte/sc_brakelight.h **** 
 173:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 174:.\source\rte/sc_brakelight.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 176:.\source\rte/sc_brakelight.h **** 
 177:.\source\rte/sc_brakelight.h **** /**
 178:.\source\rte/sc_brakelight.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_brakelight.h ****  *
 180:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_brakelight.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_brakelight.h ****  *
 183:.\source\rte/sc_brakelight.h ****  **/
 184:.\source\rte/sc_brakelight.h **** inline RTE_signalStatus_t RTE_SC_BRAKELIGHT_getStatus( const SC_BRAKELIGHT_t * const signal )
 185:.\source\rte/sc_brakelight.h **** {
 186:.\source\rte/sc_brakelight.h ****    return signal->status;
 187:.\source\rte/sc_brakelight.h **** }
 188:.\source\rte/sc_brakelight.h **** 
 189:.\source\rte/sc_brakelight.h **** 
 190:.\source\rte/sc_brakelight.h **** /**
 191:.\source\rte/sc_brakelight.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_brakelight.h ****  *
 193:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_brakelight.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_brakelight.h ****  *
 197:.\source\rte/sc_brakelight.h ****  */
 198:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_setStatus( SC_BRAKELIGHT_t * const signal, const RTE_signalStatus_t s
 199:.\source\rte/sc_brakelight.h **** {
 200:.\source\rte/sc_brakelight.h ****    signal->status = status;
 201:.\source\rte/sc_brakelight.h ****    size_t taskNum=0;
 202:.\source\rte/sc_brakelight.h ****    
 203:.\source\rte/sc_brakelight.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_brakelight.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_brakelight.h ****    {
 206:.\source\rte/sc_brakelight.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_brakelight.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_brakelight.h **** 
 209:.\source\rte/sc_brakelight.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_brakelight.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_brakelight.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_brakelight.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_brakelight.h **** 			}
 214:.\source\rte/sc_brakelight.h **** 		}
 215:.\source\rte/sc_brakelight.h ****    }
 216:.\source\rte/sc_brakelight.h ****    
 217:.\source\rte/sc_brakelight.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_brakelight.h **** }
 219:.\source\rte/sc_brakelight.h **** 
 220:.\source\rte/sc_brakelight.h **** 
 221:.\source\rte/sc_brakelight.h **** /**
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 22


 222:.\source\rte/sc_brakelight.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_brakelight.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_brakelight.h ****  *
 225:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_brakelight.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_brakelight.h ****  */
 228:.\source\rte/sc_brakelight.h **** inline uint32_t RTE_SC_BRAKELIGHT_getAge( const SC_BRAKELIGHT_t * const signal )
 229:.\source\rte/sc_brakelight.h **** {
 230:.\source\rte/sc_brakelight.h ****    return signal->age;
 231:.\source\rte/sc_brakelight.h **** }
 232:.\source\rte/sc_brakelight.h **** 
 233:.\source\rte/sc_brakelight.h **** /**
 234:.\source\rte/sc_brakelight.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_brakelight.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_brakelight.h ****  * @return void
 238:.\source\rte/sc_brakelight.h ****  */
 239:.\source\rte/sc_brakelight.h **** inline void RTE_SC_BRAKELIGHT_incAge(  SC_BRAKELIGHT_t * const signal , uint32_t increment)
 240:.\source\rte/sc_brakelight.h **** {
 241:.\source\rte/sc_brakelight.h **** 	   //Hack....
 242:.\source\rte/sc_brakelight.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_brakelight.h **** 	   {
 244:.\source\rte/sc_brakelight.h **** 	      signal->age += increment;
 245:.\source\rte/sc_brakelight.h **** 	   }
 246:.\source\rte/sc_brakelight.h **** }
 247:.\source\rte/sc_brakelight.h **** 
 248:.\source\rte/sc_brakelight.h **** 
 249:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 250:.\source\rte/sc_brakelight.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 252:.\source\rte/sc_brakelight.h **** 
 253:.\source\rte/sc_brakelight.h **** /**
 254:.\source\rte/sc_brakelight.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_brakelight.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_brakelight.h ****  *
 257:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_brakelight.h ****  * @return sc_brakelight_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_brakelight.h ****  *
 260:.\source\rte/sc_brakelight.h ****  **/
 261:.\source\rte/sc_brakelight.h **** inline SC_BRAKELIGHT_data_t* RTE_SC_BRAKELIGHT_getPtr( SC_BRAKELIGHT_t * const signal )
 262:.\source\rte/sc_brakelight.h **** {               
 263:.\source\rte/sc_brakelight.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_brakelight.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_brakelight.h **** }
 266:.\source\rte/sc_brakelight.h **** 
 267:.\source\rte/sc_brakelight.h **** /**
 268:.\source\rte/sc_brakelight.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_brakelight.h ****  *
 270:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_brakelight.h ****  * @return sc_brakelight_data_t: current value of the application data buffer
 272:.\source\rte/sc_brakelight.h ****  *
 273:.\source\rte/sc_brakelight.h ****  **/
 274:.\source\rte/sc_brakelight.h **** inline SC_BRAKELIGHT_data_t RTE_SC_BRAKELIGHT_get( const SC_BRAKELIGHT_t * const signal )
 275:.\source\rte/sc_brakelight.h **** {               
 276:.\source\rte/sc_brakelight.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_brakelight.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_brakelight.h **** }                                                                                                  
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 23


 279:.\source\rte/sc_brakelight.h ****                                                                                                    
 280:.\source\rte/sc_brakelight.h **** /**
 281:.\source\rte/sc_brakelight.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_brakelight.h ****  *
 283:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_brakelight.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_brakelight.h ****  *
 287:.\source\rte/sc_brakelight.h ****  **/
 288:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_getThreadSafe( const SC_BRAKELIGHT_t * const signal, SC_BRAKELIGHT_da
 289:.\source\rte/sc_brakelight.h **** {    
 290:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_brakelight.h ****    *data = signal->value;
 292:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_brakelight.h **** 
 294:.\source\rte/sc_brakelight.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_brakelight.h ****    
 296:.\source\rte/sc_brakelight.h **** }                                                                                                  
 297:.\source\rte/sc_brakelight.h ****                                                                                                    
 298:.\source\rte/sc_brakelight.h **** /**
 299:.\source\rte/sc_brakelight.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_brakelight.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_brakelight.h ****  * signal specific scaling function.
 302:.\source\rte/sc_brakelight.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_brakelight.h ****  *
 304:.\source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_brakelight.h ****  * @param  sc_brakelight_data_t const value: value for the application data buffer
 306:.\source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_brakelight.h ****  *
 308:.\source\rte/sc_brakelight.h ****  **/
 309:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_set(SC_BRAKELIGHT_t * const signal, const SC_BRAKELIGHT_data_t value 
 310:.\source\rte/sc_brakelight.h **** {
 311:.\source\rte/sc_brakelight.h **** 
 312:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_brakelight.h ****    size_t taskNum=0;
 314:.\source\rte/sc_brakelight.h **** 
 315:.\source\rte/sc_brakelight.h **** 
 316:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 217              		.loc 4 316 0
 218 0020 1C4B     		ldr	r3, .L23+4
 219              	.LVL28:
 220 0022 9B68     		ldr	r3, [r3, #8]
 221 0024 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 222 0028 012A     		cmp	r2, #1
 223 002a 02D1     		bne	.L15
 224 002c 586A     		ldr	r0, [r3, #36]
 225              	.LVL29:
 226 002e FFF7FEFF 		bl	EE_oo_GetResource
 227              	.LVL30:
 228              	.L15:
 317:.\source\rte/sc_brakelight.h ****    signal->value  = value;
 229              		.loc 4 317 0
 230 0032 184B     		ldr	r3, .L23+4
 231              	.LVL31:
 232 0034 1C70     		strb	r4, [r3]
 318:.\source\rte/sc_brakelight.h ****    signal->age    = 0;
 233              		.loc 4 318 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 24


 234 0036 0022     		movs	r2, #0
 235 0038 5A60     		str	r2, [r3, #4]
 319:.\source\rte/sc_brakelight.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 236              		.loc 4 319 0
 237 003a 0222     		movs	r2, #2
 238 003c 5A70     		strb	r2, [r3, #1]
 320:.\source\rte/sc_brakelight.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 239              		.loc 4 320 0
 240 003e 9B68     		ldr	r3, [r3, #8]
 241 0040 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 242 0044 012A     		cmp	r2, #1
 243 0046 02D1     		bne	.L16
 244 0048 586A     		ldr	r0, [r3, #36]
 245 004a FFF7FEFF 		bl	EE_oo_ReleaseResource
 246              	.LVL32:
 247              	.L16:
 321:.\source\rte/sc_brakelight.h **** 
 322:.\source\rte/sc_brakelight.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_brakelight.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 248              		.loc 4 323 0
 249 004e 114B     		ldr	r3, .L23+4
 250 0050 9B68     		ldr	r3, [r3, #8]
 251 0052 5D69     		ldr	r5, [r3, #20]
 252              	.LVL33:
 324:.\source\rte/sc_brakelight.h **** 
 325:.\source\rte/sc_brakelight.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 253              		.loc 4 325 0
 254 0054 9B68     		ldr	r3, [r3, #8]
 255 0056 73B1     		cbz	r3, .L17
 256 0058 3DB9     		cbnz	r5, .L21
 257 005a 0CE0     		b	.L17
 258              	.LVL34:
 259              	.L19:
 260              	.LBB31:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_brakelight.h **** 		  
 328:.\source\rte/sc_brakelight.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_brakelight.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 261              		.loc 4 329 0
 262 005c 9968     		ldr	r1, [r3, #8]
 263 005e 55F82400 		ldr	r0, [r5, r4, lsl #2]
 264 0062 FFF7FEFF 		bl	EE_oo_SetEvent
 265              	.LVL35:
 266              	.LBE31:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 267              		.loc 4 326 0
 268 0066 0134     		adds	r4, r4, #1
 269              	.LVL36:
 270 0068 00E0     		b	.L18
 271              	.LVL37:
 272              	.L21:
 325:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 273              		.loc 4 325 0
 274 006a 0024     		movs	r4, #0
 275              	.LVL38:
 276              	.L18:
 326:.\source\rte/sc_brakelight.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 25


 277              		.loc 4 326 0
 278 006c 094B     		ldr	r3, .L23+4
 279 006e 9B68     		ldr	r3, [r3, #8]
 280 0070 1A69     		ldr	r2, [r3, #16]
 281 0072 9442     		cmp	r4, r2
 282 0074 F2D3     		bcc	.L19
 283              	.LVL39:
 284              	.L17:
 285              	.LBE30:
 286              	.LBE29:
 287              	.LBB32:
 288              	.LBB33:
 330:.\source\rte/sc_brakelight.h ****       }
 331:.\source\rte/sc_brakelight.h ****    }
 332:.\source\rte/sc_brakelight.h **** 
 333:.\source\rte/sc_brakelight.h ****    return ret;
 334:.\source\rte/sc_brakelight.h **** }                                                                                                  
 335:.\source\rte/sc_brakelight.h ****                                                                                                    
 336:.\source\rte/sc_brakelight.h ****                                                                                                    
 337:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 338:.\source\rte/sc_brakelight.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_brakelight.h **** /**************************************************************************************************
 340:.\source\rte/sc_brakelight.h **** 
 341:.\source\rte/sc_brakelight.h ****                                                                                                    
 342:.\source\rte/sc_brakelight.h **** /**
 343:.\source\rte/sc_brakelight.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_brakelight.h ****  *
 345:.\source\rte/sc_brakelight.h ****  * @param SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_brakelight.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_brakelight.h ****  *
 348:.\source\rte/sc_brakelight.h ****  */
 349:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_pullPort( SC_BRAKELIGHT_t * const signal )
 350:.\source\rte/sc_brakelight.h **** {                                                                                                  
 351:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_brakelight.h **** 
 353:.\source\rte/sc_brakelight.h ****                                                                                                    
 354:.\source\rte/sc_brakelight.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_brakelight.h ****    {
 356:.\source\rte/sc_brakelight.h **** 	  SC_BRAKELIGHT_data_t value = signal->value;
 357:.\source\rte/sc_brakelight.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_brakelight.h ****                                                                                                    
 359:.\source\rte/sc_brakelight.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_brakelight.h ****       {
 361:.\source\rte/sc_brakelight.h ****     	  //Critical Section
 362:.\source\rte/sc_brakelight.h ****     	  RTE_SC_BRAKELIGHT_set(signal, value);
 363:.\source\rte/sc_brakelight.h ****       }
 364:.\source\rte/sc_brakelight.h ****       else
 365:.\source\rte/sc_brakelight.h ****       {
 366:.\source\rte/sc_brakelight.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_brakelight.h **** 		  RTE_SC_BRAKELIGHT_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_brakelight.h ****       }
 369:.\source\rte/sc_brakelight.h **** 
 370:.\source\rte/sc_brakelight.h ****    }                                                                                               
 371:.\source\rte/sc_brakelight.h ****                                                                                                    
 372:.\source\rte/sc_brakelight.h ****    return ret;                                                                                     
 373:.\source\rte/sc_brakelight.h **** }                                                                                                  
 374:.\source\rte/sc_brakelight.h ****                                                                                                    
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 26


 375:.\source\rte/sc_brakelight.h **** /**
 376:.\source\rte/sc_brakelight.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_brakelight.h ****  *
 378:.\source\rte/sc_brakelight.h ****  * @param SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_brakelight.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_brakelight.h ****  *
 381:.\source\rte/sc_brakelight.h ****  **/
 382:.\source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_pushPort( const SC_BRAKELIGHT_t * const signal )
 383:.\source\rte/sc_brakelight.h **** {                                                                                                  
 384:.\source\rte/sc_brakelight.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_brakelight.h **** 
 386:.\source\rte/sc_brakelight.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 289              		.loc 4 386 0
 290 0076 074B     		ldr	r3, .L23+4
 291 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 292 007a 022B     		cmp	r3, #2
 293 007c 03D1     		bne	.L20
 387:.\source\rte/sc_brakelight.h ****    {
 388:.\source\rte/sc_brakelight.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 294              		.loc 4 388 0
 295 007e 0548     		ldr	r0, .L23+4
 296 0080 8368     		ldr	r3, [r0, #8]
 297 0082 5B68     		ldr	r3, [r3, #4]
 298 0084 9847     		blx	r3
 299              	.LVL40:
 300              	.L20:
 301              	.LBE33:
 302              	.LBE32:
  92:source\asw/swc_output.c ****     }
  93:source\asw/swc_output.c ****     RTE_SC_BRAKELIGHT_set(&SO_BRAKELIGHT_signal, brake);
  94:source\asw/swc_output.c ****     RC_t error = RTE_SC_BRAKELIGHT_pushPort(&SO_BRAKELIGHT_signal);
  95:source\asw/swc_output.c ****     WD_Alive(WATCHDOG_RUN_SETBRAKELIGHT);
 303              		.loc 1 95 0
 304 0086 0320     		movs	r0, #3
 305 0088 FFF7FEFF 		bl	WD_Alive
 306              	.LVL41:
  96:source\asw/swc_output.c **** 
  97:source\asw/swc_output.c ****     /* USER CODE END OUTPUT_setBrakeLight_run */
  98:source\asw/swc_output.c **** }
 307              		.loc 1 98 0
 308 008c 03B0     		add	sp, sp, #12
 309              		.cfi_def_cfa_offset 12
 310              		@ sp needed
 311 008e 30BD     		pop	{r4, r5, pc}
 312              	.LVL42:
 313              	.L24:
 314              		.align	2
 315              	.L23:
 316 0090 00000000 		.word	SO_SPEED_signal
 317 0094 00000000 		.word	SO_BRAKELIGHT_signal
 318              		.cfi_endproc
 319              	.LFE166:
 320              		.size	OUTPUT_setBrakeLight_run, .-OUTPUT_setBrakeLight_run
 321              		.text
 322              	.Letext0:
 323              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 324              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 27


 325              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 326              		.file 8 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 327              		.file 9 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
 328              		.file 10 "Generated_Source\\PSoC5/ErikaOS_ee_oo_common.inc"
 329              		.file 11 ".\\source\\bsw/global.h"
 330              		.file 12 ".\\source\\rte/rte_types.h"
 331              		.file 13 ".\\source\\rte/rte.h"
 332              		.file 14 "source\\asw\\watchdog.h"
 333              		.file 15 ".\\source\\rte/sc_speed_type.h"
 334              		.file 16 ".\\source\\rte/sc_engine_type.h"
 335              		.file 17 ".\\source\\rte/sc_brakelight_type.h"
 336              		.file 18 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 337              		.file 19 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 338              		.file 20 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 339              		.file 21 "Generated_Source\\PSoC5/core_cm3.h"
 340              		.file 22 ".\\source\\rte/sp_common.h"
 341              		.file 23 "Generated_Source\\PSoC5/ErikaOS_ee_oo_kernel.inc"
 342              		.section	.debug_info,"",%progbits
 343              	.Ldebug_info0:
 344 0000 450B0000 		.4byte	0xb45
 345 0004 0400     		.2byte	0x4
 346 0006 00000000 		.4byte	.Ldebug_abbrev0
 347 000a 04       		.byte	0x4
 348 000b 01       		.uleb128 0x1
 349 000c 1F020000 		.4byte	.LASF136
 350 0010 0C       		.byte	0xc
 351 0011 F4030000 		.4byte	.LASF137
 352 0015 22050000 		.4byte	.LASF138
 353 0019 00000000 		.4byte	.Ldebug_ranges0+0
 354 001d 00000000 		.4byte	0
 355 0021 00000000 		.4byte	.Ldebug_line0
 356 0025 02       		.uleb128 0x2
 357 0026 01       		.byte	0x1
 358 0027 06       		.byte	0x6
 359 0028 8C080000 		.4byte	.LASF0
 360 002c 03       		.uleb128 0x3
 361 002d 6F060000 		.4byte	.LASF4
 362 0031 05       		.byte	0x5
 363 0032 1D       		.byte	0x1d
 364 0033 37000000 		.4byte	0x37
 365 0037 02       		.uleb128 0x2
 366 0038 01       		.byte	0x1
 367 0039 08       		.byte	0x8
 368 003a 65070000 		.4byte	.LASF1
 369 003e 02       		.uleb128 0x2
 370 003f 02       		.byte	0x2
 371 0040 05       		.byte	0x5
 372 0041 F5050000 		.4byte	.LASF2
 373 0045 02       		.uleb128 0x2
 374 0046 02       		.byte	0x2
 375 0047 07       		.byte	0x7
 376 0048 98080000 		.4byte	.LASF3
 377 004c 03       		.uleb128 0x3
 378 004d B9000000 		.4byte	.LASF5
 379 0051 05       		.byte	0x5
 380 0052 3F       		.byte	0x3f
 381 0053 57000000 		.4byte	0x57
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 28


 382 0057 02       		.uleb128 0x2
 383 0058 04       		.byte	0x4
 384 0059 05       		.byte	0x5
 385 005a 19060000 		.4byte	.LASF6
 386 005e 03       		.uleb128 0x3
 387 005f 73070000 		.4byte	.LASF7
 388 0063 05       		.byte	0x5
 389 0064 41       		.byte	0x41
 390 0065 69000000 		.4byte	0x69
 391 0069 02       		.uleb128 0x2
 392 006a 04       		.byte	0x4
 393 006b 07       		.byte	0x7
 394 006c 16070000 		.4byte	.LASF8
 395 0070 02       		.uleb128 0x2
 396 0071 08       		.byte	0x8
 397 0072 05       		.byte	0x5
 398 0073 3F040000 		.4byte	.LASF9
 399 0077 02       		.uleb128 0x2
 400 0078 08       		.byte	0x8
 401 0079 07       		.byte	0x7
 402 007a B4010000 		.4byte	.LASF10
 403 007e 04       		.uleb128 0x4
 404 007f 04       		.byte	0x4
 405 0080 05       		.byte	0x5
 406 0081 696E7400 		.ascii	"int\000"
 407 0085 02       		.uleb128 0x2
 408 0086 04       		.byte	0x4
 409 0087 07       		.byte	0x7
 410 0088 85000000 		.4byte	.LASF11
 411 008c 03       		.uleb128 0x3
 412 008d E5030000 		.4byte	.LASF12
 413 0091 06       		.byte	0x6
 414 0092 18       		.byte	0x18
 415 0093 2C000000 		.4byte	0x2c
 416 0097 03       		.uleb128 0x3
 417 0098 3B070000 		.4byte	.LASF13
 418 009c 06       		.byte	0x6
 419 009d 2C       		.byte	0x2c
 420 009e 4C000000 		.4byte	0x4c
 421 00a2 03       		.uleb128 0x3
 422 00a3 71010000 		.4byte	.LASF14
 423 00a7 06       		.byte	0x6
 424 00a8 30       		.byte	0x30
 425 00a9 5E000000 		.4byte	0x5e
 426 00ad 02       		.uleb128 0x2
 427 00ae 04       		.byte	0x4
 428 00af 04       		.byte	0x4
 429 00b0 98010000 		.4byte	.LASF15
 430 00b4 02       		.uleb128 0x2
 431 00b5 08       		.byte	0x8
 432 00b6 04       		.byte	0x4
 433 00b7 D6080000 		.4byte	.LASF16
 434 00bb 02       		.uleb128 0x2
 435 00bc 01       		.byte	0x1
 436 00bd 08       		.byte	0x8
 437 00be 6C030000 		.4byte	.LASF17
 438 00c2 03       		.uleb128 0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 29


 439 00c3 C2020000 		.4byte	.LASF18
 440 00c7 07       		.byte	0x7
 441 00c8 D8       		.byte	0xd8
 442 00c9 85000000 		.4byte	0x85
 443 00cd 02       		.uleb128 0x2
 444 00ce 08       		.byte	0x8
 445 00cf 04       		.byte	0x4
 446 00d0 74050000 		.4byte	.LASF19
 447 00d4 03       		.uleb128 0x3
 448 00d5 E5060000 		.4byte	.LASF20
 449 00d9 08       		.byte	0x8
 450 00da 53       		.byte	0x53
 451 00db 7E000000 		.4byte	0x7e
 452 00df 03       		.uleb128 0x3
 453 00e0 B7050000 		.4byte	.LASF21
 454 00e4 08       		.byte	0x8
 455 00e5 54       		.byte	0x54
 456 00e6 85000000 		.4byte	0x85
 457 00ea 03       		.uleb128 0x3
 458 00eb DD060000 		.4byte	.LASF22
 459 00ef 09       		.byte	0x9
 460 00f0 4D       		.byte	0x4d
 461 00f1 DF000000 		.4byte	0xdf
 462 00f5 03       		.uleb128 0x3
 463 00f6 FA000000 		.4byte	.LASF23
 464 00fa 09       		.byte	0x9
 465 00fb 4F       		.byte	0x4f
 466 00fc DF000000 		.4byte	0xdf
 467 0100 03       		.uleb128 0x3
 468 0101 F5010000 		.4byte	.LASF24
 469 0105 09       		.byte	0x9
 470 0106 78       		.byte	0x78
 471 0107 D4000000 		.4byte	0xd4
 472 010b 05       		.uleb128 0x5
 473 010c DF010000 		.4byte	.LASF25
 474 0110 0A       		.byte	0xa
 475 0111 F701     		.2byte	0x1f7
 476 0113 00010000 		.4byte	0x100
 477 0117 05       		.uleb128 0x5
 478 0118 E8010000 		.4byte	.LASF26
 479 011c 0A       		.byte	0xa
 480 011d 2102     		.2byte	0x221
 481 011f EA000000 		.4byte	0xea
 482 0123 05       		.uleb128 0x5
 483 0124 61000000 		.4byte	.LASF27
 484 0128 0A       		.byte	0xa
 485 0129 2C02     		.2byte	0x22c
 486 012b EA000000 		.4byte	0xea
 487 012f 02       		.uleb128 0x2
 488 0130 04       		.byte	0x4
 489 0131 07       		.byte	0x7
 490 0132 EE060000 		.4byte	.LASF28
 491 0136 03       		.uleb128 0x3
 492 0137 97030000 		.4byte	.LASF29
 493 013b 0B       		.byte	0xb
 494 013c 9C       		.byte	0x9c
 495 013d 37000000 		.4byte	0x37
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 30


 496 0141 06       		.uleb128 0x6
 497 0142 01       		.byte	0x1
 498 0143 25000000 		.4byte	0x25
 499 0147 0B       		.byte	0xb
 500 0148 CF       		.byte	0xcf
 501 0149 EA010000 		.4byte	0x1ea
 502 014d 07       		.uleb128 0x7
 503 014e 71030000 		.4byte	.LASF30
 504 0152 00       		.byte	0
 505 0153 08       		.uleb128 0x8
 506 0154 7A010000 		.4byte	.LASF31
 507 0158 7F       		.sleb128 -1
 508 0159 08       		.uleb128 0x8
 509 015a C3000000 		.4byte	.LASF32
 510 015e 7E       		.sleb128 -2
 511 015f 08       		.uleb128 0x8
 512 0160 92000000 		.4byte	.LASF33
 513 0164 7D       		.sleb128 -3
 514 0165 08       		.uleb128 0x8
 515 0166 03050000 		.4byte	.LASF34
 516 016a 7C       		.sleb128 -4
 517 016b 08       		.uleb128 0x8
 518 016c 1E090000 		.4byte	.LASF35
 519 0170 7B       		.sleb128 -5
 520 0171 08       		.uleb128 0x8
 521 0172 54070000 		.4byte	.LASF36
 522 0176 7A       		.sleb128 -6
 523 0177 08       		.uleb128 0x8
 524 0178 E4040000 		.4byte	.LASF37
 525 017c 79       		.sleb128 -7
 526 017d 08       		.uleb128 0x8
 527 017e 01030000 		.4byte	.LASF38
 528 0182 78       		.sleb128 -8
 529 0183 08       		.uleb128 0x8
 530 0184 A1070000 		.4byte	.LASF39
 531 0188 77       		.sleb128 -9
 532 0189 08       		.uleb128 0x8
 533 018a D4050000 		.4byte	.LASF40
 534 018e 76       		.sleb128 -10
 535 018f 08       		.uleb128 0x8
 536 0190 D1000000 		.4byte	.LASF41
 537 0194 75       		.sleb128 -11
 538 0195 08       		.uleb128 0x8
 539 0196 A6010000 		.4byte	.LASF42
 540 019a 74       		.sleb128 -12
 541 019b 08       		.uleb128 0x8
 542 019c C9020000 		.4byte	.LASF43
 543 01a0 73       		.sleb128 -13
 544 01a1 08       		.uleb128 0x8
 545 01a2 C1050000 		.4byte	.LASF44
 546 01a6 72       		.sleb128 -14
 547 01a7 08       		.uleb128 0x8
 548 01a8 4D000000 		.4byte	.LASF45
 549 01ac 71       		.sleb128 -15
 550 01ad 08       		.uleb128 0x8
 551 01ae 5E060000 		.4byte	.LASF46
 552 01b2 70       		.sleb128 -16
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 31


 553 01b3 08       		.uleb128 0x8
 554 01b4 B9060000 		.4byte	.LASF47
 555 01b8 6F       		.sleb128 -17
 556 01b9 08       		.uleb128 0x8
 557 01ba 83010000 		.4byte	.LASF48
 558 01be 6E       		.sleb128 -18
 559 01bf 08       		.uleb128 0x8
 560 01c0 28000000 		.4byte	.LASF49
 561 01c4 6D       		.sleb128 -19
 562 01c5 08       		.uleb128 0x8
 563 01c6 E2050000 		.4byte	.LASF50
 564 01ca 6C       		.sleb128 -20
 565 01cb 08       		.uleb128 0x8
 566 01cc D3030000 		.4byte	.LASF51
 567 01d0 6B       		.sleb128 -21
 568 01d1 08       		.uleb128 0x8
 569 01d2 67040000 		.4byte	.LASF52
 570 01d6 6A       		.sleb128 -22
 571 01d7 08       		.uleb128 0x8
 572 01d8 E3000000 		.4byte	.LASF53
 573 01dc 69       		.sleb128 -23
 574 01dd 08       		.uleb128 0x8
 575 01de E7070000 		.4byte	.LASF54
 576 01e2 68       		.sleb128 -24
 577 01e3 08       		.uleb128 0x8
 578 01e4 45060000 		.4byte	.LASF55
 579 01e8 67       		.sleb128 -25
 580 01e9 00       		.byte	0
 581 01ea 03       		.uleb128 0x3
 582 01eb 36070000 		.4byte	.LASF56
 583 01ef 0B       		.byte	0xb
 584 01f0 EA       		.byte	0xea
 585 01f1 41010000 		.4byte	0x141
 586 01f5 03       		.uleb128 0x3
 587 01f6 28070000 		.4byte	.LASF57
 588 01fa 0C       		.byte	0xc
 589 01fb 19       		.byte	0x19
 590 01fc 00020000 		.4byte	0x200
 591 0200 09       		.uleb128 0x9
 592 0201 0B010000 		.4byte	0x10b
 593 0205 0B020000 		.4byte	0x20b
 594 0209 0A       		.uleb128 0xa
 595 020a 00       		.byte	0
 596 020b 03       		.uleb128 0x3
 597 020c FC010000 		.4byte	.LASF58
 598 0210 0C       		.byte	0xc
 599 0211 21       		.byte	0x21
 600 0212 23010000 		.4byte	0x123
 601 0216 06       		.uleb128 0x6
 602 0217 01       		.byte	0x1
 603 0218 37000000 		.4byte	0x37
 604 021c 0D       		.byte	0xd
 605 021d 59       		.byte	0x59
 606 021e 3B020000 		.4byte	0x23b
 607 0222 07       		.uleb128 0x7
 608 0223 05090000 		.4byte	.LASF59
 609 0227 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 32


 610 0228 07       		.uleb128 0x7
 611 0229 B9080000 		.4byte	.LASF60
 612 022d 01       		.byte	0x1
 613 022e 07       		.uleb128 0x7
 614 022f 8D060000 		.4byte	.LASF61
 615 0233 02       		.byte	0x2
 616 0234 07       		.uleb128 0x7
 617 0235 80050000 		.4byte	.LASF62
 618 0239 03       		.byte	0x3
 619 023a 00       		.byte	0
 620 023b 03       		.uleb128 0x3
 621 023c F2080000 		.4byte	.LASF63
 622 0240 0D       		.byte	0xd
 623 0241 5E       		.byte	0x5e
 624 0242 16020000 		.4byte	0x216
 625 0246 06       		.uleb128 0x6
 626 0247 01       		.byte	0x1
 627 0248 37000000 		.4byte	0x37
 628 024c 0E       		.byte	0xe
 629 024d 29       		.byte	0x29
 630 024e 77020000 		.4byte	0x277
 631 0252 07       		.uleb128 0x7
 632 0253 FF050000 		.4byte	.LASF64
 633 0257 00       		.byte	0
 634 0258 07       		.uleb128 0x7
 635 0259 A0000000 		.4byte	.LASF65
 636 025d 01       		.byte	0x1
 637 025e 07       		.uleb128 0x7
 638 025f D0070000 		.4byte	.LASF66
 639 0263 02       		.byte	0x2
 640 0264 07       		.uleb128 0x7
 641 0265 A7040000 		.4byte	.LASF67
 642 0269 03       		.byte	0x3
 643 026a 07       		.uleb128 0x7
 644 026b AD020000 		.4byte	.LASF68
 645 026f 04       		.byte	0x4
 646 0270 07       		.uleb128 0x7
 647 0271 63080000 		.4byte	.LASF69
 648 0275 05       		.byte	0x5
 649 0276 00       		.byte	0
 650 0277 0B       		.uleb128 0xb
 651 0278 23010000 		.4byte	0x123
 652 027c 0B       		.uleb128 0xb
 653 027d C2000000 		.4byte	0xc2
 654 0281 0C       		.uleb128 0xc
 655 0282 04       		.byte	0x4
 656 0283 F5010000 		.4byte	0x1f5
 657 0287 0B       		.uleb128 0xb
 658 0288 81020000 		.4byte	0x281
 659 028c 0B       		.uleb128 0xb
 660 028d 36010000 		.4byte	0x136
 661 0291 0B       		.uleb128 0xb
 662 0292 17010000 		.4byte	0x117
 663 0296 0D       		.uleb128 0xd
 664 0297 01       		.byte	0x1
 665 0298 0F       		.byte	0xf
 666 0299 21       		.byte	0x21
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 33


 667 029a AB020000 		.4byte	0x2ab
 668 029e 0E       		.uleb128 0xe
 669 029f C2040000 		.4byte	.LASF73
 670 02a3 0F       		.byte	0xf
 671 02a4 23       		.byte	0x23
 672 02a5 8C000000 		.4byte	0x8c
 673 02a9 00       		.byte	0
 674 02aa 00       		.byte	0
 675 02ab 03       		.uleb128 0x3
 676 02ac 5C030000 		.4byte	.LASF70
 677 02b0 0F       		.byte	0xf
 678 02b1 26       		.byte	0x26
 679 02b2 96020000 		.4byte	0x296
 680 02b6 03       		.uleb128 0x3
 681 02b7 F8070000 		.4byte	.LASF71
 682 02bb 02       		.byte	0x2
 683 02bc 26       		.byte	0x26
 684 02bd C1020000 		.4byte	0x2c1
 685 02c1 0C       		.uleb128 0xc
 686 02c2 04       		.byte	0x4
 687 02c3 C7020000 		.4byte	0x2c7
 688 02c7 0F       		.uleb128 0xf
 689 02c8 EA010000 		.4byte	0x1ea
 690 02cc D6020000 		.4byte	0x2d6
 691 02d0 10       		.uleb128 0x10
 692 02d1 DC020000 		.4byte	0x2dc
 693 02d5 00       		.byte	0
 694 02d6 0C       		.uleb128 0xc
 695 02d7 04       		.byte	0x4
 696 02d8 AB020000 		.4byte	0x2ab
 697 02dc 0B       		.uleb128 0xb
 698 02dd D6020000 		.4byte	0x2d6
 699 02e1 03       		.uleb128 0x3
 700 02e2 77080000 		.4byte	.LASF72
 701 02e6 02       		.byte	0x2
 702 02e7 2C       		.byte	0x2c
 703 02e8 EC020000 		.4byte	0x2ec
 704 02ec 0C       		.uleb128 0xc
 705 02ed 04       		.byte	0x4
 706 02ee F2020000 		.4byte	0x2f2
 707 02f2 0F       		.uleb128 0xf
 708 02f3 EA010000 		.4byte	0x1ea
 709 02f7 01030000 		.4byte	0x301
 710 02fb 10       		.uleb128 0x10
 711 02fc 0C030000 		.4byte	0x30c
 712 0300 00       		.byte	0
 713 0301 0C       		.uleb128 0xc
 714 0302 04       		.byte	0x4
 715 0303 07030000 		.4byte	0x307
 716 0307 0B       		.uleb128 0xb
 717 0308 AB020000 		.4byte	0x2ab
 718 030c 0B       		.uleb128 0xb
 719 030d 01030000 		.4byte	0x301
 720 0311 11       		.uleb128 0x11
 721 0312 16030000 		.4byte	.LASF85
 722 0316 28       		.byte	0x28
 723 0317 02       		.byte	0x2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 34


 724 0318 36       		.byte	0x36
 725 0319 96030000 		.4byte	0x396
 726 031d 0E       		.uleb128 0xe
 727 031e 4D040000 		.4byte	.LASF74
 728 0322 02       		.byte	0x2
 729 0323 3B       		.byte	0x3b
 730 0324 96030000 		.4byte	0x396
 731 0328 00       		.byte	0
 732 0329 0E       		.uleb128 0xe
 733 032a 13050000 		.4byte	.LASF75
 734 032e 02       		.byte	0x2
 735 032f 40       		.byte	0x40
 736 0330 9B030000 		.4byte	0x39b
 737 0334 04       		.byte	0x4
 738 0335 0E       		.uleb128 0xe
 739 0336 B7030000 		.4byte	.LASF76
 740 033a 02       		.byte	0x2
 741 033b 45       		.byte	0x45
 742 033c 77020000 		.4byte	0x277
 743 0340 08       		.byte	0x8
 744 0341 0E       		.uleb128 0xe
 745 0342 89070000 		.4byte	.LASF77
 746 0346 02       		.byte	0x2
 747 0347 4B       		.byte	0x4b
 748 0348 77020000 		.4byte	0x277
 749 034c 0C       		.byte	0xc
 750 034d 0E       		.uleb128 0xe
 751 034e 02010000 		.4byte	.LASF78
 752 0352 02       		.byte	0x2
 753 0353 50       		.byte	0x50
 754 0354 7C020000 		.4byte	0x27c
 755 0358 10       		.byte	0x10
 756 0359 0E       		.uleb128 0xe
 757 035a 93070000 		.4byte	.LASF79
 758 035e 02       		.byte	0x2
 759 035f 55       		.byte	0x55
 760 0360 87020000 		.4byte	0x287
 761 0364 14       		.byte	0x14
 762 0365 0E       		.uleb128 0xe
 763 0366 56040000 		.4byte	.LASF80
 764 036a 02       		.byte	0x2
 765 036b 5A       		.byte	0x5a
 766 036c 7C020000 		.4byte	0x27c
 767 0370 18       		.byte	0x18
 768 0371 0E       		.uleb128 0xe
 769 0372 56080000 		.4byte	.LASF81
 770 0376 02       		.byte	0x2
 771 0377 5F       		.byte	0x5f
 772 0378 87020000 		.4byte	0x287
 773 037c 1C       		.byte	0x1c
 774 037d 0E       		.uleb128 0xe
 775 037e 2E030000 		.4byte	.LASF82
 776 0382 02       		.byte	0x2
 777 0383 65       		.byte	0x65
 778 0384 8C020000 		.4byte	0x28c
 779 0388 20       		.byte	0x20
 780 0389 0E       		.uleb128 0xe
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 35


 781 038a 25030000 		.4byte	.LASF83
 782 038e 02       		.byte	0x2
 783 038f 6A       		.byte	0x6a
 784 0390 91020000 		.4byte	0x291
 785 0394 24       		.byte	0x24
 786 0395 00       		.byte	0
 787 0396 0B       		.uleb128 0xb
 788 0397 B6020000 		.4byte	0x2b6
 789 039b 0B       		.uleb128 0xb
 790 039c E1020000 		.4byte	0x2e1
 791 03a0 03       		.uleb128 0x3
 792 03a1 F7060000 		.4byte	.LASF84
 793 03a5 02       		.byte	0x2
 794 03a6 6D       		.byte	0x6d
 795 03a7 AB030000 		.4byte	0x3ab
 796 03ab 0B       		.uleb128 0xb
 797 03ac 11030000 		.4byte	0x311
 798 03b0 11       		.uleb128 0x11
 799 03b1 A1030000 		.4byte	.LASF86
 800 03b5 0C       		.byte	0xc
 801 03b6 02       		.byte	0x2
 802 03b7 79       		.byte	0x79
 803 03b8 ED030000 		.4byte	0x3ed
 804 03bc 0E       		.uleb128 0xe
 805 03bd 06020000 		.4byte	.LASF87
 806 03c1 02       		.byte	0x2
 807 03c2 7F       		.byte	0x7f
 808 03c3 AB020000 		.4byte	0x2ab
 809 03c7 00       		.byte	0
 810 03c8 0E       		.uleb128 0xe
 811 03c9 ED030000 		.4byte	.LASF88
 812 03cd 02       		.byte	0x2
 813 03ce 84       		.byte	0x84
 814 03cf 3B020000 		.4byte	0x23b
 815 03d3 01       		.byte	0x1
 816 03d4 12       		.uleb128 0x12
 817 03d5 61676500 		.ascii	"age\000"
 818 03d9 02       		.byte	0x2
 819 03da 89       		.byte	0x89
 820 03db A2000000 		.4byte	0xa2
 821 03df 04       		.byte	0x4
 822 03e0 0E       		.uleb128 0xe
 823 03e1 54030000 		.4byte	.LASF89
 824 03e5 02       		.byte	0x2
 825 03e6 8E       		.byte	0x8e
 826 03e7 F3030000 		.4byte	0x3f3
 827 03eb 08       		.byte	0x8
 828 03ec 00       		.byte	0
 829 03ed 0C       		.uleb128 0xc
 830 03ee 04       		.byte	0x4
 831 03ef A0030000 		.4byte	0x3a0
 832 03f3 0B       		.uleb128 0xb
 833 03f4 ED030000 		.4byte	0x3ed
 834 03f8 03       		.uleb128 0x3
 835 03f9 AC030000 		.4byte	.LASF90
 836 03fd 02       		.byte	0x2
 837 03fe 91       		.byte	0x91
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 36


 838 03ff B0030000 		.4byte	0x3b0
 839 0403 0D       		.uleb128 0xd
 840 0404 01       		.byte	0x1
 841 0405 10       		.byte	0x10
 842 0406 21       		.byte	0x21
 843 0407 18040000 		.4byte	0x418
 844 040b 0E       		.uleb128 0xe
 845 040c AB080000 		.4byte	.LASF91
 846 0410 10       		.byte	0x10
 847 0411 23       		.byte	0x23
 848 0412 8C000000 		.4byte	0x8c
 849 0416 00       		.byte	0
 850 0417 00       		.byte	0
 851 0418 03       		.uleb128 0x3
 852 0419 C2030000 		.4byte	.LASF92
 853 041d 10       		.byte	0x10
 854 041e 26       		.byte	0x26
 855 041f 03040000 		.4byte	0x403
 856 0423 03       		.uleb128 0x3
 857 0424 CF040000 		.4byte	.LASF93
 858 0428 03       		.byte	0x3
 859 0429 26       		.byte	0x26
 860 042a 2E040000 		.4byte	0x42e
 861 042e 0C       		.uleb128 0xc
 862 042f 04       		.byte	0x4
 863 0430 34040000 		.4byte	0x434
 864 0434 0F       		.uleb128 0xf
 865 0435 EA010000 		.4byte	0x1ea
 866 0439 43040000 		.4byte	0x443
 867 043d 10       		.uleb128 0x10
 868 043e 49040000 		.4byte	0x449
 869 0442 00       		.byte	0
 870 0443 0C       		.uleb128 0xc
 871 0444 04       		.byte	0x4
 872 0445 18040000 		.4byte	0x418
 873 0449 0B       		.uleb128 0xb
 874 044a 43040000 		.4byte	0x443
 875 044e 03       		.uleb128 0x3
 876 044f 79040000 		.4byte	.LASF94
 877 0453 03       		.byte	0x3
 878 0454 2C       		.byte	0x2c
 879 0455 59040000 		.4byte	0x459
 880 0459 0C       		.uleb128 0xc
 881 045a 04       		.byte	0x4
 882 045b 5F040000 		.4byte	0x45f
 883 045f 0F       		.uleb128 0xf
 884 0460 EA010000 		.4byte	0x1ea
 885 0464 6E040000 		.4byte	0x46e
 886 0468 10       		.uleb128 0x10
 887 0469 79040000 		.4byte	0x479
 888 046d 00       		.byte	0
 889 046e 0C       		.uleb128 0xc
 890 046f 04       		.byte	0x4
 891 0470 74040000 		.4byte	0x474
 892 0474 0B       		.uleb128 0xb
 893 0475 18040000 		.4byte	0x418
 894 0479 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 37


 895 047a 6E040000 		.4byte	0x46e
 896 047e 11       		.uleb128 0x11
 897 047f 2F010000 		.4byte	.LASF95
 898 0483 28       		.byte	0x28
 899 0484 03       		.byte	0x3
 900 0485 36       		.byte	0x36
 901 0486 03050000 		.4byte	0x503
 902 048a 0E       		.uleb128 0xe
 903 048b 4D040000 		.4byte	.LASF74
 904 048f 03       		.byte	0x3
 905 0490 3B       		.byte	0x3b
 906 0491 03050000 		.4byte	0x503
 907 0495 00       		.byte	0
 908 0496 0E       		.uleb128 0xe
 909 0497 13050000 		.4byte	.LASF75
 910 049b 03       		.byte	0x3
 911 049c 40       		.byte	0x40
 912 049d 08050000 		.4byte	0x508
 913 04a1 04       		.byte	0x4
 914 04a2 0E       		.uleb128 0xe
 915 04a3 B7030000 		.4byte	.LASF76
 916 04a7 03       		.byte	0x3
 917 04a8 45       		.byte	0x45
 918 04a9 77020000 		.4byte	0x277
 919 04ad 08       		.byte	0x8
 920 04ae 0E       		.uleb128 0xe
 921 04af 89070000 		.4byte	.LASF77
 922 04b3 03       		.byte	0x3
 923 04b4 4B       		.byte	0x4b
 924 04b5 77020000 		.4byte	0x277
 925 04b9 0C       		.byte	0xc
 926 04ba 0E       		.uleb128 0xe
 927 04bb 02010000 		.4byte	.LASF78
 928 04bf 03       		.byte	0x3
 929 04c0 50       		.byte	0x50
 930 04c1 7C020000 		.4byte	0x27c
 931 04c5 10       		.byte	0x10
 932 04c6 0E       		.uleb128 0xe
 933 04c7 93070000 		.4byte	.LASF79
 934 04cb 03       		.byte	0x3
 935 04cc 55       		.byte	0x55
 936 04cd 87020000 		.4byte	0x287
 937 04d1 14       		.byte	0x14
 938 04d2 0E       		.uleb128 0xe
 939 04d3 56040000 		.4byte	.LASF80
 940 04d7 03       		.byte	0x3
 941 04d8 5A       		.byte	0x5a
 942 04d9 7C020000 		.4byte	0x27c
 943 04dd 18       		.byte	0x18
 944 04de 0E       		.uleb128 0xe
 945 04df 56080000 		.4byte	.LASF81
 946 04e3 03       		.byte	0x3
 947 04e4 5F       		.byte	0x5f
 948 04e5 87020000 		.4byte	0x287
 949 04e9 1C       		.byte	0x1c
 950 04ea 0E       		.uleb128 0xe
 951 04eb 2E030000 		.4byte	.LASF82
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 38


 952 04ef 03       		.byte	0x3
 953 04f0 65       		.byte	0x65
 954 04f1 8C020000 		.4byte	0x28c
 955 04f5 20       		.byte	0x20
 956 04f6 0E       		.uleb128 0xe
 957 04f7 25030000 		.4byte	.LASF83
 958 04fb 03       		.byte	0x3
 959 04fc 6A       		.byte	0x6a
 960 04fd 91020000 		.4byte	0x291
 961 0501 24       		.byte	0x24
 962 0502 00       		.byte	0
 963 0503 0B       		.uleb128 0xb
 964 0504 23040000 		.4byte	0x423
 965 0508 0B       		.uleb128 0xb
 966 0509 4E040000 		.4byte	0x44e
 967 050d 03       		.uleb128 0x3
 968 050e 3F010000 		.4byte	.LASF96
 969 0512 03       		.byte	0x3
 970 0513 6D       		.byte	0x6d
 971 0514 18050000 		.4byte	0x518
 972 0518 0B       		.uleb128 0xb
 973 0519 7E040000 		.4byte	0x47e
 974 051d 11       		.uleb128 0x11
 975 051e 8F040000 		.4byte	.LASF97
 976 0522 0C       		.byte	0xc
 977 0523 03       		.byte	0x3
 978 0524 79       		.byte	0x79
 979 0525 5A050000 		.4byte	0x55a
 980 0529 0E       		.uleb128 0xe
 981 052a 06020000 		.4byte	.LASF87
 982 052e 03       		.byte	0x3
 983 052f 7F       		.byte	0x7f
 984 0530 18040000 		.4byte	0x418
 985 0534 00       		.byte	0
 986 0535 0E       		.uleb128 0xe
 987 0536 ED030000 		.4byte	.LASF88
 988 053a 03       		.byte	0x3
 989 053b 84       		.byte	0x84
 990 053c 3B020000 		.4byte	0x23b
 991 0540 01       		.byte	0x1
 992 0541 12       		.uleb128 0x12
 993 0542 61676500 		.ascii	"age\000"
 994 0546 03       		.byte	0x3
 995 0547 89       		.byte	0x89
 996 0548 A2000000 		.4byte	0xa2
 997 054c 04       		.byte	0x4
 998 054d 0E       		.uleb128 0xe
 999 054e 54030000 		.4byte	.LASF89
 1000 0552 03       		.byte	0x3
 1001 0553 8E       		.byte	0x8e
 1002 0554 60050000 		.4byte	0x560
 1003 0558 08       		.byte	0x8
 1004 0559 00       		.byte	0
 1005 055a 0C       		.uleb128 0xc
 1006 055b 04       		.byte	0x4
 1007 055c 0D050000 		.4byte	0x50d
 1008 0560 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 39


 1009 0561 5A050000 		.4byte	0x55a
 1010 0565 03       		.uleb128 0x3
 1011 0566 9B040000 		.4byte	.LASF98
 1012 056a 03       		.byte	0x3
 1013 056b 91       		.byte	0x91
 1014 056c 1D050000 		.4byte	0x51d
 1015 0570 0D       		.uleb128 0xd
 1016 0571 01       		.byte	0x1
 1017 0572 11       		.byte	0x11
 1018 0573 21       		.byte	0x21
 1019 0574 85050000 		.4byte	0x585
 1020 0578 0E       		.uleb128 0xe
 1021 0579 F6040000 		.4byte	.LASF99
 1022 057d 11       		.byte	0x11
 1023 057e 23       		.byte	0x23
 1024 057f 36010000 		.4byte	0x136
 1025 0583 00       		.byte	0
 1026 0584 00       		.byte	0
 1027 0585 03       		.uleb128 0x3
 1028 0586 A2050000 		.4byte	.LASF100
 1029 058a 11       		.byte	0x11
 1030 058b 26       		.byte	0x26
 1031 058c 70050000 		.4byte	0x570
 1032 0590 03       		.uleb128 0x3
 1033 0591 26040000 		.4byte	.LASF101
 1034 0595 04       		.byte	0x4
 1035 0596 26       		.byte	0x26
 1036 0597 9B050000 		.4byte	0x59b
 1037 059b 0C       		.uleb128 0xc
 1038 059c 04       		.byte	0x4
 1039 059d A1050000 		.4byte	0x5a1
 1040 05a1 0F       		.uleb128 0xf
 1041 05a2 EA010000 		.4byte	0x1ea
 1042 05a6 B0050000 		.4byte	0x5b0
 1043 05aa 10       		.uleb128 0x10
 1044 05ab B6050000 		.4byte	0x5b6
 1045 05af 00       		.byte	0
 1046 05b0 0C       		.uleb128 0xc
 1047 05b1 04       		.byte	0x4
 1048 05b2 85050000 		.4byte	0x585
 1049 05b6 0B       		.uleb128 0xb
 1050 05b7 B0050000 		.4byte	0x5b0
 1051 05bb 03       		.uleb128 0x3
 1052 05bc 0C040000 		.4byte	.LASF102
 1053 05c0 04       		.byte	0x4
 1054 05c1 2C       		.byte	0x2c
 1055 05c2 C6050000 		.4byte	0x5c6
 1056 05c6 0C       		.uleb128 0xc
 1057 05c7 04       		.byte	0x4
 1058 05c8 CC050000 		.4byte	0x5cc
 1059 05cc 0F       		.uleb128 0xf
 1060 05cd EA010000 		.4byte	0x1ea
 1061 05d1 DB050000 		.4byte	0x5db
 1062 05d5 10       		.uleb128 0x10
 1063 05d6 E6050000 		.4byte	0x5e6
 1064 05da 00       		.byte	0
 1065 05db 0C       		.uleb128 0xc
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 40


 1066 05dc 04       		.byte	0x4
 1067 05dd E1050000 		.4byte	0x5e1
 1068 05e1 0B       		.uleb128 0xb
 1069 05e2 85050000 		.4byte	0x585
 1070 05e6 0B       		.uleb128 0xb
 1071 05e7 DB050000 		.4byte	0x5db
 1072 05eb 11       		.uleb128 0x11
 1073 05ec CB010000 		.4byte	.LASF103
 1074 05f0 28       		.byte	0x28
 1075 05f1 04       		.byte	0x4
 1076 05f2 36       		.byte	0x36
 1077 05f3 70060000 		.4byte	0x670
 1078 05f7 0E       		.uleb128 0xe
 1079 05f8 4D040000 		.4byte	.LASF74
 1080 05fc 04       		.byte	0x4
 1081 05fd 3B       		.byte	0x3b
 1082 05fe 70060000 		.4byte	0x670
 1083 0602 00       		.byte	0
 1084 0603 0E       		.uleb128 0xe
 1085 0604 13050000 		.4byte	.LASF75
 1086 0608 04       		.byte	0x4
 1087 0609 40       		.byte	0x40
 1088 060a 75060000 		.4byte	0x675
 1089 060e 04       		.byte	0x4
 1090 060f 0E       		.uleb128 0xe
 1091 0610 B7030000 		.4byte	.LASF76
 1092 0614 04       		.byte	0x4
 1093 0615 45       		.byte	0x45
 1094 0616 77020000 		.4byte	0x277
 1095 061a 08       		.byte	0x8
 1096 061b 0E       		.uleb128 0xe
 1097 061c 89070000 		.4byte	.LASF77
 1098 0620 04       		.byte	0x4
 1099 0621 4B       		.byte	0x4b
 1100 0622 77020000 		.4byte	0x277
 1101 0626 0C       		.byte	0xc
 1102 0627 0E       		.uleb128 0xe
 1103 0628 02010000 		.4byte	.LASF78
 1104 062c 04       		.byte	0x4
 1105 062d 50       		.byte	0x50
 1106 062e 7C020000 		.4byte	0x27c
 1107 0632 10       		.byte	0x10
 1108 0633 0E       		.uleb128 0xe
 1109 0634 93070000 		.4byte	.LASF79
 1110 0638 04       		.byte	0x4
 1111 0639 55       		.byte	0x55
 1112 063a 87020000 		.4byte	0x287
 1113 063e 14       		.byte	0x14
 1114 063f 0E       		.uleb128 0xe
 1115 0640 56040000 		.4byte	.LASF80
 1116 0644 04       		.byte	0x4
 1117 0645 5A       		.byte	0x5a
 1118 0646 7C020000 		.4byte	0x27c
 1119 064a 18       		.byte	0x18
 1120 064b 0E       		.uleb128 0xe
 1121 064c 56080000 		.4byte	.LASF81
 1122 0650 04       		.byte	0x4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 41


 1123 0651 5F       		.byte	0x5f
 1124 0652 87020000 		.4byte	0x287
 1125 0656 1C       		.byte	0x1c
 1126 0657 0E       		.uleb128 0xe
 1127 0658 2E030000 		.4byte	.LASF82
 1128 065c 04       		.byte	0x4
 1129 065d 65       		.byte	0x65
 1130 065e 8C020000 		.4byte	0x28c
 1131 0662 20       		.byte	0x20
 1132 0663 0E       		.uleb128 0xe
 1133 0664 25030000 		.4byte	.LASF83
 1134 0668 04       		.byte	0x4
 1135 0669 6A       		.byte	0x6a
 1136 066a 91020000 		.4byte	0x291
 1137 066e 24       		.byte	0x24
 1138 066f 00       		.byte	0
 1139 0670 0B       		.uleb128 0xb
 1140 0671 90050000 		.4byte	0x590
 1141 0675 0B       		.uleb128 0xb
 1142 0676 BB050000 		.4byte	0x5bb
 1143 067a 03       		.uleb128 0x3
 1144 067b 79060000 		.4byte	.LASF104
 1145 067f 04       		.byte	0x4
 1146 0680 6D       		.byte	0x6d
 1147 0681 85060000 		.4byte	0x685
 1148 0685 0B       		.uleb128 0xb
 1149 0686 EB050000 		.4byte	0x5eb
 1150 068a 11       		.uleb128 0x11
 1151 068b 06070000 		.4byte	.LASF105
 1152 068f 0C       		.byte	0xc
 1153 0690 04       		.byte	0x4
 1154 0691 79       		.byte	0x79
 1155 0692 C7060000 		.4byte	0x6c7
 1156 0696 0E       		.uleb128 0xe
 1157 0697 06020000 		.4byte	.LASF87
 1158 069b 04       		.byte	0x4
 1159 069c 7F       		.byte	0x7f
 1160 069d 85050000 		.4byte	0x585
 1161 06a1 00       		.byte	0
 1162 06a2 0E       		.uleb128 0xe
 1163 06a3 ED030000 		.4byte	.LASF88
 1164 06a7 04       		.byte	0x4
 1165 06a8 84       		.byte	0x84
 1166 06a9 3B020000 		.4byte	0x23b
 1167 06ad 01       		.byte	0x1
 1168 06ae 12       		.uleb128 0x12
 1169 06af 61676500 		.ascii	"age\000"
 1170 06b3 04       		.byte	0x4
 1171 06b4 89       		.byte	0x89
 1172 06b5 A2000000 		.4byte	0xa2
 1173 06b9 04       		.byte	0x4
 1174 06ba 0E       		.uleb128 0xe
 1175 06bb 54030000 		.4byte	.LASF89
 1176 06bf 04       		.byte	0x4
 1177 06c0 8E       		.byte	0x8e
 1178 06c1 CD060000 		.4byte	0x6cd
 1179 06c5 08       		.byte	0x8
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 42


 1180 06c6 00       		.byte	0
 1181 06c7 0C       		.uleb128 0xc
 1182 06c8 04       		.byte	0x4
 1183 06c9 7A060000 		.4byte	0x67a
 1184 06cd 0B       		.uleb128 0xb
 1185 06ce C7060000 		.4byte	0x6c7
 1186 06d2 03       		.uleb128 0x3
 1187 06d3 CD060000 		.4byte	.LASF106
 1188 06d7 04       		.byte	0x4
 1189 06d8 91       		.byte	0x91
 1190 06d9 8A060000 		.4byte	0x68a
 1191 06dd 13       		.uleb128 0x13
 1192 06de ED020000 		.4byte	.LASF107
 1193 06e2 02       		.byte	0x2
 1194 06e3 E4       		.byte	0xe4
 1195 06e4 A2000000 		.4byte	0xa2
 1196 06e8 03       		.byte	0x3
 1197 06e9 F9060000 		.4byte	0x6f9
 1198 06ed 14       		.uleb128 0x14
 1199 06ee 6F000000 		.4byte	.LASF109
 1200 06f2 02       		.byte	0x2
 1201 06f3 E4       		.byte	0xe4
 1202 06f4 04070000 		.4byte	0x704
 1203 06f8 00       		.byte	0
 1204 06f9 0C       		.uleb128 0xc
 1205 06fa 04       		.byte	0x4
 1206 06fb FF060000 		.4byte	0x6ff
 1207 06ff 0B       		.uleb128 0xb
 1208 0700 F8030000 		.4byte	0x3f8
 1209 0704 0B       		.uleb128 0xb
 1210 0705 F9060000 		.4byte	0x6f9
 1211 0709 15       		.uleb128 0x15
 1212 070a 17000000 		.4byte	.LASF108
 1213 070e 02       		.byte	0x2
 1214 070f 1201     		.2byte	0x112
 1215 0711 AB020000 		.4byte	0x2ab
 1216 0715 03       		.byte	0x3
 1217 0716 27070000 		.4byte	0x727
 1218 071a 16       		.uleb128 0x16
 1219 071b 6F000000 		.4byte	.LASF109
 1220 071f 02       		.byte	0x2
 1221 0720 1201     		.2byte	0x112
 1222 0722 04070000 		.4byte	0x704
 1223 0726 00       		.byte	0
 1224 0727 15       		.uleb128 0x15
 1225 0728 3D030000 		.4byte	.LASF110
 1226 072c 03       		.byte	0x3
 1227 072d 7E01     		.2byte	0x17e
 1228 072f EA010000 		.4byte	0x1ea
 1229 0733 03       		.byte	0x3
 1230 0734 51070000 		.4byte	0x751
 1231 0738 16       		.uleb128 0x16
 1232 0739 6F000000 		.4byte	.LASF109
 1233 073d 03       		.byte	0x3
 1234 073e 7E01     		.2byte	0x17e
 1235 0740 5C070000 		.4byte	0x75c
 1236 0744 17       		.uleb128 0x17
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 43


 1237 0745 72657400 		.ascii	"ret\000"
 1238 0749 03       		.byte	0x3
 1239 074a 8001     		.2byte	0x180
 1240 074c EA010000 		.4byte	0x1ea
 1241 0750 00       		.byte	0
 1242 0751 0C       		.uleb128 0xc
 1243 0752 04       		.byte	0x4
 1244 0753 57070000 		.4byte	0x757
 1245 0757 0B       		.uleb128 0xb
 1246 0758 65050000 		.4byte	0x565
 1247 075c 0B       		.uleb128 0xb
 1248 075d 51070000 		.4byte	0x751
 1249 0761 15       		.uleb128 0x15
 1250 0762 3B000000 		.4byte	.LASF111
 1251 0766 03       		.byte	0x3
 1252 0767 3501     		.2byte	0x135
 1253 0769 EA010000 		.4byte	0x1ea
 1254 076d 03       		.byte	0x3
 1255 076e BD070000 		.4byte	0x7bd
 1256 0772 16       		.uleb128 0x16
 1257 0773 6F000000 		.4byte	.LASF109
 1258 0777 03       		.byte	0x3
 1259 0778 3501     		.2byte	0x135
 1260 077a C3070000 		.4byte	0x7c3
 1261 077e 16       		.uleb128 0x16
 1262 077f 06020000 		.4byte	.LASF87
 1263 0783 03       		.byte	0x3
 1264 0784 3501     		.2byte	0x135
 1265 0786 74040000 		.4byte	0x474
 1266 078a 17       		.uleb128 0x17
 1267 078b 72657400 		.ascii	"ret\000"
 1268 078f 03       		.byte	0x3
 1269 0790 3801     		.2byte	0x138
 1270 0792 EA010000 		.4byte	0x1ea
 1271 0796 18       		.uleb128 0x18
 1272 0797 9E010000 		.4byte	.LASF112
 1273 079b 03       		.byte	0x3
 1274 079c 3901     		.2byte	0x139
 1275 079e C2000000 		.4byte	0xc2
 1276 07a2 18       		.uleb128 0x18
 1277 07a3 7E070000 		.4byte	.LASF113
 1278 07a7 03       		.byte	0x3
 1279 07a8 4301     		.2byte	0x143
 1280 07aa 81020000 		.4byte	0x281
 1281 07ae 19       		.uleb128 0x19
 1282 07af 18       		.uleb128 0x18
 1283 07b0 1D050000 		.4byte	.LASF114
 1284 07b4 03       		.byte	0x3
 1285 07b5 4801     		.2byte	0x148
 1286 07b7 0B010000 		.4byte	0x10b
 1287 07bb 00       		.byte	0
 1288 07bc 00       		.byte	0
 1289 07bd 0C       		.uleb128 0xc
 1290 07be 04       		.byte	0x4
 1291 07bf 65050000 		.4byte	0x565
 1292 07c3 0B       		.uleb128 0xb
 1293 07c4 BD070000 		.4byte	0x7bd
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 44


 1294 07c8 15       		.uleb128 0x15
 1295 07c9 7C030000 		.4byte	.LASF115
 1296 07cd 04       		.byte	0x4
 1297 07ce 7E01     		.2byte	0x17e
 1298 07d0 EA010000 		.4byte	0x1ea
 1299 07d4 03       		.byte	0x3
 1300 07d5 F2070000 		.4byte	0x7f2
 1301 07d9 16       		.uleb128 0x16
 1302 07da 6F000000 		.4byte	.LASF109
 1303 07de 04       		.byte	0x4
 1304 07df 7E01     		.2byte	0x17e
 1305 07e1 FD070000 		.4byte	0x7fd
 1306 07e5 17       		.uleb128 0x17
 1307 07e6 72657400 		.ascii	"ret\000"
 1308 07ea 04       		.byte	0x4
 1309 07eb 8001     		.2byte	0x180
 1310 07ed EA010000 		.4byte	0x1ea
 1311 07f1 00       		.byte	0
 1312 07f2 0C       		.uleb128 0xc
 1313 07f3 04       		.byte	0x4
 1314 07f4 F8070000 		.4byte	0x7f8
 1315 07f8 0B       		.uleb128 0xb
 1316 07f9 D2060000 		.4byte	0x6d2
 1317 07fd 0B       		.uleb128 0xb
 1318 07fe F2070000 		.4byte	0x7f2
 1319 0802 15       		.uleb128 0x15
 1320 0803 5B010000 		.4byte	.LASF116
 1321 0807 04       		.byte	0x4
 1322 0808 3501     		.2byte	0x135
 1323 080a EA010000 		.4byte	0x1ea
 1324 080e 03       		.byte	0x3
 1325 080f 5E080000 		.4byte	0x85e
 1326 0813 16       		.uleb128 0x16
 1327 0814 6F000000 		.4byte	.LASF109
 1328 0818 04       		.byte	0x4
 1329 0819 3501     		.2byte	0x135
 1330 081b 64080000 		.4byte	0x864
 1331 081f 16       		.uleb128 0x16
 1332 0820 06020000 		.4byte	.LASF87
 1333 0824 04       		.byte	0x4
 1334 0825 3501     		.2byte	0x135
 1335 0827 E1050000 		.4byte	0x5e1
 1336 082b 17       		.uleb128 0x17
 1337 082c 72657400 		.ascii	"ret\000"
 1338 0830 04       		.byte	0x4
 1339 0831 3801     		.2byte	0x138
 1340 0833 EA010000 		.4byte	0x1ea
 1341 0837 18       		.uleb128 0x18
 1342 0838 9E010000 		.4byte	.LASF112
 1343 083c 04       		.byte	0x4
 1344 083d 3901     		.2byte	0x139
 1345 083f C2000000 		.4byte	0xc2
 1346 0843 18       		.uleb128 0x18
 1347 0844 7E070000 		.4byte	.LASF113
 1348 0848 04       		.byte	0x4
 1349 0849 4301     		.2byte	0x143
 1350 084b 81020000 		.4byte	0x281
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 45


 1351 084f 19       		.uleb128 0x19
 1352 0850 18       		.uleb128 0x18
 1353 0851 1D050000 		.4byte	.LASF114
 1354 0855 04       		.byte	0x4
 1355 0856 4801     		.2byte	0x148
 1356 0858 0B010000 		.4byte	0x10b
 1357 085c 00       		.byte	0
 1358 085d 00       		.byte	0
 1359 085e 0C       		.uleb128 0xc
 1360 085f 04       		.byte	0x4
 1361 0860 D2060000 		.4byte	0x6d2
 1362 0864 0B       		.uleb128 0xb
 1363 0865 5E080000 		.4byte	0x85e
 1364 0869 1A       		.uleb128 0x1a
 1365 086a 1A010000 		.4byte	.LASF119
 1366 086e 01       		.byte	0x1
 1367 086f 2D       		.byte	0x2d
 1368 0870 00000000 		.4byte	.LFB165
 1369 0874 8C000000 		.4byte	.LFE165-.LFB165
 1370 0878 01       		.uleb128 0x1
 1371 0879 9C       		.byte	0x9c
 1372 087a 95090000 		.4byte	0x995
 1373 087e 1B       		.uleb128 0x1b
 1374 087f 657600   		.ascii	"ev\000"
 1375 0882 01       		.byte	0x1
 1376 0883 2D       		.byte	0x2d
 1377 0884 0B020000 		.4byte	0x20b
 1378 0888 00000000 		.4byte	.LLST0
 1379 088c 1C       		.uleb128 0x1c
 1380 088d 55010000 		.4byte	.LASF117
 1381 0891 01       		.byte	0x1
 1382 0892 35       		.byte	0x35
 1383 0893 AB020000 		.4byte	0x2ab
 1384 0897 1D       		.uleb128 0x1d
 1385 0898 00000000 		.4byte	.LASF121
 1386 089c 01       		.byte	0x1
 1387 089d 36       		.byte	0x36
 1388 089e 18040000 		.4byte	0x418
 1389 08a2 21000000 		.4byte	.LLST1
 1390 08a6 1C       		.uleb128 0x1c
 1391 08a7 14010000 		.4byte	.LASF118
 1392 08ab 01       		.byte	0x1
 1393 08ac 3F       		.byte	0x3f
 1394 08ad EA010000 		.4byte	0x1ea
 1395 08b1 1E       		.uleb128 0x1e
 1396 08b2 09070000 		.4byte	0x709
 1397 08b6 02000000 		.4byte	.LBB18
 1398 08ba 04000000 		.4byte	.LBE18-.LBB18
 1399 08be 01       		.byte	0x1
 1400 08bf 35       		.byte	0x35
 1401 08c0 CA080000 		.4byte	0x8ca
 1402 08c4 1F       		.uleb128 0x1f
 1403 08c5 1A070000 		.4byte	0x71a
 1404 08c9 00       		.byte	0
 1405 08ca 1E       		.uleb128 0x1e
 1406 08cb DD060000 		.4byte	0x6dd
 1407 08cf 0A000000 		.4byte	.LBB20
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 46


 1408 08d3 02000000 		.4byte	.LBE20-.LBB20
 1409 08d7 01       		.byte	0x1
 1410 08d8 38       		.byte	0x38
 1411 08d9 E3080000 		.4byte	0x8e3
 1412 08dd 1F       		.uleb128 0x1f
 1413 08de ED060000 		.4byte	0x6ed
 1414 08e2 00       		.byte	0
 1415 08e3 1E       		.uleb128 0x1e
 1416 08e4 61070000 		.4byte	0x761
 1417 08e8 14000000 		.4byte	.LBB22
 1418 08ec 56000000 		.4byte	.LBE22-.LBB22
 1419 08f0 01       		.byte	0x1
 1420 08f1 3E       		.byte	0x3e
 1421 08f2 59090000 		.4byte	0x959
 1422 08f6 20       		.uleb128 0x20
 1423 08f7 7E070000 		.4byte	0x77e
 1424 08fb 34000000 		.4byte	.LLST2
 1425 08ff 1F       		.uleb128 0x1f
 1426 0900 72070000 		.4byte	0x772
 1427 0904 21       		.uleb128 0x21
 1428 0905 14000000 		.4byte	.LBB23
 1429 0909 56000000 		.4byte	.LBE23-.LBB23
 1430 090d 22       		.uleb128 0x22
 1431 090e 8A070000 		.4byte	0x78a
 1432 0912 00       		.byte	0
 1433 0913 23       		.uleb128 0x23
 1434 0914 96070000 		.4byte	0x796
 1435 0918 5D000000 		.4byte	.LLST3
 1436 091c 23       		.uleb128 0x23
 1437 091d A2070000 		.4byte	0x7a2
 1438 0921 93000000 		.4byte	.LLST4
 1439 0925 24       		.uleb128 0x24
 1440 0926 50000000 		.4byte	.LBB24
 1441 092a 0A000000 		.4byte	.LBE24-.LBB24
 1442 092e 45090000 		.4byte	0x945
 1443 0932 23       		.uleb128 0x23
 1444 0933 AF070000 		.4byte	0x7af
 1445 0937 A6000000 		.4byte	.LLST5
 1446 093b 25       		.uleb128 0x25
 1447 093c 5A000000 		.4byte	.LVL14
 1448 0940 190B0000 		.4byte	0xb19
 1449 0944 00       		.byte	0
 1450 0945 25       		.uleb128 0x25
 1451 0946 26000000 		.4byte	.LVL9
 1452 094a 250B0000 		.4byte	0xb25
 1453 094e 25       		.uleb128 0x25
 1454 094f 42000000 		.4byte	.LVL11
 1455 0953 310B0000 		.4byte	0xb31
 1456 0957 00       		.byte	0
 1457 0958 00       		.byte	0
 1458 0959 1E       		.uleb128 0x1e
 1459 095a 27070000 		.4byte	0x727
 1460 095e 6A000000 		.4byte	.LBB25
 1461 0962 10000000 		.4byte	.LBE25-.LBB25
 1462 0966 01       		.byte	0x1
 1463 0967 3F       		.byte	0x3f
 1464 0968 85090000 		.4byte	0x985
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 47


 1465 096c 1F       		.uleb128 0x1f
 1466 096d 38070000 		.4byte	0x738
 1467 0971 21       		.uleb128 0x21
 1468 0972 6A000000 		.4byte	.LBB26
 1469 0976 10000000 		.4byte	.LBE26-.LBB26
 1470 097a 23       		.uleb128 0x23
 1471 097b 44070000 		.4byte	0x744
 1472 097f BF000000 		.4byte	.LLST6
 1473 0983 00       		.byte	0
 1474 0984 00       		.byte	0
 1475 0985 26       		.uleb128 0x26
 1476 0986 80000000 		.4byte	.LVL20
 1477 098a 3D0B0000 		.4byte	0xb3d
 1478 098e 27       		.uleb128 0x27
 1479 098f 01       		.uleb128 0x1
 1480 0990 50       		.byte	0x50
 1481 0991 01       		.uleb128 0x1
 1482 0992 32       		.byte	0x32
 1483 0993 00       		.byte	0
 1484 0994 00       		.byte	0
 1485 0995 1A       		.uleb128 0x1a
 1486 0996 0C080000 		.4byte	.LASF120
 1487 099a 01       		.byte	0x1
 1488 099b 51       		.byte	0x51
 1489 099c 00000000 		.4byte	.LFB166
 1490 09a0 98000000 		.4byte	.LFE166-.LFB166
 1491 09a4 01       		.uleb128 0x1
 1492 09a5 9C       		.byte	0x9c
 1493 09a6 AB0A0000 		.4byte	0xaab
 1494 09aa 1B       		.uleb128 0x1b
 1495 09ab 657600   		.ascii	"ev\000"
 1496 09ae 01       		.byte	0x1
 1497 09af 51       		.byte	0x51
 1498 09b0 0B020000 		.4byte	0x20b
 1499 09b4 D4000000 		.4byte	.LLST7
 1500 09b8 28       		.uleb128 0x28
 1501 09b9 55010000 		.4byte	.LASF117
 1502 09bd 01       		.byte	0x1
 1503 09be 58       		.byte	0x58
 1504 09bf AB0A0000 		.4byte	0xaab
 1505 09c3 02       		.uleb128 0x2
 1506 09c4 91       		.byte	0x91
 1507 09c5 6C       		.sleb128 -20
 1508 09c6 1D       		.uleb128 0x1d
 1509 09c7 4F010000 		.4byte	.LASF122
 1510 09cb 01       		.byte	0x1
 1511 09cc 59       		.byte	0x59
 1512 09cd 85050000 		.4byte	0x585
 1513 09d1 F5000000 		.4byte	.LLST8
 1514 09d5 1C       		.uleb128 0x1c
 1515 09d6 14010000 		.4byte	.LASF118
 1516 09da 01       		.byte	0x1
 1517 09db 5E       		.byte	0x5e
 1518 09dc EA010000 		.4byte	0x1ea
 1519 09e0 1E       		.uleb128 0x1e
 1520 09e1 09070000 		.4byte	0x709
 1521 09e5 04000000 		.4byte	.LBB27
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 48


 1522 09e9 08000000 		.4byte	.LBE27-.LBB27
 1523 09ed 01       		.byte	0x1
 1524 09ee 58       		.byte	0x58
 1525 09ef F9090000 		.4byte	0x9f9
 1526 09f3 1F       		.uleb128 0x1f
 1527 09f4 1A070000 		.4byte	0x71a
 1528 09f8 00       		.byte	0
 1529 09f9 1E       		.uleb128 0x1e
 1530 09fa 02080000 		.4byte	0x802
 1531 09fe 20000000 		.4byte	.LBB29
 1532 0a02 56000000 		.4byte	.LBE29-.LBB29
 1533 0a06 01       		.byte	0x1
 1534 0a07 5D       		.byte	0x5d
 1535 0a08 6F0A0000 		.4byte	0xa6f
 1536 0a0c 20       		.uleb128 0x20
 1537 0a0d 1F080000 		.4byte	0x81f
 1538 0a11 08010000 		.4byte	.LLST9
 1539 0a15 1F       		.uleb128 0x1f
 1540 0a16 13080000 		.4byte	0x813
 1541 0a1a 21       		.uleb128 0x21
 1542 0a1b 20000000 		.4byte	.LBB30
 1543 0a1f 56000000 		.4byte	.LBE30-.LBB30
 1544 0a23 22       		.uleb128 0x22
 1545 0a24 2B080000 		.4byte	0x82b
 1546 0a28 00       		.byte	0
 1547 0a29 23       		.uleb128 0x23
 1548 0a2a 37080000 		.4byte	0x837
 1549 0a2e 31010000 		.4byte	.LLST10
 1550 0a32 23       		.uleb128 0x23
 1551 0a33 43080000 		.4byte	0x843
 1552 0a37 67010000 		.4byte	.LLST11
 1553 0a3b 24       		.uleb128 0x24
 1554 0a3c 5C000000 		.4byte	.LBB31
 1555 0a40 0A000000 		.4byte	.LBE31-.LBB31
 1556 0a44 5B0A0000 		.4byte	0xa5b
 1557 0a48 23       		.uleb128 0x23
 1558 0a49 50080000 		.4byte	0x850
 1559 0a4d 7A010000 		.4byte	.LLST12
 1560 0a51 25       		.uleb128 0x25
 1561 0a52 66000000 		.4byte	.LVL35
 1562 0a56 190B0000 		.4byte	0xb19
 1563 0a5a 00       		.byte	0
 1564 0a5b 25       		.uleb128 0x25
 1565 0a5c 32000000 		.4byte	.LVL30
 1566 0a60 250B0000 		.4byte	0xb25
 1567 0a64 25       		.uleb128 0x25
 1568 0a65 4E000000 		.4byte	.LVL32
 1569 0a69 310B0000 		.4byte	0xb31
 1570 0a6d 00       		.byte	0
 1571 0a6e 00       		.byte	0
 1572 0a6f 1E       		.uleb128 0x1e
 1573 0a70 C8070000 		.4byte	0x7c8
 1574 0a74 76000000 		.4byte	.LBB32
 1575 0a78 10000000 		.4byte	.LBE32-.LBB32
 1576 0a7c 01       		.byte	0x1
 1577 0a7d 5E       		.byte	0x5e
 1578 0a7e 9B0A0000 		.4byte	0xa9b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 49


 1579 0a82 1F       		.uleb128 0x1f
 1580 0a83 D9070000 		.4byte	0x7d9
 1581 0a87 21       		.uleb128 0x21
 1582 0a88 76000000 		.4byte	.LBB33
 1583 0a8c 10000000 		.4byte	.LBE33-.LBB33
 1584 0a90 23       		.uleb128 0x23
 1585 0a91 E5070000 		.4byte	0x7e5
 1586 0a95 93010000 		.4byte	.LLST13
 1587 0a99 00       		.byte	0
 1588 0a9a 00       		.byte	0
 1589 0a9b 26       		.uleb128 0x26
 1590 0a9c 8C000000 		.4byte	.LVL41
 1591 0aa0 3D0B0000 		.4byte	0xb3d
 1592 0aa4 27       		.uleb128 0x27
 1593 0aa5 01       		.uleb128 0x1
 1594 0aa6 50       		.byte	0x50
 1595 0aa7 01       		.uleb128 0x1
 1596 0aa8 33       		.byte	0x33
 1597 0aa9 00       		.byte	0
 1598 0aaa 00       		.byte	0
 1599 0aab 29       		.uleb128 0x29
 1600 0aac AB020000 		.4byte	0x2ab
 1601 0ab0 2A       		.uleb128 0x2a
 1602 0ab1 3E080000 		.4byte	.LASF123
 1603 0ab5 12       		.byte	0x12
 1604 0ab6 40       		.byte	0x40
 1605 0ab7 EA000000 		.4byte	0xea
 1606 0abb 2A       		.uleb128 0x2a
 1607 0abc 25080000 		.4byte	.LASF124
 1608 0ac0 12       		.byte	0x12
 1609 0ac1 47       		.byte	0x47
 1610 0ac2 F5000000 		.4byte	0xf5
 1611 0ac6 2A       		.uleb128 0x2a
 1612 0ac7 0C020000 		.4byte	.LASF125
 1613 0acb 12       		.byte	0x12
 1614 0acc 4A       		.byte	0x4a
 1615 0acd EA000000 		.4byte	0xea
 1616 0ad1 2A       		.uleb128 0x2a
 1617 0ad2 B7070000 		.4byte	.LASF126
 1618 0ad6 13       		.byte	0x13
 1619 0ad7 48       		.byte	0x48
 1620 0ad8 00010000 		.4byte	0x100
 1621 0adc 2A       		.uleb128 0x2a
 1622 0add A4060000 		.4byte	.LASF127
 1623 0ae1 14       		.byte	0x14
 1624 0ae2 44       		.byte	0x44
 1625 0ae3 EA000000 		.4byte	0xea
 1626 0ae7 2B       		.uleb128 0x2b
 1627 0ae8 22060000 		.4byte	.LASF128
 1628 0aec 15       		.byte	0x15
 1629 0aed 1207     		.2byte	0x712
 1630 0aef F30A0000 		.4byte	0xaf3
 1631 0af3 29       		.uleb128 0x29
 1632 0af4 97000000 		.4byte	0x97
 1633 0af8 2A       		.uleb128 0x2a
 1634 0af9 07000000 		.4byte	.LASF129
 1635 0afd 16       		.byte	0x16
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 50


 1636 0afe 3A       		.byte	0x3a
 1637 0aff F8030000 		.4byte	0x3f8
 1638 0b03 2A       		.uleb128 0x2a
 1639 0b04 43070000 		.4byte	.LASF130
 1640 0b08 16       		.byte	0x16
 1641 0b09 49       		.byte	0x49
 1642 0b0a 65050000 		.4byte	0x565
 1643 0b0e 2A       		.uleb128 0x2a
 1644 0b0f DD080000 		.4byte	.LASF131
 1645 0b13 16       		.byte	0x16
 1646 0b14 58       		.byte	0x58
 1647 0b15 D2060000 		.4byte	0x6d2
 1648 0b19 2C       		.uleb128 0x2c
 1649 0b1a 76000000 		.4byte	.LASF132
 1650 0b1e 76000000 		.4byte	.LASF132
 1651 0b22 17       		.byte	0x17
 1652 0b23 4A01     		.2byte	0x14a
 1653 0b25 2C       		.uleb128 0x2c
 1654 0b26 DB020000 		.4byte	.LASF133
 1655 0b2a DB020000 		.4byte	.LASF133
 1656 0b2e 17       		.byte	0x17
 1657 0b2f 1901     		.2byte	0x119
 1658 0b31 2C       		.uleb128 0x2c
 1659 0b32 2F060000 		.4byte	.LASF134
 1660 0b36 2F060000 		.4byte	.LASF134
 1661 0b3a 17       		.byte	0x17
 1662 0b3b 1E01     		.2byte	0x11e
 1663 0b3d 2D       		.uleb128 0x2d
 1664 0b3e 99050000 		.4byte	.LASF135
 1665 0b42 99050000 		.4byte	.LASF135
 1666 0b46 0E       		.byte	0xe
 1667 0b47 5B       		.byte	0x5b
 1668 0b48 00       		.byte	0
 1669              		.section	.debug_abbrev,"",%progbits
 1670              	.Ldebug_abbrev0:
 1671 0000 01       		.uleb128 0x1
 1672 0001 11       		.uleb128 0x11
 1673 0002 01       		.byte	0x1
 1674 0003 25       		.uleb128 0x25
 1675 0004 0E       		.uleb128 0xe
 1676 0005 13       		.uleb128 0x13
 1677 0006 0B       		.uleb128 0xb
 1678 0007 03       		.uleb128 0x3
 1679 0008 0E       		.uleb128 0xe
 1680 0009 1B       		.uleb128 0x1b
 1681 000a 0E       		.uleb128 0xe
 1682 000b 55       		.uleb128 0x55
 1683 000c 17       		.uleb128 0x17
 1684 000d 11       		.uleb128 0x11
 1685 000e 01       		.uleb128 0x1
 1686 000f 10       		.uleb128 0x10
 1687 0010 17       		.uleb128 0x17
 1688 0011 00       		.byte	0
 1689 0012 00       		.byte	0
 1690 0013 02       		.uleb128 0x2
 1691 0014 24       		.uleb128 0x24
 1692 0015 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 51


 1693 0016 0B       		.uleb128 0xb
 1694 0017 0B       		.uleb128 0xb
 1695 0018 3E       		.uleb128 0x3e
 1696 0019 0B       		.uleb128 0xb
 1697 001a 03       		.uleb128 0x3
 1698 001b 0E       		.uleb128 0xe
 1699 001c 00       		.byte	0
 1700 001d 00       		.byte	0
 1701 001e 03       		.uleb128 0x3
 1702 001f 16       		.uleb128 0x16
 1703 0020 00       		.byte	0
 1704 0021 03       		.uleb128 0x3
 1705 0022 0E       		.uleb128 0xe
 1706 0023 3A       		.uleb128 0x3a
 1707 0024 0B       		.uleb128 0xb
 1708 0025 3B       		.uleb128 0x3b
 1709 0026 0B       		.uleb128 0xb
 1710 0027 49       		.uleb128 0x49
 1711 0028 13       		.uleb128 0x13
 1712 0029 00       		.byte	0
 1713 002a 00       		.byte	0
 1714 002b 04       		.uleb128 0x4
 1715 002c 24       		.uleb128 0x24
 1716 002d 00       		.byte	0
 1717 002e 0B       		.uleb128 0xb
 1718 002f 0B       		.uleb128 0xb
 1719 0030 3E       		.uleb128 0x3e
 1720 0031 0B       		.uleb128 0xb
 1721 0032 03       		.uleb128 0x3
 1722 0033 08       		.uleb128 0x8
 1723 0034 00       		.byte	0
 1724 0035 00       		.byte	0
 1725 0036 05       		.uleb128 0x5
 1726 0037 16       		.uleb128 0x16
 1727 0038 00       		.byte	0
 1728 0039 03       		.uleb128 0x3
 1729 003a 0E       		.uleb128 0xe
 1730 003b 3A       		.uleb128 0x3a
 1731 003c 0B       		.uleb128 0xb
 1732 003d 3B       		.uleb128 0x3b
 1733 003e 05       		.uleb128 0x5
 1734 003f 49       		.uleb128 0x49
 1735 0040 13       		.uleb128 0x13
 1736 0041 00       		.byte	0
 1737 0042 00       		.byte	0
 1738 0043 06       		.uleb128 0x6
 1739 0044 04       		.uleb128 0x4
 1740 0045 01       		.byte	0x1
 1741 0046 0B       		.uleb128 0xb
 1742 0047 0B       		.uleb128 0xb
 1743 0048 49       		.uleb128 0x49
 1744 0049 13       		.uleb128 0x13
 1745 004a 3A       		.uleb128 0x3a
 1746 004b 0B       		.uleb128 0xb
 1747 004c 3B       		.uleb128 0x3b
 1748 004d 0B       		.uleb128 0xb
 1749 004e 01       		.uleb128 0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 52


 1750 004f 13       		.uleb128 0x13
 1751 0050 00       		.byte	0
 1752 0051 00       		.byte	0
 1753 0052 07       		.uleb128 0x7
 1754 0053 28       		.uleb128 0x28
 1755 0054 00       		.byte	0
 1756 0055 03       		.uleb128 0x3
 1757 0056 0E       		.uleb128 0xe
 1758 0057 1C       		.uleb128 0x1c
 1759 0058 0B       		.uleb128 0xb
 1760 0059 00       		.byte	0
 1761 005a 00       		.byte	0
 1762 005b 08       		.uleb128 0x8
 1763 005c 28       		.uleb128 0x28
 1764 005d 00       		.byte	0
 1765 005e 03       		.uleb128 0x3
 1766 005f 0E       		.uleb128 0xe
 1767 0060 1C       		.uleb128 0x1c
 1768 0061 0D       		.uleb128 0xd
 1769 0062 00       		.byte	0
 1770 0063 00       		.byte	0
 1771 0064 09       		.uleb128 0x9
 1772 0065 01       		.uleb128 0x1
 1773 0066 01       		.byte	0x1
 1774 0067 49       		.uleb128 0x49
 1775 0068 13       		.uleb128 0x13
 1776 0069 01       		.uleb128 0x1
 1777 006a 13       		.uleb128 0x13
 1778 006b 00       		.byte	0
 1779 006c 00       		.byte	0
 1780 006d 0A       		.uleb128 0xa
 1781 006e 21       		.uleb128 0x21
 1782 006f 00       		.byte	0
 1783 0070 00       		.byte	0
 1784 0071 00       		.byte	0
 1785 0072 0B       		.uleb128 0xb
 1786 0073 26       		.uleb128 0x26
 1787 0074 00       		.byte	0
 1788 0075 49       		.uleb128 0x49
 1789 0076 13       		.uleb128 0x13
 1790 0077 00       		.byte	0
 1791 0078 00       		.byte	0
 1792 0079 0C       		.uleb128 0xc
 1793 007a 0F       		.uleb128 0xf
 1794 007b 00       		.byte	0
 1795 007c 0B       		.uleb128 0xb
 1796 007d 0B       		.uleb128 0xb
 1797 007e 49       		.uleb128 0x49
 1798 007f 13       		.uleb128 0x13
 1799 0080 00       		.byte	0
 1800 0081 00       		.byte	0
 1801 0082 0D       		.uleb128 0xd
 1802 0083 13       		.uleb128 0x13
 1803 0084 01       		.byte	0x1
 1804 0085 0B       		.uleb128 0xb
 1805 0086 0B       		.uleb128 0xb
 1806 0087 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 53


 1807 0088 0B       		.uleb128 0xb
 1808 0089 3B       		.uleb128 0x3b
 1809 008a 0B       		.uleb128 0xb
 1810 008b 01       		.uleb128 0x1
 1811 008c 13       		.uleb128 0x13
 1812 008d 00       		.byte	0
 1813 008e 00       		.byte	0
 1814 008f 0E       		.uleb128 0xe
 1815 0090 0D       		.uleb128 0xd
 1816 0091 00       		.byte	0
 1817 0092 03       		.uleb128 0x3
 1818 0093 0E       		.uleb128 0xe
 1819 0094 3A       		.uleb128 0x3a
 1820 0095 0B       		.uleb128 0xb
 1821 0096 3B       		.uleb128 0x3b
 1822 0097 0B       		.uleb128 0xb
 1823 0098 49       		.uleb128 0x49
 1824 0099 13       		.uleb128 0x13
 1825 009a 38       		.uleb128 0x38
 1826 009b 0B       		.uleb128 0xb
 1827 009c 00       		.byte	0
 1828 009d 00       		.byte	0
 1829 009e 0F       		.uleb128 0xf
 1830 009f 15       		.uleb128 0x15
 1831 00a0 01       		.byte	0x1
 1832 00a1 27       		.uleb128 0x27
 1833 00a2 19       		.uleb128 0x19
 1834 00a3 49       		.uleb128 0x49
 1835 00a4 13       		.uleb128 0x13
 1836 00a5 01       		.uleb128 0x1
 1837 00a6 13       		.uleb128 0x13
 1838 00a7 00       		.byte	0
 1839 00a8 00       		.byte	0
 1840 00a9 10       		.uleb128 0x10
 1841 00aa 05       		.uleb128 0x5
 1842 00ab 00       		.byte	0
 1843 00ac 49       		.uleb128 0x49
 1844 00ad 13       		.uleb128 0x13
 1845 00ae 00       		.byte	0
 1846 00af 00       		.byte	0
 1847 00b0 11       		.uleb128 0x11
 1848 00b1 13       		.uleb128 0x13
 1849 00b2 01       		.byte	0x1
 1850 00b3 03       		.uleb128 0x3
 1851 00b4 0E       		.uleb128 0xe
 1852 00b5 0B       		.uleb128 0xb
 1853 00b6 0B       		.uleb128 0xb
 1854 00b7 3A       		.uleb128 0x3a
 1855 00b8 0B       		.uleb128 0xb
 1856 00b9 3B       		.uleb128 0x3b
 1857 00ba 0B       		.uleb128 0xb
 1858 00bb 01       		.uleb128 0x1
 1859 00bc 13       		.uleb128 0x13
 1860 00bd 00       		.byte	0
 1861 00be 00       		.byte	0
 1862 00bf 12       		.uleb128 0x12
 1863 00c0 0D       		.uleb128 0xd
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 54


 1864 00c1 00       		.byte	0
 1865 00c2 03       		.uleb128 0x3
 1866 00c3 08       		.uleb128 0x8
 1867 00c4 3A       		.uleb128 0x3a
 1868 00c5 0B       		.uleb128 0xb
 1869 00c6 3B       		.uleb128 0x3b
 1870 00c7 0B       		.uleb128 0xb
 1871 00c8 49       		.uleb128 0x49
 1872 00c9 13       		.uleb128 0x13
 1873 00ca 38       		.uleb128 0x38
 1874 00cb 0B       		.uleb128 0xb
 1875 00cc 00       		.byte	0
 1876 00cd 00       		.byte	0
 1877 00ce 13       		.uleb128 0x13
 1878 00cf 2E       		.uleb128 0x2e
 1879 00d0 01       		.byte	0x1
 1880 00d1 3F       		.uleb128 0x3f
 1881 00d2 19       		.uleb128 0x19
 1882 00d3 03       		.uleb128 0x3
 1883 00d4 0E       		.uleb128 0xe
 1884 00d5 3A       		.uleb128 0x3a
 1885 00d6 0B       		.uleb128 0xb
 1886 00d7 3B       		.uleb128 0x3b
 1887 00d8 0B       		.uleb128 0xb
 1888 00d9 27       		.uleb128 0x27
 1889 00da 19       		.uleb128 0x19
 1890 00db 49       		.uleb128 0x49
 1891 00dc 13       		.uleb128 0x13
 1892 00dd 20       		.uleb128 0x20
 1893 00de 0B       		.uleb128 0xb
 1894 00df 01       		.uleb128 0x1
 1895 00e0 13       		.uleb128 0x13
 1896 00e1 00       		.byte	0
 1897 00e2 00       		.byte	0
 1898 00e3 14       		.uleb128 0x14
 1899 00e4 05       		.uleb128 0x5
 1900 00e5 00       		.byte	0
 1901 00e6 03       		.uleb128 0x3
 1902 00e7 0E       		.uleb128 0xe
 1903 00e8 3A       		.uleb128 0x3a
 1904 00e9 0B       		.uleb128 0xb
 1905 00ea 3B       		.uleb128 0x3b
 1906 00eb 0B       		.uleb128 0xb
 1907 00ec 49       		.uleb128 0x49
 1908 00ed 13       		.uleb128 0x13
 1909 00ee 00       		.byte	0
 1910 00ef 00       		.byte	0
 1911 00f0 15       		.uleb128 0x15
 1912 00f1 2E       		.uleb128 0x2e
 1913 00f2 01       		.byte	0x1
 1914 00f3 3F       		.uleb128 0x3f
 1915 00f4 19       		.uleb128 0x19
 1916 00f5 03       		.uleb128 0x3
 1917 00f6 0E       		.uleb128 0xe
 1918 00f7 3A       		.uleb128 0x3a
 1919 00f8 0B       		.uleb128 0xb
 1920 00f9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 55


 1921 00fa 05       		.uleb128 0x5
 1922 00fb 27       		.uleb128 0x27
 1923 00fc 19       		.uleb128 0x19
 1924 00fd 49       		.uleb128 0x49
 1925 00fe 13       		.uleb128 0x13
 1926 00ff 20       		.uleb128 0x20
 1927 0100 0B       		.uleb128 0xb
 1928 0101 01       		.uleb128 0x1
 1929 0102 13       		.uleb128 0x13
 1930 0103 00       		.byte	0
 1931 0104 00       		.byte	0
 1932 0105 16       		.uleb128 0x16
 1933 0106 05       		.uleb128 0x5
 1934 0107 00       		.byte	0
 1935 0108 03       		.uleb128 0x3
 1936 0109 0E       		.uleb128 0xe
 1937 010a 3A       		.uleb128 0x3a
 1938 010b 0B       		.uleb128 0xb
 1939 010c 3B       		.uleb128 0x3b
 1940 010d 05       		.uleb128 0x5
 1941 010e 49       		.uleb128 0x49
 1942 010f 13       		.uleb128 0x13
 1943 0110 00       		.byte	0
 1944 0111 00       		.byte	0
 1945 0112 17       		.uleb128 0x17
 1946 0113 34       		.uleb128 0x34
 1947 0114 00       		.byte	0
 1948 0115 03       		.uleb128 0x3
 1949 0116 08       		.uleb128 0x8
 1950 0117 3A       		.uleb128 0x3a
 1951 0118 0B       		.uleb128 0xb
 1952 0119 3B       		.uleb128 0x3b
 1953 011a 05       		.uleb128 0x5
 1954 011b 49       		.uleb128 0x49
 1955 011c 13       		.uleb128 0x13
 1956 011d 00       		.byte	0
 1957 011e 00       		.byte	0
 1958 011f 18       		.uleb128 0x18
 1959 0120 34       		.uleb128 0x34
 1960 0121 00       		.byte	0
 1961 0122 03       		.uleb128 0x3
 1962 0123 0E       		.uleb128 0xe
 1963 0124 3A       		.uleb128 0x3a
 1964 0125 0B       		.uleb128 0xb
 1965 0126 3B       		.uleb128 0x3b
 1966 0127 05       		.uleb128 0x5
 1967 0128 49       		.uleb128 0x49
 1968 0129 13       		.uleb128 0x13
 1969 012a 00       		.byte	0
 1970 012b 00       		.byte	0
 1971 012c 19       		.uleb128 0x19
 1972 012d 0B       		.uleb128 0xb
 1973 012e 01       		.byte	0x1
 1974 012f 00       		.byte	0
 1975 0130 00       		.byte	0
 1976 0131 1A       		.uleb128 0x1a
 1977 0132 2E       		.uleb128 0x2e
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 56


 1978 0133 01       		.byte	0x1
 1979 0134 3F       		.uleb128 0x3f
 1980 0135 19       		.uleb128 0x19
 1981 0136 03       		.uleb128 0x3
 1982 0137 0E       		.uleb128 0xe
 1983 0138 3A       		.uleb128 0x3a
 1984 0139 0B       		.uleb128 0xb
 1985 013a 3B       		.uleb128 0x3b
 1986 013b 0B       		.uleb128 0xb
 1987 013c 27       		.uleb128 0x27
 1988 013d 19       		.uleb128 0x19
 1989 013e 11       		.uleb128 0x11
 1990 013f 01       		.uleb128 0x1
 1991 0140 12       		.uleb128 0x12
 1992 0141 06       		.uleb128 0x6
 1993 0142 40       		.uleb128 0x40
 1994 0143 18       		.uleb128 0x18
 1995 0144 9642     		.uleb128 0x2116
 1996 0146 19       		.uleb128 0x19
 1997 0147 01       		.uleb128 0x1
 1998 0148 13       		.uleb128 0x13
 1999 0149 00       		.byte	0
 2000 014a 00       		.byte	0
 2001 014b 1B       		.uleb128 0x1b
 2002 014c 05       		.uleb128 0x5
 2003 014d 00       		.byte	0
 2004 014e 03       		.uleb128 0x3
 2005 014f 08       		.uleb128 0x8
 2006 0150 3A       		.uleb128 0x3a
 2007 0151 0B       		.uleb128 0xb
 2008 0152 3B       		.uleb128 0x3b
 2009 0153 0B       		.uleb128 0xb
 2010 0154 49       		.uleb128 0x49
 2011 0155 13       		.uleb128 0x13
 2012 0156 02       		.uleb128 0x2
 2013 0157 17       		.uleb128 0x17
 2014 0158 00       		.byte	0
 2015 0159 00       		.byte	0
 2016 015a 1C       		.uleb128 0x1c
 2017 015b 34       		.uleb128 0x34
 2018 015c 00       		.byte	0
 2019 015d 03       		.uleb128 0x3
 2020 015e 0E       		.uleb128 0xe
 2021 015f 3A       		.uleb128 0x3a
 2022 0160 0B       		.uleb128 0xb
 2023 0161 3B       		.uleb128 0x3b
 2024 0162 0B       		.uleb128 0xb
 2025 0163 49       		.uleb128 0x49
 2026 0164 13       		.uleb128 0x13
 2027 0165 00       		.byte	0
 2028 0166 00       		.byte	0
 2029 0167 1D       		.uleb128 0x1d
 2030 0168 34       		.uleb128 0x34
 2031 0169 00       		.byte	0
 2032 016a 03       		.uleb128 0x3
 2033 016b 0E       		.uleb128 0xe
 2034 016c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 57


 2035 016d 0B       		.uleb128 0xb
 2036 016e 3B       		.uleb128 0x3b
 2037 016f 0B       		.uleb128 0xb
 2038 0170 49       		.uleb128 0x49
 2039 0171 13       		.uleb128 0x13
 2040 0172 02       		.uleb128 0x2
 2041 0173 17       		.uleb128 0x17
 2042 0174 00       		.byte	0
 2043 0175 00       		.byte	0
 2044 0176 1E       		.uleb128 0x1e
 2045 0177 1D       		.uleb128 0x1d
 2046 0178 01       		.byte	0x1
 2047 0179 31       		.uleb128 0x31
 2048 017a 13       		.uleb128 0x13
 2049 017b 11       		.uleb128 0x11
 2050 017c 01       		.uleb128 0x1
 2051 017d 12       		.uleb128 0x12
 2052 017e 06       		.uleb128 0x6
 2053 017f 58       		.uleb128 0x58
 2054 0180 0B       		.uleb128 0xb
 2055 0181 59       		.uleb128 0x59
 2056 0182 0B       		.uleb128 0xb
 2057 0183 01       		.uleb128 0x1
 2058 0184 13       		.uleb128 0x13
 2059 0185 00       		.byte	0
 2060 0186 00       		.byte	0
 2061 0187 1F       		.uleb128 0x1f
 2062 0188 05       		.uleb128 0x5
 2063 0189 00       		.byte	0
 2064 018a 31       		.uleb128 0x31
 2065 018b 13       		.uleb128 0x13
 2066 018c 00       		.byte	0
 2067 018d 00       		.byte	0
 2068 018e 20       		.uleb128 0x20
 2069 018f 05       		.uleb128 0x5
 2070 0190 00       		.byte	0
 2071 0191 31       		.uleb128 0x31
 2072 0192 13       		.uleb128 0x13
 2073 0193 02       		.uleb128 0x2
 2074 0194 17       		.uleb128 0x17
 2075 0195 00       		.byte	0
 2076 0196 00       		.byte	0
 2077 0197 21       		.uleb128 0x21
 2078 0198 0B       		.uleb128 0xb
 2079 0199 01       		.byte	0x1
 2080 019a 11       		.uleb128 0x11
 2081 019b 01       		.uleb128 0x1
 2082 019c 12       		.uleb128 0x12
 2083 019d 06       		.uleb128 0x6
 2084 019e 00       		.byte	0
 2085 019f 00       		.byte	0
 2086 01a0 22       		.uleb128 0x22
 2087 01a1 34       		.uleb128 0x34
 2088 01a2 00       		.byte	0
 2089 01a3 31       		.uleb128 0x31
 2090 01a4 13       		.uleb128 0x13
 2091 01a5 1C       		.uleb128 0x1c
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 58


 2092 01a6 0B       		.uleb128 0xb
 2093 01a7 00       		.byte	0
 2094 01a8 00       		.byte	0
 2095 01a9 23       		.uleb128 0x23
 2096 01aa 34       		.uleb128 0x34
 2097 01ab 00       		.byte	0
 2098 01ac 31       		.uleb128 0x31
 2099 01ad 13       		.uleb128 0x13
 2100 01ae 02       		.uleb128 0x2
 2101 01af 17       		.uleb128 0x17
 2102 01b0 00       		.byte	0
 2103 01b1 00       		.byte	0
 2104 01b2 24       		.uleb128 0x24
 2105 01b3 0B       		.uleb128 0xb
 2106 01b4 01       		.byte	0x1
 2107 01b5 11       		.uleb128 0x11
 2108 01b6 01       		.uleb128 0x1
 2109 01b7 12       		.uleb128 0x12
 2110 01b8 06       		.uleb128 0x6
 2111 01b9 01       		.uleb128 0x1
 2112 01ba 13       		.uleb128 0x13
 2113 01bb 00       		.byte	0
 2114 01bc 00       		.byte	0
 2115 01bd 25       		.uleb128 0x25
 2116 01be 898201   		.uleb128 0x4109
 2117 01c1 00       		.byte	0
 2118 01c2 11       		.uleb128 0x11
 2119 01c3 01       		.uleb128 0x1
 2120 01c4 31       		.uleb128 0x31
 2121 01c5 13       		.uleb128 0x13
 2122 01c6 00       		.byte	0
 2123 01c7 00       		.byte	0
 2124 01c8 26       		.uleb128 0x26
 2125 01c9 898201   		.uleb128 0x4109
 2126 01cc 01       		.byte	0x1
 2127 01cd 11       		.uleb128 0x11
 2128 01ce 01       		.uleb128 0x1
 2129 01cf 31       		.uleb128 0x31
 2130 01d0 13       		.uleb128 0x13
 2131 01d1 00       		.byte	0
 2132 01d2 00       		.byte	0
 2133 01d3 27       		.uleb128 0x27
 2134 01d4 8A8201   		.uleb128 0x410a
 2135 01d7 00       		.byte	0
 2136 01d8 02       		.uleb128 0x2
 2137 01d9 18       		.uleb128 0x18
 2138 01da 9142     		.uleb128 0x2111
 2139 01dc 18       		.uleb128 0x18
 2140 01dd 00       		.byte	0
 2141 01de 00       		.byte	0
 2142 01df 28       		.uleb128 0x28
 2143 01e0 34       		.uleb128 0x34
 2144 01e1 00       		.byte	0
 2145 01e2 03       		.uleb128 0x3
 2146 01e3 0E       		.uleb128 0xe
 2147 01e4 3A       		.uleb128 0x3a
 2148 01e5 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 59


 2149 01e6 3B       		.uleb128 0x3b
 2150 01e7 0B       		.uleb128 0xb
 2151 01e8 49       		.uleb128 0x49
 2152 01e9 13       		.uleb128 0x13
 2153 01ea 02       		.uleb128 0x2
 2154 01eb 18       		.uleb128 0x18
 2155 01ec 00       		.byte	0
 2156 01ed 00       		.byte	0
 2157 01ee 29       		.uleb128 0x29
 2158 01ef 35       		.uleb128 0x35
 2159 01f0 00       		.byte	0
 2160 01f1 49       		.uleb128 0x49
 2161 01f2 13       		.uleb128 0x13
 2162 01f3 00       		.byte	0
 2163 01f4 00       		.byte	0
 2164 01f5 2A       		.uleb128 0x2a
 2165 01f6 34       		.uleb128 0x34
 2166 01f7 00       		.byte	0
 2167 01f8 03       		.uleb128 0x3
 2168 01f9 0E       		.uleb128 0xe
 2169 01fa 3A       		.uleb128 0x3a
 2170 01fb 0B       		.uleb128 0xb
 2171 01fc 3B       		.uleb128 0x3b
 2172 01fd 0B       		.uleb128 0xb
 2173 01fe 49       		.uleb128 0x49
 2174 01ff 13       		.uleb128 0x13
 2175 0200 3F       		.uleb128 0x3f
 2176 0201 19       		.uleb128 0x19
 2177 0202 3C       		.uleb128 0x3c
 2178 0203 19       		.uleb128 0x19
 2179 0204 00       		.byte	0
 2180 0205 00       		.byte	0
 2181 0206 2B       		.uleb128 0x2b
 2182 0207 34       		.uleb128 0x34
 2183 0208 00       		.byte	0
 2184 0209 03       		.uleb128 0x3
 2185 020a 0E       		.uleb128 0xe
 2186 020b 3A       		.uleb128 0x3a
 2187 020c 0B       		.uleb128 0xb
 2188 020d 3B       		.uleb128 0x3b
 2189 020e 05       		.uleb128 0x5
 2190 020f 49       		.uleb128 0x49
 2191 0210 13       		.uleb128 0x13
 2192 0211 3F       		.uleb128 0x3f
 2193 0212 19       		.uleb128 0x19
 2194 0213 3C       		.uleb128 0x3c
 2195 0214 19       		.uleb128 0x19
 2196 0215 00       		.byte	0
 2197 0216 00       		.byte	0
 2198 0217 2C       		.uleb128 0x2c
 2199 0218 2E       		.uleb128 0x2e
 2200 0219 00       		.byte	0
 2201 021a 3F       		.uleb128 0x3f
 2202 021b 19       		.uleb128 0x19
 2203 021c 3C       		.uleb128 0x3c
 2204 021d 19       		.uleb128 0x19
 2205 021e 6E       		.uleb128 0x6e
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 60


 2206 021f 0E       		.uleb128 0xe
 2207 0220 03       		.uleb128 0x3
 2208 0221 0E       		.uleb128 0xe
 2209 0222 3A       		.uleb128 0x3a
 2210 0223 0B       		.uleb128 0xb
 2211 0224 3B       		.uleb128 0x3b
 2212 0225 05       		.uleb128 0x5
 2213 0226 00       		.byte	0
 2214 0227 00       		.byte	0
 2215 0228 2D       		.uleb128 0x2d
 2216 0229 2E       		.uleb128 0x2e
 2217 022a 00       		.byte	0
 2218 022b 3F       		.uleb128 0x3f
 2219 022c 19       		.uleb128 0x19
 2220 022d 3C       		.uleb128 0x3c
 2221 022e 19       		.uleb128 0x19
 2222 022f 6E       		.uleb128 0x6e
 2223 0230 0E       		.uleb128 0xe
 2224 0231 03       		.uleb128 0x3
 2225 0232 0E       		.uleb128 0xe
 2226 0233 3A       		.uleb128 0x3a
 2227 0234 0B       		.uleb128 0xb
 2228 0235 3B       		.uleb128 0x3b
 2229 0236 0B       		.uleb128 0xb
 2230 0237 00       		.byte	0
 2231 0238 00       		.byte	0
 2232 0239 00       		.byte	0
 2233              		.section	.debug_loc,"",%progbits
 2234              	.Ldebug_loc0:
 2235              	.LLST0:
 2236 0000 00000000 		.4byte	.LVL0
 2237 0004 22000000 		.4byte	.LVL8
 2238 0008 0100     		.2byte	0x1
 2239 000a 50       		.byte	0x50
 2240 000b 22000000 		.4byte	.LVL8
 2241 000f 8C000000 		.4byte	.LFE165
 2242 0013 0400     		.2byte	0x4
 2243 0015 F3       		.byte	0xf3
 2244 0016 01       		.uleb128 0x1
 2245 0017 50       		.byte	0x50
 2246 0018 9F       		.byte	0x9f
 2247 0019 00000000 		.4byte	0
 2248 001d 00000000 		.4byte	0
 2249              	.LLST1:
 2250 0021 12000000 		.4byte	.LVL5
 2251 0025 16000000 		.4byte	.LVL7
 2252 0029 0100     		.2byte	0x1
 2253 002b 53       		.byte	0x53
 2254 002c 00000000 		.4byte	0
 2255 0030 00000000 		.4byte	0
 2256              	.LLST2:
 2257 0034 28000000 		.4byte	.LVL10
 2258 0038 50000000 		.4byte	.LVL13
 2259 003c 0100     		.2byte	0x1
 2260 003e 54       		.byte	0x54
 2261 003f 5E000000 		.4byte	.LVL16
 2262 0043 60000000 		.4byte	.LVL17
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 61


 2263 0047 0100     		.2byte	0x1
 2264 0049 54       		.byte	0x54
 2265 004a 6A000000 		.4byte	.LVL18
 2266 004e 82000000 		.4byte	.LVL21
 2267 0052 0100     		.2byte	0x1
 2268 0054 54       		.byte	0x54
 2269 0055 00000000 		.4byte	0
 2270 0059 00000000 		.4byte	0
 2271              	.LLST3:
 2272 005d 14000000 		.4byte	.LVL6
 2273 0061 50000000 		.4byte	.LVL13
 2274 0065 0200     		.2byte	0x2
 2275 0067 30       		.byte	0x30
 2276 0068 9F       		.byte	0x9f
 2277 0069 50000000 		.4byte	.LVL13
 2278 006d 5E000000 		.4byte	.LVL16
 2279 0071 0100     		.2byte	0x1
 2280 0073 54       		.byte	0x54
 2281 0074 5E000000 		.4byte	.LVL16
 2282 0078 60000000 		.4byte	.LVL17
 2283 007c 0200     		.2byte	0x2
 2284 007e 30       		.byte	0x30
 2285 007f 9F       		.byte	0x9f
 2286 0080 60000000 		.4byte	.LVL17
 2287 0084 6A000000 		.4byte	.LVL18
 2288 0088 0100     		.2byte	0x1
 2289 008a 54       		.byte	0x54
 2290 008b 00000000 		.4byte	0
 2291 008f 00000000 		.4byte	0
 2292              	.LLST4:
 2293 0093 48000000 		.4byte	.LVL12
 2294 0097 6A000000 		.4byte	.LVL18
 2295 009b 0100     		.2byte	0x1
 2296 009d 55       		.byte	0x55
 2297 009e 00000000 		.4byte	0
 2298 00a2 00000000 		.4byte	0
 2299              	.LLST5:
 2300 00a6 50000000 		.4byte	.LVL13
 2301 00aa 59000000 		.4byte	.LVL14-1
 2302 00ae 0700     		.2byte	0x7
 2303 00b0 74       		.byte	0x74
 2304 00b1 00       		.sleb128 0
 2305 00b2 32       		.byte	0x32
 2306 00b3 24       		.byte	0x24
 2307 00b4 75       		.byte	0x75
 2308 00b5 00       		.sleb128 0
 2309 00b6 22       		.byte	0x22
 2310 00b7 00000000 		.4byte	0
 2311 00bb 00000000 		.4byte	0
 2312              	.LLST6:
 2313 00bf 6A000000 		.4byte	.LVL18
 2314 00c3 7A000000 		.4byte	.LVL19
 2315 00c7 0300     		.2byte	0x3
 2316 00c9 09       		.byte	0x9
 2317 00ca FF       		.byte	0xff
 2318 00cb 9F       		.byte	0x9f
 2319 00cc 00000000 		.4byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 62


 2320 00d0 00000000 		.4byte	0
 2321              	.LLST7:
 2322 00d4 00000000 		.4byte	.LVL22
 2323 00d8 2E000000 		.4byte	.LVL29
 2324 00dc 0100     		.2byte	0x1
 2325 00de 50       		.byte	0x50
 2326 00df 2E000000 		.4byte	.LVL29
 2327 00e3 98000000 		.4byte	.LFE166
 2328 00e7 0400     		.2byte	0x4
 2329 00e9 F3       		.byte	0xf3
 2330 00ea 01       		.uleb128 0x1
 2331 00eb 50       		.byte	0x50
 2332 00ec 9F       		.byte	0x9f
 2333 00ed 00000000 		.4byte	0
 2334 00f1 00000000 		.4byte	0
 2335              	.LLST8:
 2336 00f5 1E000000 		.4byte	.LVL26
 2337 00f9 22000000 		.4byte	.LVL28
 2338 00fd 0100     		.2byte	0x1
 2339 00ff 53       		.byte	0x53
 2340 0100 00000000 		.4byte	0
 2341 0104 00000000 		.4byte	0
 2342              	.LLST9:
 2343 0108 34000000 		.4byte	.LVL31
 2344 010c 5C000000 		.4byte	.LVL34
 2345 0110 0100     		.2byte	0x1
 2346 0112 54       		.byte	0x54
 2347 0113 6A000000 		.4byte	.LVL37
 2348 0117 6C000000 		.4byte	.LVL38
 2349 011b 0100     		.2byte	0x1
 2350 011d 54       		.byte	0x54
 2351 011e 76000000 		.4byte	.LVL39
 2352 0122 90000000 		.4byte	.LVL42
 2353 0126 0100     		.2byte	0x1
 2354 0128 54       		.byte	0x54
 2355 0129 00000000 		.4byte	0
 2356 012d 00000000 		.4byte	0
 2357              	.LLST10:
 2358 0131 20000000 		.4byte	.LVL27
 2359 0135 5C000000 		.4byte	.LVL34
 2360 0139 0200     		.2byte	0x2
 2361 013b 30       		.byte	0x30
 2362 013c 9F       		.byte	0x9f
 2363 013d 5C000000 		.4byte	.LVL34
 2364 0141 6A000000 		.4byte	.LVL37
 2365 0145 0100     		.2byte	0x1
 2366 0147 54       		.byte	0x54
 2367 0148 6A000000 		.4byte	.LVL37
 2368 014c 6C000000 		.4byte	.LVL38
 2369 0150 0200     		.2byte	0x2
 2370 0152 30       		.byte	0x30
 2371 0153 9F       		.byte	0x9f
 2372 0154 6C000000 		.4byte	.LVL38
 2373 0158 76000000 		.4byte	.LVL39
 2374 015c 0100     		.2byte	0x1
 2375 015e 54       		.byte	0x54
 2376 015f 00000000 		.4byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 63


 2377 0163 00000000 		.4byte	0
 2378              	.LLST11:
 2379 0167 54000000 		.4byte	.LVL33
 2380 016b 76000000 		.4byte	.LVL39
 2381 016f 0100     		.2byte	0x1
 2382 0171 55       		.byte	0x55
 2383 0172 00000000 		.4byte	0
 2384 0176 00000000 		.4byte	0
 2385              	.LLST12:
 2386 017a 5C000000 		.4byte	.LVL34
 2387 017e 65000000 		.4byte	.LVL35-1
 2388 0182 0700     		.2byte	0x7
 2389 0184 74       		.byte	0x74
 2390 0185 00       		.sleb128 0
 2391 0186 32       		.byte	0x32
 2392 0187 24       		.byte	0x24
 2393 0188 75       		.byte	0x75
 2394 0189 00       		.sleb128 0
 2395 018a 22       		.byte	0x22
 2396 018b 00000000 		.4byte	0
 2397 018f 00000000 		.4byte	0
 2398              	.LLST13:
 2399 0193 76000000 		.4byte	.LVL39
 2400 0197 86000000 		.4byte	.LVL40
 2401 019b 0300     		.2byte	0x3
 2402 019d 09       		.byte	0x9
 2403 019e FF       		.byte	0xff
 2404 019f 9F       		.byte	0x9f
 2405 01a0 00000000 		.4byte	0
 2406 01a4 00000000 		.4byte	0
 2407              		.section	.debug_aranges,"",%progbits
 2408 0000 24000000 		.4byte	0x24
 2409 0004 0200     		.2byte	0x2
 2410 0006 00000000 		.4byte	.Ldebug_info0
 2411 000a 04       		.byte	0x4
 2412 000b 00       		.byte	0
 2413 000c 0000     		.2byte	0
 2414 000e 0000     		.2byte	0
 2415 0010 00000000 		.4byte	.LFB165
 2416 0014 8C000000 		.4byte	.LFE165-.LFB165
 2417 0018 00000000 		.4byte	.LFB166
 2418 001c 98000000 		.4byte	.LFE166-.LFB166
 2419 0020 00000000 		.4byte	0
 2420 0024 00000000 		.4byte	0
 2421              		.section	.debug_ranges,"",%progbits
 2422              	.Ldebug_ranges0:
 2423 0000 00000000 		.4byte	.LFB165
 2424 0004 8C000000 		.4byte	.LFE165
 2425 0008 00000000 		.4byte	.LFB166
 2426 000c 98000000 		.4byte	.LFE166
 2427 0010 00000000 		.4byte	0
 2428 0014 00000000 		.4byte	0
 2429              		.section	.debug_line,"",%progbits
 2430              	.Ldebug_line0:
 2431 0000 F9030000 		.section	.debug_str,"MS",%progbits,1
 2431      02007803 
 2431      00000201 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 64


 2431      FB0E0D00 
 2431      01010101 
 2432              	.LASF121:
 2433 0000 656E6769 		.ascii	"engine\000"
 2433      6E6500
 2434              	.LASF129:
 2435 0007 534F5F53 		.ascii	"SO_SPEED_signal\000"
 2435      50454544 
 2435      5F736967 
 2435      6E616C00 
 2436              	.LASF108:
 2437 0017 5254455F 		.ascii	"RTE_SC_SPEED_get\000"
 2437      53435F53 
 2437      50454544 
 2437      5F676574 
 2437      00
 2438              	.LASF49:
 2439 0028 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 2439      52524F52 
 2439      5F4E4F54 
 2439      5F4D4154 
 2439      434800
 2440              	.LASF111:
 2441 003b 5254455F 		.ascii	"RTE_SC_ENGINE_set\000"
 2441      53435F45 
 2441      4E47494E 
 2441      455F7365 
 2441      7400
 2442              	.LASF45:
 2443 004d 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 2443      52524F52 
 2443      5F575249 
 2443      54455F4F 
 2443      4E4C5900 
 2444              	.LASF27:
 2445 0061 4576656E 		.ascii	"EventMaskType\000"
 2445      744D6173 
 2445      6B547970 
 2445      6500
 2446              	.LASF109:
 2447 006f 7369676E 		.ascii	"signal\000"
 2447      616C00
 2448              	.LASF132:
 2449 0076 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 2449      6F5F5365 
 2449      74457665 
 2449      6E7400
 2450              	.LASF11:
 2451 0085 756E7369 		.ascii	"unsigned int\000"
 2451      676E6564 
 2451      20696E74 
 2451      00
 2452              	.LASF33:
 2453 0092 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 2453      52524F52 
 2453      5F5A4552 
 2453      4F00
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 65


 2454              	.LASF65:
 2455 00a0 57415443 		.ascii	"WATCHDOG_RUN_CALCCONTROL\000"
 2455      48444F47 
 2455      5F52554E 
 2455      5F43414C 
 2455      43434F4E 
 2456              	.LASF5:
 2457 00b9 5F5F696E 		.ascii	"__int32_t\000"
 2457      7433325F 
 2457      7400
 2458              	.LASF32:
 2459 00c3 52435F45 		.ascii	"RC_ERROR_NULL\000"
 2459      52524F52 
 2459      5F4E554C 
 2459      4C00
 2460              	.LASF41:
 2461 00d1 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 2461      52524F52 
 2461      5F54494D 
 2461      455F4F55 
 2461      5400
 2462              	.LASF53:
 2463 00e3 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 2463      52524F52 
 2463      5F494E56 
 2463      414C4944 
 2463      5F535441 
 2464              	.LASF23:
 2465 00fa 45455F46 		.ascii	"EE_FREG\000"
 2465      52454700 
 2466              	.LASF78:
 2467 0102 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 2467      64617465 
 2467      5461736B 
 2467      436F756E 
 2467      7400
 2468              	.LASF118:
 2469 0114 6572726F 		.ascii	"error\000"
 2469      7200
 2470              	.LASF119:
 2471 011a 4F555450 		.ascii	"OUTPUT_setEngine_run\000"
 2471      55545F73 
 2471      6574456E 
 2471      67696E65 
 2471      5F72756E 
 2472              	.LASF95:
 2473 012f 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 2473      4E47494E 
 2473      455F6366 
 2473      675F7300 
 2474              	.LASF96:
 2475 013f 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 2475      4E47494E 
 2475      455F6366 
 2475      675F7400 
 2476              	.LASF122:
 2477 014f 6272616B 		.ascii	"brake\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 66


 2477      6500
 2478              	.LASF117:
 2479 0155 73706565 		.ascii	"speed\000"
 2479      6400
 2480              	.LASF116:
 2481 015b 5254455F 		.ascii	"RTE_SC_BRAKELIGHT_set\000"
 2481      53435F42 
 2481      52414B45 
 2481      4C494748 
 2481      545F7365 
 2482              	.LASF14:
 2483 0171 75696E74 		.ascii	"uint32_t\000"
 2483      33325F74 
 2483      00
 2484              	.LASF31:
 2485 017a 52435F45 		.ascii	"RC_ERROR\000"
 2485      52524F52 
 2485      00
 2486              	.LASF48:
 2487 0183 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 2487      52524F52 
 2487      5F575249 
 2487      54455F46 
 2487      41494C53 
 2488              	.LASF15:
 2489 0198 666C6F61 		.ascii	"float\000"
 2489      7400
 2490              	.LASF112:
 2491 019e 7461736B 		.ascii	"taskNum\000"
 2491      4E756D00 
 2492              	.LASF42:
 2493 01a6 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 2493      52524F52 
 2493      5F4F5045 
 2493      4E00
 2494              	.LASF10:
 2495 01b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2495      206C6F6E 
 2495      6720756E 
 2495      7369676E 
 2495      65642069 
 2496              	.LASF103:
 2497 01cb 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_s\000"
 2497      52414B45 
 2497      4C494748 
 2497      545F6366 
 2497      675F7300 
 2498              	.LASF25:
 2499 01df 5461736B 		.ascii	"TaskType\000"
 2499      54797065 
 2499      00
 2500              	.LASF26:
 2501 01e8 5265736F 		.ascii	"ResourceType\000"
 2501      75726365 
 2501      54797065 
 2501      00
 2502              	.LASF24:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 67


 2503 01f5 45455F54 		.ascii	"EE_TID\000"
 2503      494400
 2504              	.LASF58:
 2505 01fc 5254455F 		.ascii	"RTE_event\000"
 2505      6576656E 
 2505      7400
 2506              	.LASF87:
 2507 0206 76616C75 		.ascii	"value\000"
 2507      6500
 2508              	.LASF125:
 2509 020c 45455F41 		.ascii	"EE_ApplicationMode\000"
 2509      70706C69 
 2509      63617469 
 2509      6F6E4D6F 
 2509      646500
 2510              	.LASF136:
 2511 021f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2511      43313120 
 2511      352E342E 
 2511      31203230 
 2511      31363036 
 2512 0252 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2512      20726576 
 2512      6973696F 
 2512      6E203233 
 2512      37373135 
 2513 0285 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2513      66756E63 
 2513      74696F6E 
 2513      2D736563 
 2513      74696F6E 
 2514              	.LASF68:
 2515 02ad 57415443 		.ascii	"WATCHDOG_RUN_LOGGING\000"
 2515      48444F47 
 2515      5F52554E 
 2515      5F4C4F47 
 2515      47494E47 
 2516              	.LASF18:
 2517 02c2 73697A65 		.ascii	"size_t\000"
 2517      5F7400
 2518              	.LASF43:
 2519 02c9 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 2519      52524F52 
 2519      5F434845 
 2519      434B5355 
 2519      4D00
 2520              	.LASF133:
 2521 02db 45455F6F 		.ascii	"EE_oo_GetResource\000"
 2521      6F5F4765 
 2521      74526573 
 2521      6F757263 
 2521      6500
 2522              	.LASF107:
 2523 02ed 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 2523      53435F53 
 2523      50454544 
 2523      5F676574 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 68


 2523      41676500 
 2524              	.LASF38:
 2525 0301 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 2525      52524F52 
 2525      5F425546 
 2525      4645525F 
 2525      46554C4C 
 2526              	.LASF85:
 2527 0316 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 2527      50454544 
 2527      5F636667 
 2527      5F7300
 2528              	.LASF83:
 2529 0325 7265736F 		.ascii	"resource\000"
 2529      75726365 
 2529      00
 2530              	.LASF82:
 2531 032e 7265736F 		.ascii	"resourceActive\000"
 2531      75726365 
 2531      41637469 
 2531      766500
 2532              	.LASF110:
 2533 033d 5254455F 		.ascii	"RTE_SC_ENGINE_pushPort\000"
 2533      53435F45 
 2533      4E47494E 
 2533      455F7075 
 2533      7368506F 
 2534              	.LASF89:
 2535 0354 70536967 		.ascii	"pSigCfg\000"
 2535      43666700 
 2536              	.LASF70:
 2537 035c 53435F53 		.ascii	"SC_SPEED_data_t\000"
 2537      50454544 
 2537      5F646174 
 2537      615F7400 
 2538              	.LASF17:
 2539 036c 63686172 		.ascii	"char\000"
 2539      00
 2540              	.LASF30:
 2541 0371 52435F53 		.ascii	"RC_SUCCESS\000"
 2541      55434345 
 2541      535300
 2542              	.LASF115:
 2543 037c 5254455F 		.ascii	"RTE_SC_BRAKELIGHT_pushPort\000"
 2543      53435F42 
 2543      52414B45 
 2543      4C494748 
 2543      545F7075 
 2544              	.LASF29:
 2545 0397 626F6F6C 		.ascii	"boolean_t\000"
 2545      65616E5F 
 2545      7400
 2546              	.LASF86:
 2547 03a1 53435F53 		.ascii	"SC_SPEED_s\000"
 2547      50454544 
 2547      5F7300
 2548              	.LASF90:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 69


 2549 03ac 53435F53 		.ascii	"SC_SPEED_t\000"
 2549      50454544 
 2549      5F7400
 2550              	.LASF76:
 2551 03b7 65764F6E 		.ascii	"evOnUpdate\000"
 2551      55706461 
 2551      746500
 2552              	.LASF92:
 2553 03c2 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 2553      4E47494E 
 2553      455F6461 
 2553      74615F74 
 2553      00
 2554              	.LASF51:
 2555 03d3 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 2555      52524F52 
 2555      5F424144 
 2555      5F444154 
 2555      4100
 2556              	.LASF12:
 2557 03e5 75696E74 		.ascii	"uint8_t\000"
 2557      385F7400 
 2558              	.LASF88:
 2559 03ed 73746174 		.ascii	"status\000"
 2559      757300
 2560              	.LASF137:
 2561 03f4 736F7572 		.ascii	"source\\asw\\swc_output.c\000"
 2561      63655C61 
 2561      73775C73 
 2561      77635F6F 
 2561      75747075 
 2562              	.LASF102:
 2563 040c 53435F42 		.ascii	"SC_BRAKELIGHT_driverOut_t\000"
 2563      52414B45 
 2563      4C494748 
 2563      545F6472 
 2563      69766572 
 2564              	.LASF101:
 2565 0426 53435F42 		.ascii	"SC_BRAKELIGHT_driverIn_t\000"
 2565      52414B45 
 2565      4C494748 
 2565      545F6472 
 2565      69766572 
 2566              	.LASF9:
 2567 043f 6C6F6E67 		.ascii	"long long int\000"
 2567      206C6F6E 
 2567      6720696E 
 2567      7400
 2568              	.LASF74:
 2569 044d 696E4472 		.ascii	"inDriver\000"
 2569      69766572 
 2569      00
 2570              	.LASF80:
 2571 0456 6F6E4572 		.ascii	"onErrorTaskCount\000"
 2571      726F7254 
 2571      61736B43 
 2571      6F756E74 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 70


 2571      00
 2572              	.LASF52:
 2573 0467 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 2573      52524F52 
 2573      5F43414E 
 2573      43454C45 
 2573      4400
 2574              	.LASF94:
 2575 0479 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 2575      4E47494E 
 2575      455F6472 
 2575      69766572 
 2575      4F75745F 
 2576              	.LASF97:
 2577 048f 53435F45 		.ascii	"SC_ENGINE_s\000"
 2577      4E47494E 
 2577      455F7300 
 2578              	.LASF98:
 2579 049b 53435F45 		.ascii	"SC_ENGINE_t\000"
 2579      4E47494E 
 2579      455F7400 
 2580              	.LASF67:
 2581 04a7 57415443 		.ascii	"WATCHDOG_RUN_SETBRAKELIGHT\000"
 2581      48444F47 
 2581      5F52554E 
 2581      5F534554 
 2581      4252414B 
 2582              	.LASF73:
 2583 04c2 6D5F7370 		.ascii	"m_speedValue\000"
 2583      65656456 
 2583      616C7565 
 2583      00
 2584              	.LASF93:
 2585 04cf 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 2585      4E47494E 
 2585      455F6472 
 2585      69766572 
 2585      496E5F74 
 2586              	.LASF37:
 2587 04e4 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 2587      52524F52 
 2587      5F554E44 
 2587      45525255 
 2587      4E00
 2588              	.LASF99:
 2589 04f6 6D5F6272 		.ascii	"m_brakeValue\000"
 2589      616B6556 
 2589      616C7565 
 2589      00
 2590              	.LASF34:
 2591 0503 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 2591      52524F52 
 2591      5F4D454D 
 2591      4F525900 
 2592              	.LASF75:
 2593 0513 6F757444 		.ascii	"outDriver\000"
 2593      72697665 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 71


 2593      7200
 2594              	.LASF114:
 2595 051d 7461736B 		.ascii	"task\000"
 2595      00
 2596              	.LASF138:
 2597 0522 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EAA\\RTE_Gaspedal_Watc"
 2597      73657273 
 2597      5C7A616B 
 2597      69735C44 
 2597      6F63756D 
 2598 0550 68646F67 		.ascii	"hdog\\LabOne\\Gaspedal_Watchdog.cydsn\000"
 2598      5C4C6162 
 2598      4F6E655C 
 2598      47617370 
 2598      6564616C 
 2599              	.LASF19:
 2600 0574 6C6F6E67 		.ascii	"long double\000"
 2600      20646F75 
 2600      626C6500 
 2601              	.LASF62:
 2602 0580 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 2602      5349474E 
 2602      414C5354 
 2602      41545553 
 2602      5F494E56 
 2603              	.LASF135:
 2604 0599 57445F41 		.ascii	"WD_Alive\000"
 2604      6C697665 
 2604      00
 2605              	.LASF100:
 2606 05a2 53435F42 		.ascii	"SC_BRAKELIGHT_data_t\000"
 2606      52414B45 
 2606      4C494748 
 2606      545F6461 
 2606      74615F74 
 2607              	.LASF21:
 2608 05b7 45455F55 		.ascii	"EE_UINT32\000"
 2608      494E5433 
 2608      3200
 2609              	.LASF44:
 2610 05c1 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 2610      52524F52 
 2610      5F524541 
 2610      445F4F4E 
 2610      4C5900
 2611              	.LASF40:
 2612 05d4 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 2612      52524F52 
 2612      5F425553 
 2612      5900
 2613              	.LASF50:
 2614 05e2 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 2614      52524F52 
 2614      5F424144 
 2614      5F504152 
 2614      414D00
 2615              	.LASF2:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 72


 2616 05f5 73686F72 		.ascii	"short int\000"
 2616      7420696E 
 2616      7400
 2617              	.LASF64:
 2618 05ff 57415443 		.ascii	"WATCHDOG_RUN_READJOYSTICK\000"
 2618      48444F47 
 2618      5F52554E 
 2618      5F524541 
 2618      444A4F59 
 2619              	.LASF6:
 2620 0619 6C6F6E67 		.ascii	"long int\000"
 2620      20696E74 
 2620      00
 2621              	.LASF128:
 2622 0622 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2622      52784275 
 2622      66666572 
 2622      00
 2623              	.LASF134:
 2624 062f 45455F6F 		.ascii	"EE_oo_ReleaseResource\000"
 2624      6F5F5265 
 2624      6C656173 
 2624      65526573 
 2624      6F757263 
 2625              	.LASF55:
 2626 0645 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 2626      52524F52 
 2626      5F4E4F54 
 2626      5F494D50 
 2626      4C454D45 
 2627              	.LASF46:
 2628 065e 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 2628      52524F52 
 2628      5F494E56 
 2628      414C4944 
 2628      00
 2629              	.LASF4:
 2630 066f 5F5F7569 		.ascii	"__uint8_t\000"
 2630      6E74385F 
 2630      7400
 2631              	.LASF104:
 2632 0679 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_t\000"
 2632      52414B45 
 2632      4C494748 
 2632      545F6366 
 2632      675F7400 
 2633              	.LASF61:
 2634 068d 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 2634      5349474E 
 2634      414C5354 
 2634      41545553 
 2634      5F56414C 
 2635              	.LASF127:
 2636 06a4 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2636      52515F6E 
 2636      65737469 
 2636      6E675F6C 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 73


 2636      6576656C 
 2637              	.LASF47:
 2638 06b9 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 2638      52524F52 
 2638      5F524541 
 2638      445F4641 
 2638      494C5300 
 2639              	.LASF106:
 2640 06cd 53435F42 		.ascii	"SC_BRAKELIGHT_t\000"
 2640      52414B45 
 2640      4C494748 
 2640      545F7400 
 2641              	.LASF22:
 2642 06dd 45455F55 		.ascii	"EE_UREG\000"
 2642      52454700 
 2643              	.LASF20:
 2644 06e5 45455F49 		.ascii	"EE_INT32\000"
 2644      4E543332 
 2644      00
 2645              	.LASF28:
 2646 06ee 73697A65 		.ascii	"sizetype\000"
 2646      74797065 
 2646      00
 2647              	.LASF84:
 2648 06f7 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 2648      50454544 
 2648      5F636667 
 2648      5F7400
 2649              	.LASF105:
 2650 0706 53435F42 		.ascii	"SC_BRAKELIGHT_s\000"
 2650      52414B45 
 2650      4C494748 
 2650      545F7300 
 2651              	.LASF8:
 2652 0716 6C6F6E67 		.ascii	"long unsigned int\000"
 2652      20756E73 
 2652      69676E65 
 2652      6420696E 
 2652      7400
 2653              	.LASF57:
 2654 0728 5461736B 		.ascii	"TaskTypeArray\000"
 2654      54797065 
 2654      41727261 
 2654      7900
 2655              	.LASF56:
 2656 0736 52435F74 		.ascii	"RC_t\000"
 2656      00
 2657              	.LASF13:
 2658 073b 696E7433 		.ascii	"int32_t\000"
 2658      325F7400 
 2659              	.LASF130:
 2660 0743 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 2660      4E47494E 
 2660      455F7369 
 2660      676E616C 
 2660      00
 2661              	.LASF36:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 74


 2662 0754 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 2662      52524F52 
 2662      5F4F5645 
 2662      5252554E 
 2662      00
 2663              	.LASF1:
 2664 0765 756E7369 		.ascii	"unsigned char\000"
 2664      676E6564 
 2664      20636861 
 2664      7200
 2665              	.LASF7:
 2666 0773 5F5F7569 		.ascii	"__uint32_t\000"
 2666      6E743332 
 2666      5F7400
 2667              	.LASF113:
 2668 077e 70546173 		.ascii	"pTaskArray\000"
 2668      6B417272 
 2668      617900
 2669              	.LASF77:
 2670 0789 65764F6E 		.ascii	"evOnError\000"
 2670      4572726F 
 2670      7200
 2671              	.LASF79:
 2672 0793 6F6E5570 		.ascii	"onUpdateTasks\000"
 2672      64617465 
 2672      5461736B 
 2672      7300
 2673              	.LASF39:
 2674 07a1 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 2674      52524F52 
 2674      5F425546 
 2674      4645525F 
 2674      454D5450 
 2675              	.LASF126:
 2676 07b7 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2676      74645F65 
 2676      6E646379 
 2676      636C655F 
 2676      6E657874 
 2677              	.LASF66:
 2678 07d0 57415443 		.ascii	"WATCHDOG_RUN_SETENGINE\000"
 2678      48444F47 
 2678      5F52554E 
 2678      5F534554 
 2678      454E4749 
 2679              	.LASF54:
 2680 07e7 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 2680      52524F52 
 2680      5F554E4B 
 2680      4E4F574E 
 2680      00
 2681              	.LASF71:
 2682 07f8 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 2682      50454544 
 2682      5F647269 
 2682      76657249 
 2682      6E5F7400 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 75


 2683              	.LASF120:
 2684 080c 4F555450 		.ascii	"OUTPUT_setBrakeLight_run\000"
 2684      55545F73 
 2684      65744272 
 2684      616B654C 
 2684      69676874 
 2685              	.LASF124:
 2686 0825 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2686      6F5F4952 
 2686      515F7375 
 2686      7370656E 
 2686      645F7374 
 2687              	.LASF123:
 2688 083e 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2688      6F5F4952 
 2688      515F6469 
 2688      7361626C 
 2688      655F636F 
 2689              	.LASF81:
 2690 0856 6F6E4572 		.ascii	"onErrorTasks\000"
 2690      726F7254 
 2690      61736B73 
 2690      00
 2691              	.LASF69:
 2692 0863 57415443 		.ascii	"WATCHDOG_RUN_SYSTEM\000"
 2692      48444F47 
 2692      5F52554E 
 2692      5F535953 
 2692      54454D00 
 2693              	.LASF72:
 2694 0877 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 2694      50454544 
 2694      5F647269 
 2694      7665724F 
 2694      75745F74 
 2695              	.LASF0:
 2696 088c 7369676E 		.ascii	"signed char\000"
 2696      65642063 
 2696      68617200 
 2697              	.LASF3:
 2698 0898 73686F72 		.ascii	"short unsigned int\000"
 2698      7420756E 
 2698      7369676E 
 2698      65642069 
 2698      6E7400
 2699              	.LASF91:
 2700 08ab 6D5F656E 		.ascii	"m_engineValue\000"
 2700      67696E65 
 2700      56616C75 
 2700      6500
 2701              	.LASF60:
 2702 08b9 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 2702      5349474E 
 2702      414C5354 
 2702      41545553 
 2702      5F494E49 
 2703              	.LASF16:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\ccykLGOk.s 			page 76


 2704 08d6 646F7562 		.ascii	"double\000"
 2704      6C6500
 2705              	.LASF131:
 2706 08dd 534F5F42 		.ascii	"SO_BRAKELIGHT_signal\000"
 2706      52414B45 
 2706      4C494748 
 2706      545F7369 
 2706      676E616C 
 2707              	.LASF63:
 2708 08f2 5254455F 		.ascii	"RTE_signalStatus_t\000"
 2708      7369676E 
 2708      616C5374 
 2708      61747573 
 2708      5F7400
 2709              	.LASF59:
 2710 0905 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 2710      5349474E 
 2710      414C5354 
 2710      41545553 
 2710      5F535441 
 2711              	.LASF35:
 2712 091e 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 2712      52524F52 
 2712      5F52414E 
 2712      474500
 2713              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
