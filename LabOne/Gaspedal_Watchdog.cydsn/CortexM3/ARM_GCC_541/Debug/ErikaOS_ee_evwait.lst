ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_ee_evwait.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_WaitEvent,"ax",%progbits
  20              		.align	2
  21              		.global	EE_oo_WaitEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_WaitEvent, %function
  25              	EE_oo_WaitEvent:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_ee_evwait.c"
   1:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  41:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * CVS: $Id: ee_evwait.c,v 1.3 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  46:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #include "ErikaOS_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  53:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #include "ErikaOS_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  58:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** /* WaitEvent:
  59:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - can be called from an extended task only
  60:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - the task state is put to wait until an event in the mask has been set
  61:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - if the task blocks -> reschedulig + internal resource released
  62:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    - returns (only extended state)
  63:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_RESOURCE task occupies a resource
  64:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_ACCESS   if the task is not an extended task
  65:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        E_OS_CALLEVEL called at interrupt level
  66:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** */
  67:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  68:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  69:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifndef __PRIVATE_WAITEVENT__
  70:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  71:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** StatusType EE_oo_WaitEvent(EventMaskType Mask)
  72:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LBB86:
  40              	.LBB87:
  41              	.LBB88:
  42              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_cpu.inc"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 3


   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 4


  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 5


 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #include "ErikaOS_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 6


 172:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 7


 229:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  43              		.loc 2 260 0
  44              		.syntax unified
  45              	@ 260 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
  46 0002 EFF31084 		mrs r4, primask
  47              	@ 0 "" 2
  48              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  49              		.loc 2 261 0
  50              	@ 261 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
  51 0006 72B6     		cpsid i
  52              	@ 0 "" 2
  53              	.LVL2:
  54              		.thumb
  55              		.syntax unified
  56              	.LBE88:
  57              	.LBE87:
  58              	.LBE86:
  59              	.LBB89:
  60              	.LBB90:
  61              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 8


   6:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "ErikaOS_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 9


  63:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 10


 120:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 11


 177:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 12


 234:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     return EE_stkfirst;  
  62              		.loc 3 240 0
  63 0008 3A4B     		ldr	r3, .L14
  64 000a 1D68     		ldr	r5, [r3]
  65              	.LBE90:
  66              	.LBE89:
  67              	.LBB91:
  68              	.LBB92:
  69              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 13


  43:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  70              		.loc 4 79 0
  71 000c 3A4B     		ldr	r3, .L14+4
  72 000e 1B68     		ldr	r3, [r3]
  73              	.LBE92:
  74              	.LBE91:
  73:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   register TaskType current;
  74:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Error Value */
  75:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   register StatusType ev;
  76:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Primitive Lock Procedure */
  77:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  78:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  79:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_WAITEVENT);
  80:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  81:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_as_monitoring_the_stack();
  82:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  83:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   current = EE_stk_queryfirst();
  84:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  85:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  86:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     traceTASK_WAIT_EVENT(current, Mask)
  87:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 14


  88:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
  89:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef EE_SERVICE_PROTECTION__
  90:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  91:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  92:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       then the Operating System shall ignore the service AND shall return
  93:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  94:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
  95:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       AND is currently not inside a Category 1 ISR the Operating System module
  96:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       shall not perform the requested action (the service call shall have no
  97:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
  98:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
  99:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_oo_check_disableint_error() ) {
 100:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_DISABLEDINT;
 101:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 102:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_SERVICE_PROTECTION__ */
 103:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 104:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
 105:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check for a call at interrupt level:
 106:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****    * Note: this must be the FIRST error check!!! */
 107:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U) || (current == EE_NIL)
  75              		.loc 1 107 0
  76 0010 002B     		cmp	r3, #0
  77 0012 63D1     		bne	.L8
  78              		.loc 1 107 0 is_stmt 0 discriminator 1
  79 0014 B5F1FF3F 		cmp	r5, #-1
  80 0018 62D0     		beq	.L9
 108:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if !defined (EE_SERVICE_PROTECTION__)
 109:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 110:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 	 * check is always FALSE, hence it is not needed  */
 111:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #else
 112:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 113:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif
 114:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 115:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_CALLEVEL;
 116:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 117:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_SERVICE_PROTECTION__ */
 118:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 119:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef __OO_EXTENDED_STATUS__
 120:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifndef __OO_NO_RESOURCES__
 121:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check for busy resources */
 122:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_th_resource_last[current] != EE_UREG_MINUS1 )
  81              		.loc 1 122 0 is_stmt 1
  82 001a 384B     		ldr	r3, .L14+8
  83 001c 53F82530 		ldr	r3, [r3, r5, lsl #2]
  84 0020 B3F1FF3F 		cmp	r3, #-1
  85 0024 5ED1     		bne	.L10
 123:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 124:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_RESOURCE;
 125:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 126:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_NO_RESOURCES__ */
 127:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check if the task is an extended TASK */
 128:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_th_is_extended[current] == EE_FALSE ) {
  86              		.loc 1 128 0
  87 0026 364B     		ldr	r3, .L14+12
  88 0028 53F82530 		ldr	r3, [r3, r5, lsl #2]
  89 002c 002B     		cmp	r3, #0
  90 002e 5BD0     		beq	.L11
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 15


 129:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_ACCESS;
 130:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 131:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #ifdef EE_AS_USER_SPINLOCKS__
 132:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* [OS622]: The AUTOSAR Operating System WaitEvent API service shall check if
 133:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       it has been called while the calling TASK has occupied a spinlock.
 134:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       In extended status an error E_OS_SPINLOCK shall be returned and the TASK
 135:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****       shall not enter the wait state. (BSW4080021) */
 136:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_as_has_spinlocks_locked(current) ) {
 137:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_SPINLOCK;
 138:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 139:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 140:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* __OO_EXTENDED_STATUS__ */
 141:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 142:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 143:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 144:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 145:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* If a TASK is inside CallTrustedFunction() and TASK
 146:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      rescheduling takes place within the same OSApplication scheduling of
 147:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      other TASKs which belong to the same OS-Application as the caller needs
 148:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      to be restricted.
 149:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      EG:To assure that I CANNOT let WAIT take place in a
 150:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****         Trusted Function Call!!! */
 151:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( EE_as_Application_RAM[EE_as_active_app].
 152:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****         TrustedFunctionCallsCounter != 0U )
 153:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   {
 154:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OS_ACCESS;
 155:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 156:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 157:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 158:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   /* Check if we have to wait */
 159:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( (EE_th_event_active[current] & Mask) == 0U ) {
  91              		.loc 1 159 0
  92 0030 344B     		ldr	r3, .L14+16
  93 0032 53F82530 		ldr	r3, [r3, r5, lsl #2]
  94 0036 0342     		tst	r3, r0
  95 0038 58D1     		bne	.L12
 160:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Set the waiting mask */
 161:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_th_event_waitmask[current] = Mask;
  96              		.loc 1 161 0
  97 003a 334B     		ldr	r3, .L14+20
  98 003c 43F82500 		str	r0, [r3, r5, lsl #2]
  99              	.LBB93:
 100              	.LBB94:
 241:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 16


 255:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 17


 312:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 18


 369:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 19


 426:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* insert a task into the ready queue */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 20


 483:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 21


 540:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 22


 597:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 647:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 23


 654:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 672:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 675:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 677:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 686:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 688:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 689:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 690:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
 691:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****             the TASK */
 692:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 693:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 694:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 695:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****            back on the previous TASK contest. */
 696:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****         EE_oo_run_next_task();
 697:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       }
 698:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 699:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   }
 700:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 701:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 702:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if ( (defined(__OO_ECC1__)) || (defined(__OO_ECC2__)) ) && (defined(__MULTI__))
 703:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 704:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Prepare current Task to Block if Extended Task is configured */
 705:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_prepare_to_block(void) {
 706:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Get the current TASK */
 707:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID current = EE_stk_queryfirst();
 708:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 709:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* The task must go into the WAITING state */
 710:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_th_status[current] = WAITING;
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 24


 101              		.loc 3 710 0
 102 0040 0122     		movs	r2, #1
 103 0042 324B     		ldr	r3, .L14+24
 104 0044 43F82520 		str	r2, [r3, r5, lsl #2]
 711:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 712:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* [SWS_Os_00473]: The Operating System module shall reset a task's
 713:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 714:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       (SRS_Os_11008) */
 715:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_as_tp_stop_budget(EE_as_tp_active.active_tp_RAM_ref, EE_EXECUTION_BUDGET);
 716:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 717:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Call the Post Task Hook before change stk data structure */
 718:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_oo_call_PostTaskHook();
 719:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 720:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reset the thread priority bit in the system_ceiling */
 721:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 105              		.loc 3 721 0
 106 0048 314B     		ldr	r3, .L14+28
 107 004a 53F82500 		ldr	r0, [r3, r5, lsl #2]
 108              	.LVL3:
 109 004e 3149     		ldr	r1, .L14+32
 110 0050 0B68     		ldr	r3, [r1]
 111 0052 23EA0003 		bic	r3, r3, r0
 112 0056 0B60     		str	r3, [r1]
 722:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* The ready priority is not touched, it is not the same as Schedule! */
 723:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 724:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Reset ORTI priority */
 725:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_ORTI_set_th_priority(current, 0U);
 726:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Since the task blocks, it has to be woken up by another EE_hal_stkchange */
 728:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   EE_th_waswaiting[current] = EE_TRUE;
 113              		.loc 3 728 0
 114 0058 2F4B     		ldr	r3, .L14+36
 115 005a 43F82520 		str	r2, [r3, r5, lsl #2]
 116              	.LBB95:
 117              	.LBB96:
 469:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 118              		.loc 3 469 0
 119 005e 2F4B     		ldr	r3, .L14+40
 120 0060 53F82520 		ldr	r2, [r3, r5, lsl #2]
 121 0064 234B     		ldr	r3, .L14
 122 0066 1A60     		str	r2, [r3]
 123              	.LBE96:
 124              	.LBE95:
 125              	.LBE94:
 126              	.LBE93:
 127              	.LBB97:
 128              	.LBB98:
 729:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 730:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   /* Extract the TASK from the stacked queue */
 731:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   (void)EE_stk_getfirst();
 732:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 733:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 734:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** /* Reschedule on task blocking if Extended Task is configured */
 735:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reschedule_on_block(void)
 736:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** {
 737:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   register EE_TID nexttask;
 738:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 25


 739:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   nexttask = EE_rq_queryfirst();
 129              		.loc 3 739 0
 130 0068 FFF7FEFF 		bl	EE_rq_queryfirst
 131              	.LVL4:
 740:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   if ( (nexttask == EE_NIL) || (EE_sys_ceiling >= EE_th_ready_prio[nexttask]) ) {
 132              		.loc 3 740 0
 133 006c B0F1FF3F 		cmp	r0, #-1
 134 0070 06D0     		beq	.L3
 135 0072 2B4B     		ldr	r3, .L14+44
 136 0074 53F82020 		ldr	r2, [r3, r0, lsl #2]
 137 0078 264B     		ldr	r3, .L14+32
 138 007a 1B68     		ldr	r3, [r3]
 139 007c 9A42     		cmp	r2, r3
 140 007e 0DD8     		bhi	.L4
 141              	.L3:
 142              	.LBB99:
 143              	.LBB100:
 240:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** }
 144              		.loc 3 240 0
 145 0080 1C4B     		ldr	r3, .L14
 146 0082 1868     		ldr	r0, [r3]
 147              	.LVL5:
 148              	.LBE100:
 149              	.LBE99:
 741:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* we have to schedule an interrupted thread that is on the top
 742:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****      * of its stack; the state is already STACKED! */
 743:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     nexttask = EE_stk_queryfirst();
 744:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( nexttask != EE_NIL ) {
 150              		.loc 3 744 0
 151 0084 B0F1FF3F 		cmp	r0, #-1
 152 0088 03D0     		beq	.L5
 745:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_th_status[nexttask] = RUNNING;
 153              		.loc 3 745 0
 154 008a 0022     		movs	r2, #0
 155 008c 1F4B     		ldr	r3, .L14+24
 156 008e 43F82020 		str	r2, [r3, r0, lsl #2]
 157              	.L5:
 158              	.LVL6:
 159              	.LBB101:
 160              	.LBB102:
 161              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * combination.
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 26


  17:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 27


  74:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  */
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 28


 131:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 162              		.loc 5 154 0
 163 0092 40F00040 		orr	r0, r0, #-2147483648
 164              	.LVL7:
 165 0096 FFF7FEFF 		bl	EE_cortex_mx_change_context
 166              	.LVL8:
 167 009a 1AE0     		b	.L6
 168              	.LVL9:
 169              	.L4:
 170              	.LBE102:
 171              	.LBE101:
 746:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 747:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       traceTASK_SWITCHED_IN(nexttask, EE_th_ready_prio[nexttask]);
 748:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** #endif
 749:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 750:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Enable the TASK Timing Protection Set */
 751:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_tp_active_set_from_TASK(nexttask);
 752:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     } else {
 753:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* We are switching back to the Idle loop */
 754:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_set_execution_context( Idle_Context );
 755:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       EE_as_tp_active_start_idle();
 756:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     }
 757:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc **** 
 758:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* CONTEXT SWITCH to a previous stacked Task */
 759:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_hal_stkchange(nexttask);
 760:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****   } else { 
 761:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     /* We have to schedule a ready thread that is not yet on the stack.
 762:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        This means that the TASK set in excution for the first time or that it
 763:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****        was waiting. */
 764:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_th_status[nexttask] = RUNNING;
 172              		.loc 3 764 0
 173 009c 0021     		movs	r1, #0
 174 009e 1B4A     		ldr	r2, .L14+24
 175 00a0 42F82010 		str	r1, [r2, r0, lsl #2]
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 29


 765:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     EE_sys_ceiling |= EE_th_dispatch_prio[nexttask];
 176              		.loc 3 765 0
 177 00a4 1A4A     		ldr	r2, .L14+28
 178 00a6 52F82020 		ldr	r2, [r2, r0, lsl #2]
 179 00aa 1343     		orrs	r3, r3, r2
 180 00ac 194A     		ldr	r2, .L14+32
 181 00ae 1360     		str	r3, [r2]
 182              	.LBB103:
 183              	.LBB104:
 566:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 184              		.loc 3 566 0
 185 00b0 FFF7FEFF 		bl	EE_rq2stk_exchange
 186              	.LVL10:
 567:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 187              		.loc 3 567 0
 188 00b4 184B     		ldr	r3, .L14+36
 189 00b6 53F82030 		ldr	r3, [r3, r0, lsl #2]
 190 00ba 43B1     		cbz	r3, .L7
 569:Generated_Source\PSoC5/ErikaOS_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 191              		.loc 3 569 0
 192 00bc 0022     		movs	r2, #0
 193 00be 164B     		ldr	r3, .L14+36
 194 00c0 43F82020 		str	r2, [r3, r0, lsl #2]
 195              	.LVL11:
 196              	.LBB105:
 197              	.LBB106:
 198              		.loc 5 154 0
 199 00c4 40F00040 		orr	r0, r0, #-2147483648
 200              	.LVL12:
 201 00c8 FFF7FEFF 		bl	EE_cortex_mx_change_context
 202              	.LVL13:
 203 00cc 01E0     		b	.L6
 204              	.LVL14:
 205              	.L7:
 206              	.LBE106:
 207              	.LBE105:
 208              	.LBB107:
 209              	.LBB108:
 155:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 210              		.loc 5 167 0
 211 00ce FFF7FEFF 		bl	EE_cortex_mx_change_context
 212              	.LVL15:
 213              	.L6:
 214              	.LBE108:
 215              	.LBE107:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 30


 216              	.LBE104:
 217              	.LBE103:
 218              	.LBE98:
 219              	.LBE97:
 162:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 163:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Prepare current TASK to block */
 164:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_prepare_to_block();
 165:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 166:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* The TASK is not inserted in any queue! it will be woken
 167:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****        up by a SetEvent using a EE_hal_stkchange... */
 168:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 169:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Reschedule next TASK:
 170:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      * check if there is to schedule a ready thread or pop a preempted
 171:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****      * thread */
 172:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_reschedule_on_block();
 173:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 174:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     /* Reset the waiting mask */
 175:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_th_event_waitmask[current] = 0U;
 220              		.loc 1 175 0
 221 00d2 0020     		movs	r0, #0
 222 00d4 0C4B     		ldr	r3, .L14+20
 223 00d6 43F82500 		str	r0, [r3, r5, lsl #2]
 224              	.LVL16:
 225 00da 08E0     		b	.L2
 226              	.LVL17:
 227              	.L8:
 115:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 228              		.loc 1 115 0
 229 00dc 0220     		movs	r0, #2
 230              	.LVL18:
 231 00de 06E0     		b	.L2
 232              	.LVL19:
 233              	.L9:
 234 00e0 0220     		movs	r0, #2
 235              	.LVL20:
 236 00e2 04E0     		b	.L2
 237              	.LVL21:
 238              	.L10:
 124:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 239              		.loc 1 124 0
 240 00e4 0620     		movs	r0, #6
 241              	.LVL22:
 242 00e6 02E0     		b	.L2
 243              	.LVL23:
 244              	.L11:
 129:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else
 245              		.loc 1 129 0
 246 00e8 0120     		movs	r0, #1
 247              	.LVL24:
 248 00ea 00E0     		b	.L2
 249              	.LVL25:
 250              	.L12:
 176:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 177:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OK;
 178:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   } else {
 179:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     ev = E_OK;
 251              		.loc 1 179 0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 31


 252 00ec 0020     		movs	r0, #0
 253              	.LVL26:
 254              	.L2:
 255              	.LBB109:
 256              	.LBB110:
 257              	.LBB111:
 232:Generated_Source\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 258              		.loc 2 232 0
 259              		.syntax unified
 260              	@ 232 "Generated_Source\PSoC5\ErikaOS_cortex_mx_ee_cpu.inc" 1
 261 00ee 84F31088 		msr primask, r4
 262              	@ 0 "" 2
 263              	.LVL27:
 264              		.thumb
 265              		.syntax unified
 266              	.LBE111:
 267              	.LBE110:
 268              	.LBE109:
 180:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   }
 181:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 182:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   if ( ev != E_OK ) {
 183:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_ORTI_set_lasterror(ev);
 184:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****     EE_oo_notify_error_WaitEvent(Mask, ev);
 185:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   }
 186:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 187:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_WAITEVENT);
 188:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 189:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** 
 190:Generated_Source\PSoC5/ErikaOS_ee_evwait.c ****   return ev;
 191:Generated_Source\PSoC5/ErikaOS_ee_evwait.c **** }
 269              		.loc 1 191 0
 270 00f2 38BD     		pop	{r3, r4, r5, pc}
 271              	.L15:
 272              		.align	2
 273              	.L14:
 274 00f4 00000000 		.word	EE_stkfirst
 275 00f8 00000000 		.word	EE_IRQ_nesting_level
 276 00fc 00000000 		.word	EE_th_resource_last
 277 0100 00000000 		.word	EE_th_is_extended
 278 0104 00000000 		.word	EE_th_event_active
 279 0108 00000000 		.word	EE_th_event_waitmask
 280 010c 00000000 		.word	EE_th_status
 281 0110 00000000 		.word	EE_th_dispatch_prio
 282 0114 00000000 		.word	EE_sys_ceiling
 283 0118 00000000 		.word	EE_th_waswaiting
 284 011c 00000000 		.word	EE_th_next
 285 0120 00000000 		.word	EE_th_ready_prio
 286              		.cfi_endproc
 287              	.LFE70:
 288              		.size	EE_oo_WaitEvent, .-EE_oo_WaitEvent
 289              		.text
 290              	.Letext0:
 291              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_common_ee_types.inc"
 292              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_common.inc"
 293              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_ee_as_internal.inc"
 294              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_cortex_mx_ee_internal.inc"
 295              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_ee_oo_intfunc.inc"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 32


 296              		.section	.debug_info,"",%progbits
 297              	.Ldebug_info0:
 298 0000 56080000 		.4byte	0x856
 299 0004 0400     		.2byte	0x4
 300 0006 00000000 		.4byte	.Ldebug_abbrev0
 301 000a 04       		.byte	0x4
 302 000b 01       		.uleb128 0x1
 303 000c 52050000 		.4byte	.LASF110
 304 0010 0C       		.byte	0xc
 305 0011 75040000 		.4byte	.LASF111
 306 0015 41060000 		.4byte	.LASF112
 307 0019 00000000 		.4byte	.Ldebug_ranges0+0
 308 001d 00000000 		.4byte	0
 309 0021 00000000 		.4byte	.Ldebug_line0
 310 0025 02       		.uleb128 0x2
 311 0026 01       		.byte	0x1
 312 0027 06       		.byte	0x6
 313 0028 31010000 		.4byte	.LASF0
 314 002c 02       		.uleb128 0x2
 315 002d 01       		.byte	0x1
 316 002e 08       		.byte	0x8
 317 002f D2040000 		.4byte	.LASF1
 318 0033 02       		.uleb128 0x2
 319 0034 02       		.byte	0x2
 320 0035 05       		.byte	0x5
 321 0036 17050000 		.4byte	.LASF2
 322 003a 02       		.uleb128 0x2
 323 003b 02       		.byte	0x2
 324 003c 07       		.byte	0x7
 325 003d 65020000 		.4byte	.LASF3
 326 0041 02       		.uleb128 0x2
 327 0042 04       		.byte	0x4
 328 0043 05       		.byte	0x5
 329 0044 84010000 		.4byte	.LASF4
 330 0048 02       		.uleb128 0x2
 331 0049 04       		.byte	0x4
 332 004a 07       		.byte	0x7
 333 004b 3D020000 		.4byte	.LASF5
 334 004f 02       		.uleb128 0x2
 335 0050 08       		.byte	0x8
 336 0051 05       		.byte	0x5
 337 0052 23010000 		.4byte	.LASF6
 338 0056 02       		.uleb128 0x2
 339 0057 08       		.byte	0x8
 340 0058 07       		.byte	0x7
 341 0059 96000000 		.4byte	.LASF7
 342 005d 03       		.uleb128 0x3
 343 005e 04       		.byte	0x4
 344 005f 05       		.byte	0x5
 345 0060 696E7400 		.ascii	"int\000"
 346 0064 02       		.uleb128 0x2
 347 0065 04       		.byte	0x4
 348 0066 07       		.byte	0x7
 349 0067 20020000 		.4byte	.LASF8
 350 006b 02       		.uleb128 0x2
 351 006c 08       		.byte	0x8
 352 006d 04       		.byte	0x4
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 33


 353 006e 7F030000 		.4byte	.LASF9
 354 0072 04       		.uleb128 0x4
 355 0073 E8020000 		.4byte	.LASF10
 356 0077 06       		.byte	0x6
 357 0078 3E       		.byte	0x3e
 358 0079 2C000000 		.4byte	0x2c
 359 007d 04       		.uleb128 0x4
 360 007e 2D020000 		.4byte	.LASF11
 361 0082 06       		.byte	0x6
 362 0083 3F       		.byte	0x3f
 363 0084 25000000 		.4byte	0x25
 364 0088 04       		.uleb128 0x4
 365 0089 A0040000 		.4byte	.LASF12
 366 008d 06       		.byte	0x6
 367 008e 52       		.byte	0x52
 368 008f 3A000000 		.4byte	0x3a
 369 0093 04       		.uleb128 0x4
 370 0094 B5070000 		.4byte	.LASF13
 371 0098 06       		.byte	0x6
 372 0099 53       		.byte	0x53
 373 009a 5D000000 		.4byte	0x5d
 374 009e 04       		.uleb128 0x4
 375 009f AB070000 		.4byte	.LASF14
 376 00a3 06       		.byte	0x6
 377 00a4 54       		.byte	0x54
 378 00a5 64000000 		.4byte	0x64
 379 00a9 04       		.uleb128 0x4
 380 00aa 35020000 		.4byte	.LASF15
 381 00ae 02       		.byte	0x2
 382 00af 4D       		.byte	0x4d
 383 00b0 9E000000 		.4byte	0x9e
 384 00b4 04       		.uleb128 0x4
 385 00b5 3D080000 		.4byte	.LASF16
 386 00b9 02       		.byte	0x2
 387 00ba 4F       		.byte	0x4f
 388 00bb 9E000000 		.4byte	0x9e
 389 00bf 04       		.uleb128 0x4
 390 00c0 8A000000 		.4byte	.LASF17
 391 00c4 02       		.byte	0x2
 392 00c5 54       		.byte	0x54
 393 00c6 A9000000 		.4byte	0xa9
 394 00ca 04       		.uleb128 0x4
 395 00cb 01020000 		.4byte	.LASF18
 396 00cf 02       		.byte	0x2
 397 00d0 78       		.byte	0x78
 398 00d1 93000000 		.4byte	0x93
 399 00d5 05       		.uleb128 0x5
 400 00d6 16030000 		.4byte	.LASF19
 401 00da 07       		.byte	0x7
 402 00db 1101     		.2byte	0x111
 403 00dd 88000000 		.4byte	0x88
 404 00e1 05       		.uleb128 0x5
 405 00e2 0A010000 		.4byte	.LASF20
 406 00e6 07       		.byte	0x7
 407 00e7 F701     		.2byte	0x1f7
 408 00e9 CA000000 		.4byte	0xca
 409 00ed 05       		.uleb128 0x5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 34


 410 00ee 3D010000 		.4byte	.LASF21
 411 00f2 07       		.byte	0x7
 412 00f3 2C02     		.2byte	0x22c
 413 00f5 A9000000 		.4byte	0xa9
 414 00f9 05       		.uleb128 0x5
 415 00fa 42000000 		.4byte	.LASF22
 416 00fe 07       		.byte	0x7
 417 00ff 3502     		.2byte	0x235
 418 0101 A9000000 		.4byte	0xa9
 419 0105 05       		.uleb128 0x5
 420 0106 DB070000 		.4byte	.LASF23
 421 010a 07       		.byte	0x7
 422 010b 5D02     		.2byte	0x25d
 423 010d A9000000 		.4byte	0xa9
 424 0111 05       		.uleb128 0x5
 425 0112 F1020000 		.4byte	.LASF24
 426 0116 07       		.byte	0x7
 427 0117 6C02     		.2byte	0x26c
 428 0119 A9000000 		.4byte	0xa9
 429 011d 06       		.uleb128 0x6
 430 011e 0C       		.byte	0xc
 431 011f 07       		.byte	0x7
 432 0120 7202     		.2byte	0x272
 433 0122 4E010000 		.4byte	0x14e
 434 0126 07       		.uleb128 0x7
 435 0127 13010000 		.4byte	.LASF25
 436 012b 07       		.byte	0x7
 437 012c 7302     		.2byte	0x273
 438 012e F9000000 		.4byte	0xf9
 439 0132 00       		.byte	0
 440 0133 07       		.uleb128 0x7
 441 0134 CB030000 		.4byte	.LASF26
 442 0138 07       		.byte	0x7
 443 0139 7402     		.2byte	0x274
 444 013b F9000000 		.4byte	0xf9
 445 013f 04       		.byte	0x4
 446 0140 07       		.uleb128 0x7
 447 0141 E7010000 		.4byte	.LASF27
 448 0145 07       		.byte	0x7
 449 0146 7502     		.2byte	0x275
 450 0148 F9000000 		.4byte	0xf9
 451 014c 08       		.byte	0x8
 452 014d 00       		.byte	0
 453 014e 05       		.uleb128 0x5
 454 014f 3B050000 		.4byte	.LASF28
 455 0153 07       		.byte	0x7
 456 0154 7A02     		.2byte	0x27a
 457 0156 1D010000 		.4byte	0x11d
 458 015a 06       		.uleb128 0x6
 459 015b 08       		.byte	0x8
 460 015c 07       		.byte	0x7
 461 015d 7D02     		.2byte	0x27d
 462 015f 7E010000 		.4byte	0x17e
 463 0163 07       		.uleb128 0x7
 464 0164 08020000 		.4byte	.LASF29
 465 0168 07       		.byte	0x7
 466 0169 7E02     		.2byte	0x27e
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 35


 467 016b F9000000 		.4byte	0xf9
 468 016f 00       		.byte	0
 469 0170 07       		.uleb128 0x7
 470 0171 3B060000 		.4byte	.LASF30
 471 0175 07       		.byte	0x7
 472 0176 7F02     		.2byte	0x27f
 473 0178 05010000 		.4byte	0x105
 474 017c 04       		.byte	0x4
 475 017d 00       		.byte	0
 476 017e 05       		.uleb128 0x5
 477 017f 58010000 		.4byte	.LASF31
 478 0183 07       		.byte	0x7
 479 0184 8002     		.2byte	0x280
 480 0186 5A010000 		.4byte	0x15a
 481 018a 08       		.uleb128 0x8
 482 018b 01       		.byte	0x1
 483 018c 2C000000 		.4byte	0x2c
 484 0190 07       		.byte	0x7
 485 0191 8A02     		.2byte	0x28a
 486 0193 A4010000 		.4byte	0x1a4
 487 0197 09       		.uleb128 0x9
 488 0198 F0040000 		.4byte	.LASF32
 489 019c 00       		.byte	0
 490 019d 09       		.uleb128 0x9
 491 019e AA040000 		.4byte	.LASF33
 492 01a2 01       		.byte	0x1
 493 01a3 00       		.byte	0
 494 01a4 05       		.uleb128 0x5
 495 01a5 90020000 		.4byte	.LASF34
 496 01a9 07       		.byte	0x7
 497 01aa 8D02     		.2byte	0x28d
 498 01ac 8A010000 		.4byte	0x18a
 499 01b0 05       		.uleb128 0x5
 500 01b1 D2020000 		.4byte	.LASF35
 501 01b5 07       		.byte	0x7
 502 01b6 9002     		.2byte	0x290
 503 01b8 A4010000 		.4byte	0x1a4
 504 01bc 06       		.uleb128 0x6
 505 01bd 0C       		.byte	0xc
 506 01be 07       		.byte	0x7
 507 01bf 9402     		.2byte	0x294
 508 01c1 EB010000 		.4byte	0x1eb
 509 01c5 0A       		.uleb128 0xa
 510 01c6 6300     		.ascii	"c\000"
 511 01c8 07       		.byte	0x7
 512 01c9 9602     		.2byte	0x296
 513 01cb 11010000 		.4byte	0x111
 514 01cf 00       		.byte	0
 515 01d0 07       		.uleb128 0x7
 516 01d1 E5060000 		.4byte	.LASF36
 517 01d5 07       		.byte	0x7
 518 01d6 9802     		.2byte	0x298
 519 01d8 05010000 		.4byte	0x105
 520 01dc 04       		.byte	0x4
 521 01dd 07       		.uleb128 0x7
 522 01de 60020000 		.4byte	.LASF37
 523 01e2 07       		.byte	0x7
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 36


 524 01e3 9A02     		.2byte	0x29a
 525 01e5 B0010000 		.4byte	0x1b0
 526 01e9 08       		.byte	0x8
 527 01ea 00       		.byte	0
 528 01eb 05       		.uleb128 0x5
 529 01ec EC000000 		.4byte	.LASF38
 530 01f0 07       		.byte	0x7
 531 01f1 9B02     		.2byte	0x29b
 532 01f3 BC010000 		.4byte	0x1bc
 533 01f7 06       		.uleb128 0x6
 534 01f8 10       		.byte	0x10
 535 01f9 07       		.byte	0x7
 536 01fa 9F02     		.2byte	0x29f
 537 01fc 35020000 		.4byte	0x235
 538 0200 07       		.uleb128 0x7
 539 0201 05040000 		.4byte	.LASF39
 540 0205 07       		.byte	0x7
 541 0206 A002     		.2byte	0x2a0
 542 0208 BF000000 		.4byte	0xbf
 543 020c 00       		.byte	0
 544 020d 07       		.uleb128 0x7
 545 020e D2070000 		.4byte	.LASF40
 546 0212 07       		.byte	0x7
 547 0213 A102     		.2byte	0x2a1
 548 0215 F9000000 		.4byte	0xf9
 549 0219 04       		.byte	0x4
 550 021a 07       		.uleb128 0x7
 551 021b E6000000 		.4byte	.LASF41
 552 021f 07       		.byte	0x7
 553 0220 A202     		.2byte	0x2a2
 554 0222 F9000000 		.4byte	0xf9
 555 0226 08       		.byte	0x8
 556 0227 07       		.uleb128 0x7
 557 0228 3D000000 		.4byte	.LASF42
 558 022c 07       		.byte	0x7
 559 022d A302     		.2byte	0x2a3
 560 022f 05010000 		.4byte	0x105
 561 0233 0C       		.byte	0xc
 562 0234 00       		.byte	0
 563 0235 05       		.uleb128 0x5
 564 0236 31040000 		.4byte	.LASF43
 565 023a 07       		.byte	0x7
 566 023b A402     		.2byte	0x2a4
 567 023d F7010000 		.4byte	0x1f7
 568 0241 05       		.uleb128 0x5
 569 0242 C2000000 		.4byte	.LASF44
 570 0246 07       		.byte	0x7
 571 0247 2103     		.2byte	0x321
 572 0249 2C000000 		.4byte	0x2c
 573 024d 08       		.uleb128 0x8
 574 024e 01       		.byte	0x1
 575 024f 2C000000 		.4byte	0x2c
 576 0253 07       		.byte	0x7
 577 0254 5904     		.2byte	0x459
 578 0256 9D020000 		.4byte	0x29d
 579 025a 09       		.uleb128 0x9
 580 025b D8030000 		.4byte	.LASF45
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 37


 581 025f 00       		.byte	0
 582 0260 09       		.uleb128 0x9
 583 0261 EF030000 		.4byte	.LASF46
 584 0265 01       		.byte	0x1
 585 0266 09       		.uleb128 0x9
 586 0267 00000000 		.4byte	.LASF47
 587 026b 02       		.byte	0x2
 588 026c 09       		.uleb128 0x9
 589 026d 3A030000 		.4byte	.LASF48
 590 0271 03       		.byte	0x3
 591 0272 09       		.uleb128 0x9
 592 0273 68030000 		.4byte	.LASF49
 593 0277 04       		.byte	0x4
 594 0278 09       		.uleb128 0x9
 595 0279 26030000 		.4byte	.LASF50
 596 027d 05       		.byte	0x5
 597 027e 09       		.uleb128 0x9
 598 027f 6F010000 		.4byte	.LASF51
 599 0283 06       		.byte	0x6
 600 0284 09       		.uleb128 0x9
 601 0285 93060000 		.4byte	.LASF52
 602 0289 07       		.byte	0x7
 603 028a 09       		.uleb128 0x9
 604 028b ED070000 		.4byte	.LASF53
 605 028f 08       		.byte	0x8
 606 0290 09       		.uleb128 0x9
 607 0291 AF020000 		.4byte	.LASF54
 608 0295 09       		.byte	0x9
 609 0296 09       		.uleb128 0x9
 610 0297 9E030000 		.4byte	.LASF55
 611 029b 0A       		.byte	0xa
 612 029c 00       		.byte	0
 613 029d 05       		.uleb128 0x5
 614 029e C7060000 		.4byte	.LASF56
 615 02a2 07       		.byte	0x7
 616 02a3 6504     		.2byte	0x465
 617 02a5 4D020000 		.4byte	0x24d
 618 02a9 0B       		.uleb128 0xb
 619 02aa 13080000 		.4byte	.LASF113
 620 02ae 02       		.byte	0x2
 621 02af F1       		.byte	0xf1
 622 02b0 B4000000 		.4byte	0xb4
 623 02b4 03       		.byte	0x3
 624 02b5 C5020000 		.4byte	0x2c5
 625 02b9 0C       		.uleb128 0xc
 626 02ba 2E070000 		.4byte	.LASF75
 627 02be 02       		.byte	0x2
 628 02bf F4       		.byte	0xf4
 629 02c0 B4000000 		.4byte	0xb4
 630 02c4 00       		.byte	0
 631 02c5 0D       		.uleb128 0xd
 632 02c6 BB040000 		.4byte	.LASF57
 633 02ca 02       		.byte	0x2
 634 02cb DC       		.byte	0xdc
 635 02cc 03       		.byte	0x3
 636 02cd DB020000 		.4byte	0x2db
 637 02d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 38


 638 02d2 6600     		.ascii	"f\000"
 639 02d4 02       		.byte	0x2
 640 02d5 DC       		.byte	0xdc
 641 02d6 B4000000 		.4byte	0xb4
 642 02da 00       		.byte	0
 643 02db 0F       		.uleb128 0xf
 644 02dc 34070000 		.4byte	.LASF58
 645 02e0 07       		.byte	0x7
 646 02e1 9703     		.2byte	0x397
 647 02e3 03       		.byte	0x3
 648 02e4 F5020000 		.4byte	0x2f5
 649 02e8 10       		.uleb128 0x10
 650 02e9 73727600 		.ascii	"srv\000"
 651 02ed 07       		.byte	0x7
 652 02ee 9703     		.2byte	0x397
 653 02f0 72000000 		.4byte	0x72
 654 02f4 00       		.byte	0
 655 02f5 0F       		.uleb128 0xf
 656 02f6 11060000 		.4byte	.LASF59
 657 02fa 07       		.byte	0x7
 658 02fb 8404     		.2byte	0x484
 659 02fd 03       		.byte	0x3
 660 02fe 0F030000 		.4byte	0x30f
 661 0302 10       		.uleb128 0x10
 662 0303 63747800 		.ascii	"ctx\000"
 663 0307 07       		.byte	0x7
 664 0308 8504     		.2byte	0x485
 665 030a 9D020000 		.4byte	0x29d
 666 030e 00       		.byte	0
 667 030f 11       		.uleb128 0x11
 668 0310 8D010000 		.4byte	.LASF63
 669 0314 03       		.byte	0x3
 670 0315 D301     		.2byte	0x1d3
 671 0317 CA000000 		.4byte	0xca
 672 031b 03       		.byte	0x3
 673 031c 0F       		.uleb128 0xf
 674 031d F3060000 		.4byte	.LASF60
 675 0321 07       		.byte	0x7
 676 0322 D303     		.2byte	0x3d3
 677 0324 03       		.byte	0x3
 678 0325 42030000 		.4byte	0x342
 679 0329 12       		.uleb128 0x12
 680 032a ED060000 		.4byte	.LASF61
 681 032e 07       		.byte	0x7
 682 032f D303     		.2byte	0x3d3
 683 0331 CA000000 		.4byte	0xca
 684 0335 12       		.uleb128 0x12
 685 0336 C6030000 		.4byte	.LASF62
 686 033a 07       		.byte	0x7
 687 033b D303     		.2byte	0x3d3
 688 033d A9000000 		.4byte	0xa9
 689 0341 00       		.byte	0
 690 0342 13       		.uleb128 0x13
 691 0343 0A040000 		.4byte	.LASF66
 692 0347 03       		.byte	0x3
 693 0348 9A01     		.2byte	0x19a
 694 034a 03       		.byte	0x3
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 39


 695 034b 14       		.uleb128 0x14
 696 034c 0E020000 		.4byte	.LASF64
 697 0350 03       		.byte	0x3
 698 0351 EE       		.byte	0xee
 699 0352 CA000000 		.4byte	0xca
 700 0356 03       		.byte	0x3
 701 0357 0D       		.uleb128 0xd
 702 0358 48070000 		.4byte	.LASF65
 703 035c 05       		.byte	0x5
 704 035d 98       		.byte	0x98
 705 035e 03       		.byte	0x3
 706 035f 6F030000 		.4byte	0x36f
 707 0363 0E       		.uleb128 0xe
 708 0364 74696400 		.ascii	"tid\000"
 709 0368 05       		.byte	0x5
 710 0369 98       		.byte	0x98
 711 036a CA000000 		.4byte	0xca
 712 036e 00       		.byte	0
 713 036f 13       		.uleb128 0x13
 714 0370 4F040000 		.4byte	.LASF67
 715 0374 03       		.byte	0x3
 716 0375 8D01     		.2byte	0x18d
 717 0377 03       		.byte	0x3
 718 0378 0D       		.uleb128 0xd
 719 0379 AD000000 		.4byte	.LASF68
 720 037d 05       		.byte	0x5
 721 037e A5       		.byte	0xa5
 722 037f 03       		.byte	0x3
 723 0380 90030000 		.4byte	0x390
 724 0384 0E       		.uleb128 0xe
 725 0385 74696400 		.ascii	"tid\000"
 726 0389 05       		.byte	0x5
 727 038a A5       		.byte	0xa5
 728 038b CA000000 		.4byte	0xca
 729 038f 00       		.byte	0
 730 0390 0F       		.uleb128 0xf
 731 0391 A7060000 		.4byte	.LASF69
 732 0395 07       		.byte	0x7
 733 0396 D203     		.2byte	0x3d2
 734 0398 03       		.byte	0x3
 735 0399 AA030000 		.4byte	0x3aa
 736 039d 10       		.uleb128 0x10
 737 039e 746D7000 		.ascii	"tmp\000"
 738 03a2 07       		.byte	0x7
 739 03a3 D203     		.2byte	0x3d2
 740 03a5 CA000000 		.4byte	0xca
 741 03a9 00       		.byte	0
 742 03aa 14       		.uleb128 0x14
 743 03ab 59070000 		.4byte	.LASF70
 744 03af 04       		.byte	0x4
 745 03b0 4D       		.byte	0x4d
 746 03b1 A9000000 		.4byte	0xa9
 747 03b5 03       		.byte	0x3
 748 03b6 13       		.uleb128 0x13
 749 03b7 AB030000 		.4byte	.LASF71
 750 03bb 08       		.byte	0x8
 751 03bc AB01     		.2byte	0x1ab
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 40


 752 03be 03       		.byte	0x3
 753 03bf 0F       		.uleb128 0xf
 754 03c0 67000000 		.4byte	.LASF72
 755 03c4 07       		.byte	0x7
 756 03c5 A303     		.2byte	0x3a3
 757 03c7 03       		.byte	0x3
 758 03c8 D8030000 		.4byte	0x3d8
 759 03cc 10       		.uleb128 0x10
 760 03cd 696400   		.ascii	"id\000"
 761 03d0 07       		.byte	0x7
 762 03d1 A303     		.2byte	0x3a3
 763 03d3 72000000 		.4byte	0x72
 764 03d7 00       		.byte	0
 765 03d8 14       		.uleb128 0x14
 766 03d9 10070000 		.4byte	.LASF73
 767 03dd 09       		.byte	0x9
 768 03de 60       		.byte	0x60
 769 03df B4000000 		.4byte	0xb4
 770 03e3 03       		.byte	0x3
 771 03e4 0F       		.uleb128 0xf
 772 03e5 FA050000 		.4byte	.LASF74
 773 03e9 03       		.byte	0x3
 774 03ea C102     		.2byte	0x2c1
 775 03ec 03       		.byte	0x3
 776 03ed FE030000 		.4byte	0x3fe
 777 03f1 15       		.uleb128 0x15
 778 03f2 E7030000 		.4byte	.LASF76
 779 03f6 03       		.byte	0x3
 780 03f7 C302     		.2byte	0x2c3
 781 03f9 CA000000 		.4byte	0xca
 782 03fd 00       		.byte	0
 783 03fe 0D       		.uleb128 0xd
 784 03ff 21000000 		.4byte	.LASF77
 785 0403 09       		.byte	0x9
 786 0404 68       		.byte	0x68
 787 0405 03       		.byte	0x3
 788 0406 14040000 		.4byte	0x414
 789 040a 0E       		.uleb128 0xe
 790 040b 6600     		.ascii	"f\000"
 791 040d 09       		.byte	0x9
 792 040e 68       		.byte	0x68
 793 040f B4000000 		.4byte	0xb4
 794 0413 00       		.byte	0
 795 0414 0F       		.uleb128 0xf
 796 0415 9D010000 		.4byte	.LASF78
 797 0419 07       		.byte	0x7
 798 041a A803     		.2byte	0x3a8
 799 041c 03       		.byte	0x3
 800 041d 2D040000 		.4byte	0x42d
 801 0421 10       		.uleb128 0x10
 802 0422 696400   		.ascii	"id\000"
 803 0425 07       		.byte	0x7
 804 0426 A803     		.2byte	0x3a8
 805 0428 72000000 		.4byte	0x72
 806 042c 00       		.byte	0
 807 042d 0F       		.uleb128 0xf
 808 042e E0050000 		.4byte	.LASF79
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 41


 809 0432 03       		.byte	0x3
 810 0433 DF02     		.2byte	0x2df
 811 0435 03       		.byte	0x3
 812 0436 47040000 		.4byte	0x447
 813 043a 15       		.uleb128 0x15
 814 043b FC030000 		.4byte	.LASF80
 815 043f 03       		.byte	0x3
 816 0440 E102     		.2byte	0x2e1
 817 0442 CA000000 		.4byte	0xca
 818 0446 00       		.byte	0
 819 0447 0F       		.uleb128 0xf
 820 0448 BE070000 		.4byte	.LASF81
 821 044c 03       		.byte	0x3
 822 044d 3202     		.2byte	0x232
 823 044f 03       		.byte	0x3
 824 0450 61040000 		.4byte	0x461
 825 0454 16       		.uleb128 0x16
 826 0455 746D7000 		.ascii	"tmp\000"
 827 0459 03       		.byte	0x3
 828 045a 3402     		.2byte	0x234
 829 045c E1000000 		.4byte	0xe1
 830 0460 00       		.byte	0
 831 0461 17       		.uleb128 0x17
 832 0462 E0040000 		.4byte	.LASF114
 833 0466 01       		.byte	0x1
 834 0467 47       		.byte	0x47
 835 0468 41020000 		.4byte	0x241
 836 046c 00000000 		.4byte	.LFB70
 837 0470 24010000 		.4byte	.LFE70-.LFB70
 838 0474 01       		.uleb128 0x1
 839 0475 9C       		.byte	0x9c
 840 0476 50060000 		.4byte	0x650
 841 047a 18       		.uleb128 0x18
 842 047b 0B070000 		.4byte	.LASF115
 843 047f 01       		.byte	0x1
 844 0480 47       		.byte	0x47
 845 0481 ED000000 		.4byte	0xed
 846 0485 00000000 		.4byte	.LLST0
 847 0489 0C       		.uleb128 0xc
 848 048a E7030000 		.4byte	.LASF76
 849 048e 01       		.byte	0x1
 850 048f 49       		.byte	0x49
 851 0490 E1000000 		.4byte	0xe1
 852 0494 19       		.uleb128 0x19
 853 0495 657600   		.ascii	"ev\000"
 854 0498 01       		.byte	0x1
 855 0499 4B       		.byte	0x4b
 856 049a 41020000 		.4byte	0x241
 857 049e 9E000000 		.4byte	.LLST1
 858 04a2 1A       		.uleb128 0x1a
 859 04a3 36050000 		.4byte	.LASF82
 860 04a7 01       		.byte	0x1
 861 04a8 4D       		.byte	0x4d
 862 04a9 B4000000 		.4byte	0xb4
 863 04ad 01       		.uleb128 0x1
 864 04ae 54       		.byte	0x54
 865 04af 1B       		.uleb128 0x1b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 42


 866 04b0 D8030000 		.4byte	0x3d8
 867 04b4 02000000 		.4byte	.LBB86
 868 04b8 06000000 		.4byte	.LBE86-.LBB86
 869 04bc 01       		.byte	0x1
 870 04bd 4D       		.byte	0x4d
 871 04be E6040000 		.4byte	0x4e6
 872 04c2 1C       		.uleb128 0x1c
 873 04c3 A9020000 		.4byte	0x2a9
 874 04c7 02000000 		.4byte	.LBB87
 875 04cb 06000000 		.4byte	.LBE87-.LBB87
 876 04cf 09       		.byte	0x9
 877 04d0 62       		.byte	0x62
 878 04d1 1D       		.uleb128 0x1d
 879 04d2 02000000 		.4byte	.LBB88
 880 04d6 06000000 		.4byte	.LBE88-.LBB88
 881 04da 1E       		.uleb128 0x1e
 882 04db B9020000 		.4byte	0x2b9
 883 04df BD000000 		.4byte	.LLST2
 884 04e3 00       		.byte	0
 885 04e4 00       		.byte	0
 886 04e5 00       		.byte	0
 887 04e6 1F       		.uleb128 0x1f
 888 04e7 4B030000 		.4byte	0x34b
 889 04eb 08000000 		.4byte	.LBB89
 890 04ef 04000000 		.4byte	.LBE89-.LBB89
 891 04f3 01       		.byte	0x1
 892 04f4 53       		.byte	0x53
 893 04f5 1F       		.uleb128 0x1f
 894 04f6 AA030000 		.4byte	0x3aa
 895 04fa 0C000000 		.4byte	.LBB91
 896 04fe 04000000 		.4byte	.LBE91-.LBB91
 897 0502 01       		.byte	0x1
 898 0503 6B       		.byte	0x6b
 899 0504 1B       		.uleb128 0x1b
 900 0505 E4030000 		.4byte	0x3e4
 901 0509 40000000 		.4byte	.LBB93
 902 050d 28000000 		.4byte	.LBE93-.LBB93
 903 0511 01       		.byte	0x1
 904 0512 A4       		.byte	0xa4
 905 0513 37050000 		.4byte	0x537
 906 0517 1D       		.uleb128 0x1d
 907 0518 40000000 		.4byte	.LBB94
 908 051c 28000000 		.4byte	.LBE94-.LBB94
 909 0520 20       		.uleb128 0x20
 910 0521 F1030000 		.4byte	0x3f1
 911 0525 21       		.uleb128 0x21
 912 0526 0F030000 		.4byte	0x30f
 913 052a 5E000000 		.4byte	.LBB95
 914 052e 0A000000 		.4byte	.LBE95-.LBB95
 915 0532 03       		.byte	0x3
 916 0533 DB02     		.2byte	0x2db
 917 0535 00       		.byte	0
 918 0536 00       		.byte	0
 919 0537 1B       		.uleb128 0x1b
 920 0538 2D040000 		.4byte	0x42d
 921 053c 68000000 		.4byte	.LBB97
 922 0540 6A000000 		.4byte	.LBE97-.LBB97
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 43


 923 0544 01       		.byte	0x1
 924 0545 AC       		.byte	0xac
 925 0546 1D060000 		.4byte	0x61d
 926 054a 1D       		.uleb128 0x1d
 927 054b 68000000 		.4byte	.LBB98
 928 054f 6A000000 		.4byte	.LBE98-.LBB98
 929 0553 1E       		.uleb128 0x1e
 930 0554 3A040000 		.4byte	0x43a
 931 0558 D0000000 		.4byte	.LLST3
 932 055c 21       		.uleb128 0x21
 933 055d 4B030000 		.4byte	0x34b
 934 0561 80000000 		.4byte	.LBB99
 935 0565 04000000 		.4byte	.LBE99-.LBB99
 936 0569 03       		.byte	0x3
 937 056a E702     		.2byte	0x2e7
 938 056c 22       		.uleb128 0x22
 939 056d 57030000 		.4byte	0x357
 940 0571 92000000 		.4byte	.LBB101
 941 0575 0A000000 		.4byte	.LBE101-.LBB101
 942 0579 03       		.byte	0x3
 943 057a F702     		.2byte	0x2f7
 944 057c 93050000 		.4byte	0x593
 945 0580 23       		.uleb128 0x23
 946 0581 63030000 		.4byte	0x363
 947 0585 EE000000 		.4byte	.LLST4
 948 0589 24       		.uleb128 0x24
 949 058a 9A000000 		.4byte	.LVL8
 950 058e 36080000 		.4byte	0x836
 951 0592 00       		.byte	0
 952 0593 22       		.uleb128 0x22
 953 0594 47040000 		.4byte	0x447
 954 0598 B0000000 		.4byte	.LBB103
 955 059c 22000000 		.4byte	.LBE103-.LBB103
 956 05a0 03       		.byte	0x3
 957 05a1 0703     		.2byte	0x307
 958 05a3 12060000 		.4byte	0x612
 959 05a7 1D       		.uleb128 0x1d
 960 05a8 B0000000 		.4byte	.LBB104
 961 05ac 22000000 		.4byte	.LBE104-.LBB104
 962 05b0 1E       		.uleb128 0x1e
 963 05b1 54040000 		.4byte	0x454
 964 05b5 01010000 		.4byte	.LLST5
 965 05b9 22       		.uleb128 0x22
 966 05ba 57030000 		.4byte	0x357
 967 05be C4000000 		.4byte	.LBB105
 968 05c2 0A000000 		.4byte	.LBE105-.LBB105
 969 05c6 03       		.byte	0x3
 970 05c7 3C02     		.2byte	0x23c
 971 05c9 E0050000 		.4byte	0x5e0
 972 05cd 23       		.uleb128 0x23
 973 05ce 63030000 		.4byte	0x363
 974 05d2 1F010000 		.4byte	.LLST6
 975 05d6 24       		.uleb128 0x24
 976 05d7 CC000000 		.4byte	.LVL13
 977 05db 36080000 		.4byte	0x836
 978 05df 00       		.byte	0
 979 05e0 22       		.uleb128 0x22
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 44


 980 05e1 78030000 		.4byte	0x378
 981 05e5 CE000000 		.4byte	.LBB107
 982 05e9 04000000 		.4byte	.LBE107-.LBB107
 983 05ed 03       		.byte	0x3
 984 05ee 3F02     		.2byte	0x23f
 985 05f0 07060000 		.4byte	0x607
 986 05f4 23       		.uleb128 0x23
 987 05f5 84030000 		.4byte	0x384
 988 05f9 32010000 		.4byte	.LLST7
 989 05fd 24       		.uleb128 0x24
 990 05fe D2000000 		.4byte	.LVL15
 991 0602 36080000 		.4byte	0x836
 992 0606 00       		.byte	0
 993 0607 24       		.uleb128 0x24
 994 0608 B4000000 		.4byte	.LVL10
 995 060c 41080000 		.4byte	0x841
 996 0610 00       		.byte	0
 997 0611 00       		.byte	0
 998 0612 24       		.uleb128 0x24
 999 0613 6C000000 		.4byte	.LVL4
 1000 0617 4D080000 		.4byte	0x84d
 1001 061b 00       		.byte	0
 1002 061c 00       		.byte	0
 1003 061d 1C       		.uleb128 0x1c
 1004 061e FE030000 		.4byte	0x3fe
 1005 0622 EE000000 		.4byte	.LBB109
 1006 0626 04000000 		.4byte	.LBE109-.LBB109
 1007 062a 01       		.byte	0x1
 1008 062b BC       		.byte	0xbc
 1009 062c 23       		.uleb128 0x23
 1010 062d 0A040000 		.4byte	0x40a
 1011 0631 45010000 		.4byte	.LLST8
 1012 0635 1C       		.uleb128 0x1c
 1013 0636 C5020000 		.4byte	0x2c5
 1014 063a EE000000 		.4byte	.LBB110
 1015 063e 04000000 		.4byte	.LBE110-.LBB110
 1016 0642 09       		.byte	0x9
 1017 0643 6A       		.byte	0x6a
 1018 0644 23       		.uleb128 0x23
 1019 0645 D1020000 		.4byte	0x2d1
 1020 0649 45010000 		.4byte	.LLST8
 1021 064d 00       		.byte	0
 1022 064e 00       		.byte	0
 1023 064f 00       		.byte	0
 1024 0650 25       		.uleb128 0x25
 1025 0651 96070000 		.4byte	.LASF83
 1026 0655 04       		.byte	0x4
 1027 0656 44       		.byte	0x44
 1028 0657 A9000000 		.4byte	0xa9
 1029 065b 25       		.uleb128 0x25
 1030 065c CE010000 		.4byte	.LASF84
 1031 0660 05       		.byte	0x5
 1032 0661 48       		.byte	0x48
 1033 0662 CA000000 		.4byte	0xca
 1034 0666 26       		.uleb128 0x26
 1035 0667 7D060000 		.4byte	0x67d
 1036 066b 76060000 		.4byte	0x676
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 45


 1037 066f 27       		.uleb128 0x27
 1038 0670 76060000 		.4byte	0x676
 1039 0674 04       		.byte	0x4
 1040 0675 00       		.byte	0
 1041 0676 02       		.uleb128 0x2
 1042 0677 04       		.byte	0x4
 1043 0678 07       		.byte	0x7
 1044 0679 5F030000 		.4byte	.LASF85
 1045 067d 28       		.uleb128 0x28
 1046 067e A9000000 		.4byte	0xa9
 1047 0682 25       		.uleb128 0x25
 1048 0683 02080000 		.4byte	.LASF86
 1049 0687 07       		.byte	0x7
 1050 0688 B2       		.byte	0xb2
 1051 0689 8D060000 		.4byte	0x68d
 1052 068d 28       		.uleb128 0x28
 1053 068e 66060000 		.4byte	0x666
 1054 0692 25       		.uleb128 0x25
 1055 0693 82070000 		.4byte	.LASF87
 1056 0697 07       		.byte	0x7
 1057 0698 B3       		.byte	0xb3
 1058 0699 9D060000 		.4byte	0x69d
 1059 069d 28       		.uleb128 0x28
 1060 069e 66060000 		.4byte	0x666
 1061 06a2 26       		.uleb128 0x26
 1062 06a3 A9000000 		.4byte	0xa9
 1063 06a7 B2060000 		.4byte	0x6b2
 1064 06ab 27       		.uleb128 0x27
 1065 06ac 76060000 		.4byte	0x676
 1066 06b0 04       		.byte	0x4
 1067 06b1 00       		.byte	0
 1068 06b2 25       		.uleb128 0x25
 1069 06b3 C5020000 		.4byte	.LASF88
 1070 06b7 07       		.byte	0x7
 1071 06b8 CA       		.byte	0xca
 1072 06b9 A2060000 		.4byte	0x6a2
 1073 06bd 26       		.uleb128 0x26
 1074 06be CA000000 		.4byte	0xca
 1075 06c2 CD060000 		.4byte	0x6cd
 1076 06c6 27       		.uleb128 0x27
 1077 06c7 76060000 		.4byte	0x676
 1078 06cb 04       		.byte	0x4
 1079 06cc 00       		.byte	0
 1080 06cd 25       		.uleb128 0x25
 1081 06ce F9040000 		.4byte	.LASF89
 1082 06d2 07       		.byte	0x7
 1083 06d3 D2       		.byte	0xd2
 1084 06d4 BD060000 		.4byte	0x6bd
 1085 06d8 25       		.uleb128 0x25
 1086 06d9 76070000 		.4byte	.LASF90
 1087 06dd 07       		.byte	0x7
 1088 06de DA       		.byte	0xda
 1089 06df A2060000 		.4byte	0x6a2
 1090 06e3 25       		.uleb128 0x25
 1091 06e4 7E000000 		.4byte	.LASF91
 1092 06e8 07       		.byte	0x7
 1093 06e9 E2       		.byte	0xe2
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 46


 1094 06ea CA000000 		.4byte	0xca
 1095 06ee 25       		.uleb128 0x25
 1096 06ef 22040000 		.4byte	.LASF92
 1097 06f3 07       		.byte	0x7
 1098 06f4 F7       		.byte	0xf7
 1099 06f5 A9000000 		.4byte	0xa9
 1100 06f9 29       		.uleb128 0x29
 1101 06fa 2D060000 		.4byte	.LASF93
 1102 06fe 07       		.byte	0x7
 1103 06ff 3F01     		.2byte	0x13f
 1104 0701 D5000000 		.4byte	0xd5
 1105 0705 29       		.uleb128 0x29
 1106 0706 04050000 		.4byte	.LASF94
 1107 070a 07       		.byte	0x7
 1108 070b 5C01     		.2byte	0x15c
 1109 070d A2060000 		.4byte	0x6a2
 1110 0711 29       		.uleb128 0x29
 1111 0712 21050000 		.4byte	.LASF95
 1112 0716 07       		.byte	0x7
 1113 0717 6101     		.2byte	0x161
 1114 0719 A2060000 		.4byte	0x6a2
 1115 071d 26       		.uleb128 0x26
 1116 071e BF000000 		.4byte	0xbf
 1117 0722 2D070000 		.4byte	0x72d
 1118 0726 27       		.uleb128 0x27
 1119 0727 76060000 		.4byte	0x676
 1120 072b 04       		.byte	0x4
 1121 072c 00       		.byte	0
 1122 072d 29       		.uleb128 0x29
 1123 072e 4F020000 		.4byte	.LASF96
 1124 0732 07       		.byte	0x7
 1125 0733 6701     		.2byte	0x167
 1126 0735 1D070000 		.4byte	0x71d
 1127 0739 26       		.uleb128 0x26
 1128 073a 49070000 		.4byte	0x749
 1129 073e 49070000 		.4byte	0x749
 1130 0742 27       		.uleb128 0x27
 1131 0743 76060000 		.4byte	0x676
 1132 0747 04       		.byte	0x4
 1133 0748 00       		.byte	0
 1134 0749 28       		.uleb128 0x28
 1135 074a BF000000 		.4byte	0xbf
 1136 074e 29       		.uleb128 0x29
 1137 074f 2B080000 		.4byte	.LASF97
 1138 0753 07       		.byte	0x7
 1139 0754 7401     		.2byte	0x174
 1140 0756 5A070000 		.4byte	0x75a
 1141 075a 28       		.uleb128 0x28
 1142 075b 39070000 		.4byte	0x739
 1143 075f 29       		.uleb128 0x29
 1144 0760 0D000000 		.4byte	.LASF98
 1145 0764 07       		.byte	0x7
 1146 0765 BA01     		.2byte	0x1ba
 1147 0767 A2060000 		.4byte	0x6a2
 1148 076b 26       		.uleb128 0x26
 1149 076c 7B070000 		.4byte	0x77b
 1150 0770 7B070000 		.4byte	0x77b
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 47


 1151 0774 27       		.uleb128 0x27
 1152 0775 76060000 		.4byte	0x676
 1153 0779 00       		.byte	0
 1154 077a 00       		.byte	0
 1155 077b 28       		.uleb128 0x28
 1156 077c 4E010000 		.4byte	0x14e
 1157 0780 29       		.uleb128 0x29
 1158 0781 66040000 		.4byte	.LASF99
 1159 0785 07       		.byte	0x7
 1160 0786 CA02     		.2byte	0x2ca
 1161 0788 8C070000 		.4byte	0x78c
 1162 078c 28       		.uleb128 0x28
 1163 078d 6B070000 		.4byte	0x76b
 1164 0791 26       		.uleb128 0x26
 1165 0792 A1070000 		.4byte	0x7a1
 1166 0796 A1070000 		.4byte	0x7a1
 1167 079a 27       		.uleb128 0x27
 1168 079b 76060000 		.4byte	0x676
 1169 079f 00       		.byte	0
 1170 07a0 00       		.byte	0
 1171 07a1 28       		.uleb128 0x28
 1172 07a2 EB010000 		.4byte	0x1eb
 1173 07a6 29       		.uleb128 0x29
 1174 07a7 FD020000 		.4byte	.LASF100
 1175 07ab 07       		.byte	0x7
 1176 07ac DD02     		.2byte	0x2dd
 1177 07ae B2070000 		.4byte	0x7b2
 1178 07b2 28       		.uleb128 0x28
 1179 07b3 91070000 		.4byte	0x791
 1180 07b7 26       		.uleb128 0x26
 1181 07b8 7E010000 		.4byte	0x17e
 1182 07bc C7070000 		.4byte	0x7c7
 1183 07c0 27       		.uleb128 0x27
 1184 07c1 76060000 		.4byte	0x676
 1185 07c5 00       		.byte	0
 1186 07c6 00       		.byte	0
 1187 07c7 29       		.uleb128 0x29
 1188 07c8 D6060000 		.4byte	.LASF101
 1189 07cc 07       		.byte	0x7
 1190 07cd FB02     		.2byte	0x2fb
 1191 07cf B7070000 		.4byte	0x7b7
 1192 07d3 26       		.uleb128 0x26
 1193 07d4 35020000 		.4byte	0x235
 1194 07d8 E3070000 		.4byte	0x7e3
 1195 07dc 27       		.uleb128 0x27
 1196 07dd 76060000 		.4byte	0x676
 1197 07e1 00       		.byte	0
 1198 07e2 00       		.byte	0
 1199 07e3 29       		.uleb128 0x29
 1200 07e4 CD000000 		.4byte	.LASF102
 1201 07e8 07       		.byte	0x7
 1202 07e9 0403     		.2byte	0x304
 1203 07eb D3070000 		.4byte	0x7d3
 1204 07ef 25       		.uleb128 0x25
 1205 07f0 78020000 		.4byte	.LASF103
 1206 07f4 0A       		.byte	0xa
 1207 07f5 40       		.byte	0x40
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 48


 1208 07f6 A9000000 		.4byte	0xa9
 1209 07fa 25       		.uleb128 0x25
 1210 07fb B5010000 		.4byte	.LASF104
 1211 07ff 0A       		.byte	0xa
 1212 0800 47       		.byte	0x47
 1213 0801 B4000000 		.4byte	0xb4
 1214 0805 25       		.uleb128 0x25
 1215 0806 8B030000 		.4byte	.LASF105
 1216 080a 0A       		.byte	0xa
 1217 080b 4A       		.byte	0x4a
 1218 080c A9000000 		.4byte	0xa9
 1219 0810 26       		.uleb128 0x26
 1220 0811 20080000 		.4byte	0x820
 1221 0815 20080000 		.4byte	0x820
 1222 0819 27       		.uleb128 0x27
 1223 081a 76060000 		.4byte	0x676
 1224 081e FF       		.byte	0xff
 1225 081f 00       		.byte	0
 1226 0820 28       		.uleb128 0x28
 1227 0821 7D000000 		.4byte	0x7d
 1228 0825 29       		.uleb128 0x29
 1229 0826 4B010000 		.4byte	.LASF106
 1230 082a 03       		.byte	0x3
 1231 082b AB01     		.2byte	0x1ab
 1232 082d 31080000 		.4byte	0x831
 1233 0831 28       		.uleb128 0x28
 1234 0832 10080000 		.4byte	0x810
 1235 0836 2A       		.uleb128 0x2a
 1236 0837 4B000000 		.4byte	.LASF107
 1237 083b 4B000000 		.4byte	.LASF107
 1238 083f 05       		.byte	0x5
 1239 0840 4F       		.byte	0x4f
 1240 0841 2B       		.uleb128 0x2b
 1241 0842 4C030000 		.4byte	.LASF108
 1242 0846 4C030000 		.4byte	.LASF108
 1243 084a 03       		.byte	0x3
 1244 084b E901     		.2byte	0x1e9
 1245 084d 2B       		.uleb128 0x2b
 1246 084e F0010000 		.4byte	.LASF109
 1247 0852 F0010000 		.4byte	.LASF109
 1248 0856 03       		.byte	0x3
 1249 0857 CB01     		.2byte	0x1cb
 1250 0859 00       		.byte	0
 1251              		.section	.debug_abbrev,"",%progbits
 1252              	.Ldebug_abbrev0:
 1253 0000 01       		.uleb128 0x1
 1254 0001 11       		.uleb128 0x11
 1255 0002 01       		.byte	0x1
 1256 0003 25       		.uleb128 0x25
 1257 0004 0E       		.uleb128 0xe
 1258 0005 13       		.uleb128 0x13
 1259 0006 0B       		.uleb128 0xb
 1260 0007 03       		.uleb128 0x3
 1261 0008 0E       		.uleb128 0xe
 1262 0009 1B       		.uleb128 0x1b
 1263 000a 0E       		.uleb128 0xe
 1264 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 49


 1265 000c 17       		.uleb128 0x17
 1266 000d 11       		.uleb128 0x11
 1267 000e 01       		.uleb128 0x1
 1268 000f 10       		.uleb128 0x10
 1269 0010 17       		.uleb128 0x17
 1270 0011 00       		.byte	0
 1271 0012 00       		.byte	0
 1272 0013 02       		.uleb128 0x2
 1273 0014 24       		.uleb128 0x24
 1274 0015 00       		.byte	0
 1275 0016 0B       		.uleb128 0xb
 1276 0017 0B       		.uleb128 0xb
 1277 0018 3E       		.uleb128 0x3e
 1278 0019 0B       		.uleb128 0xb
 1279 001a 03       		.uleb128 0x3
 1280 001b 0E       		.uleb128 0xe
 1281 001c 00       		.byte	0
 1282 001d 00       		.byte	0
 1283 001e 03       		.uleb128 0x3
 1284 001f 24       		.uleb128 0x24
 1285 0020 00       		.byte	0
 1286 0021 0B       		.uleb128 0xb
 1287 0022 0B       		.uleb128 0xb
 1288 0023 3E       		.uleb128 0x3e
 1289 0024 0B       		.uleb128 0xb
 1290 0025 03       		.uleb128 0x3
 1291 0026 08       		.uleb128 0x8
 1292 0027 00       		.byte	0
 1293 0028 00       		.byte	0
 1294 0029 04       		.uleb128 0x4
 1295 002a 16       		.uleb128 0x16
 1296 002b 00       		.byte	0
 1297 002c 03       		.uleb128 0x3
 1298 002d 0E       		.uleb128 0xe
 1299 002e 3A       		.uleb128 0x3a
 1300 002f 0B       		.uleb128 0xb
 1301 0030 3B       		.uleb128 0x3b
 1302 0031 0B       		.uleb128 0xb
 1303 0032 49       		.uleb128 0x49
 1304 0033 13       		.uleb128 0x13
 1305 0034 00       		.byte	0
 1306 0035 00       		.byte	0
 1307 0036 05       		.uleb128 0x5
 1308 0037 16       		.uleb128 0x16
 1309 0038 00       		.byte	0
 1310 0039 03       		.uleb128 0x3
 1311 003a 0E       		.uleb128 0xe
 1312 003b 3A       		.uleb128 0x3a
 1313 003c 0B       		.uleb128 0xb
 1314 003d 3B       		.uleb128 0x3b
 1315 003e 05       		.uleb128 0x5
 1316 003f 49       		.uleb128 0x49
 1317 0040 13       		.uleb128 0x13
 1318 0041 00       		.byte	0
 1319 0042 00       		.byte	0
 1320 0043 06       		.uleb128 0x6
 1321 0044 13       		.uleb128 0x13
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 50


 1322 0045 01       		.byte	0x1
 1323 0046 0B       		.uleb128 0xb
 1324 0047 0B       		.uleb128 0xb
 1325 0048 3A       		.uleb128 0x3a
 1326 0049 0B       		.uleb128 0xb
 1327 004a 3B       		.uleb128 0x3b
 1328 004b 05       		.uleb128 0x5
 1329 004c 01       		.uleb128 0x1
 1330 004d 13       		.uleb128 0x13
 1331 004e 00       		.byte	0
 1332 004f 00       		.byte	0
 1333 0050 07       		.uleb128 0x7
 1334 0051 0D       		.uleb128 0xd
 1335 0052 00       		.byte	0
 1336 0053 03       		.uleb128 0x3
 1337 0054 0E       		.uleb128 0xe
 1338 0055 3A       		.uleb128 0x3a
 1339 0056 0B       		.uleb128 0xb
 1340 0057 3B       		.uleb128 0x3b
 1341 0058 05       		.uleb128 0x5
 1342 0059 49       		.uleb128 0x49
 1343 005a 13       		.uleb128 0x13
 1344 005b 38       		.uleb128 0x38
 1345 005c 0B       		.uleb128 0xb
 1346 005d 00       		.byte	0
 1347 005e 00       		.byte	0
 1348 005f 08       		.uleb128 0x8
 1349 0060 04       		.uleb128 0x4
 1350 0061 01       		.byte	0x1
 1351 0062 0B       		.uleb128 0xb
 1352 0063 0B       		.uleb128 0xb
 1353 0064 49       		.uleb128 0x49
 1354 0065 13       		.uleb128 0x13
 1355 0066 3A       		.uleb128 0x3a
 1356 0067 0B       		.uleb128 0xb
 1357 0068 3B       		.uleb128 0x3b
 1358 0069 05       		.uleb128 0x5
 1359 006a 01       		.uleb128 0x1
 1360 006b 13       		.uleb128 0x13
 1361 006c 00       		.byte	0
 1362 006d 00       		.byte	0
 1363 006e 09       		.uleb128 0x9
 1364 006f 28       		.uleb128 0x28
 1365 0070 00       		.byte	0
 1366 0071 03       		.uleb128 0x3
 1367 0072 0E       		.uleb128 0xe
 1368 0073 1C       		.uleb128 0x1c
 1369 0074 0B       		.uleb128 0xb
 1370 0075 00       		.byte	0
 1371 0076 00       		.byte	0
 1372 0077 0A       		.uleb128 0xa
 1373 0078 0D       		.uleb128 0xd
 1374 0079 00       		.byte	0
 1375 007a 03       		.uleb128 0x3
 1376 007b 08       		.uleb128 0x8
 1377 007c 3A       		.uleb128 0x3a
 1378 007d 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 51


 1379 007e 3B       		.uleb128 0x3b
 1380 007f 05       		.uleb128 0x5
 1381 0080 49       		.uleb128 0x49
 1382 0081 13       		.uleb128 0x13
 1383 0082 38       		.uleb128 0x38
 1384 0083 0B       		.uleb128 0xb
 1385 0084 00       		.byte	0
 1386 0085 00       		.byte	0
 1387 0086 0B       		.uleb128 0xb
 1388 0087 2E       		.uleb128 0x2e
 1389 0088 01       		.byte	0x1
 1390 0089 03       		.uleb128 0x3
 1391 008a 0E       		.uleb128 0xe
 1392 008b 3A       		.uleb128 0x3a
 1393 008c 0B       		.uleb128 0xb
 1394 008d 3B       		.uleb128 0x3b
 1395 008e 0B       		.uleb128 0xb
 1396 008f 27       		.uleb128 0x27
 1397 0090 19       		.uleb128 0x19
 1398 0091 49       		.uleb128 0x49
 1399 0092 13       		.uleb128 0x13
 1400 0093 20       		.uleb128 0x20
 1401 0094 0B       		.uleb128 0xb
 1402 0095 01       		.uleb128 0x1
 1403 0096 13       		.uleb128 0x13
 1404 0097 00       		.byte	0
 1405 0098 00       		.byte	0
 1406 0099 0C       		.uleb128 0xc
 1407 009a 34       		.uleb128 0x34
 1408 009b 00       		.byte	0
 1409 009c 03       		.uleb128 0x3
 1410 009d 0E       		.uleb128 0xe
 1411 009e 3A       		.uleb128 0x3a
 1412 009f 0B       		.uleb128 0xb
 1413 00a0 3B       		.uleb128 0x3b
 1414 00a1 0B       		.uleb128 0xb
 1415 00a2 49       		.uleb128 0x49
 1416 00a3 13       		.uleb128 0x13
 1417 00a4 00       		.byte	0
 1418 00a5 00       		.byte	0
 1419 00a6 0D       		.uleb128 0xd
 1420 00a7 2E       		.uleb128 0x2e
 1421 00a8 01       		.byte	0x1
 1422 00a9 03       		.uleb128 0x3
 1423 00aa 0E       		.uleb128 0xe
 1424 00ab 3A       		.uleb128 0x3a
 1425 00ac 0B       		.uleb128 0xb
 1426 00ad 3B       		.uleb128 0x3b
 1427 00ae 0B       		.uleb128 0xb
 1428 00af 27       		.uleb128 0x27
 1429 00b0 19       		.uleb128 0x19
 1430 00b1 20       		.uleb128 0x20
 1431 00b2 0B       		.uleb128 0xb
 1432 00b3 01       		.uleb128 0x1
 1433 00b4 13       		.uleb128 0x13
 1434 00b5 00       		.byte	0
 1435 00b6 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 52


 1436 00b7 0E       		.uleb128 0xe
 1437 00b8 05       		.uleb128 0x5
 1438 00b9 00       		.byte	0
 1439 00ba 03       		.uleb128 0x3
 1440 00bb 08       		.uleb128 0x8
 1441 00bc 3A       		.uleb128 0x3a
 1442 00bd 0B       		.uleb128 0xb
 1443 00be 3B       		.uleb128 0x3b
 1444 00bf 0B       		.uleb128 0xb
 1445 00c0 49       		.uleb128 0x49
 1446 00c1 13       		.uleb128 0x13
 1447 00c2 00       		.byte	0
 1448 00c3 00       		.byte	0
 1449 00c4 0F       		.uleb128 0xf
 1450 00c5 2E       		.uleb128 0x2e
 1451 00c6 01       		.byte	0x1
 1452 00c7 03       		.uleb128 0x3
 1453 00c8 0E       		.uleb128 0xe
 1454 00c9 3A       		.uleb128 0x3a
 1455 00ca 0B       		.uleb128 0xb
 1456 00cb 3B       		.uleb128 0x3b
 1457 00cc 05       		.uleb128 0x5
 1458 00cd 27       		.uleb128 0x27
 1459 00ce 19       		.uleb128 0x19
 1460 00cf 20       		.uleb128 0x20
 1461 00d0 0B       		.uleb128 0xb
 1462 00d1 01       		.uleb128 0x1
 1463 00d2 13       		.uleb128 0x13
 1464 00d3 00       		.byte	0
 1465 00d4 00       		.byte	0
 1466 00d5 10       		.uleb128 0x10
 1467 00d6 05       		.uleb128 0x5
 1468 00d7 00       		.byte	0
 1469 00d8 03       		.uleb128 0x3
 1470 00d9 08       		.uleb128 0x8
 1471 00da 3A       		.uleb128 0x3a
 1472 00db 0B       		.uleb128 0xb
 1473 00dc 3B       		.uleb128 0x3b
 1474 00dd 05       		.uleb128 0x5
 1475 00de 49       		.uleb128 0x49
 1476 00df 13       		.uleb128 0x13
 1477 00e0 00       		.byte	0
 1478 00e1 00       		.byte	0
 1479 00e2 11       		.uleb128 0x11
 1480 00e3 2E       		.uleb128 0x2e
 1481 00e4 00       		.byte	0
 1482 00e5 03       		.uleb128 0x3
 1483 00e6 0E       		.uleb128 0xe
 1484 00e7 3A       		.uleb128 0x3a
 1485 00e8 0B       		.uleb128 0xb
 1486 00e9 3B       		.uleb128 0x3b
 1487 00ea 05       		.uleb128 0x5
 1488 00eb 27       		.uleb128 0x27
 1489 00ec 19       		.uleb128 0x19
 1490 00ed 49       		.uleb128 0x49
 1491 00ee 13       		.uleb128 0x13
 1492 00ef 20       		.uleb128 0x20
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 53


 1493 00f0 0B       		.uleb128 0xb
 1494 00f1 00       		.byte	0
 1495 00f2 00       		.byte	0
 1496 00f3 12       		.uleb128 0x12
 1497 00f4 05       		.uleb128 0x5
 1498 00f5 00       		.byte	0
 1499 00f6 03       		.uleb128 0x3
 1500 00f7 0E       		.uleb128 0xe
 1501 00f8 3A       		.uleb128 0x3a
 1502 00f9 0B       		.uleb128 0xb
 1503 00fa 3B       		.uleb128 0x3b
 1504 00fb 05       		.uleb128 0x5
 1505 00fc 49       		.uleb128 0x49
 1506 00fd 13       		.uleb128 0x13
 1507 00fe 00       		.byte	0
 1508 00ff 00       		.byte	0
 1509 0100 13       		.uleb128 0x13
 1510 0101 2E       		.uleb128 0x2e
 1511 0102 00       		.byte	0
 1512 0103 03       		.uleb128 0x3
 1513 0104 0E       		.uleb128 0xe
 1514 0105 3A       		.uleb128 0x3a
 1515 0106 0B       		.uleb128 0xb
 1516 0107 3B       		.uleb128 0x3b
 1517 0108 05       		.uleb128 0x5
 1518 0109 27       		.uleb128 0x27
 1519 010a 19       		.uleb128 0x19
 1520 010b 20       		.uleb128 0x20
 1521 010c 0B       		.uleb128 0xb
 1522 010d 00       		.byte	0
 1523 010e 00       		.byte	0
 1524 010f 14       		.uleb128 0x14
 1525 0110 2E       		.uleb128 0x2e
 1526 0111 00       		.byte	0
 1527 0112 03       		.uleb128 0x3
 1528 0113 0E       		.uleb128 0xe
 1529 0114 3A       		.uleb128 0x3a
 1530 0115 0B       		.uleb128 0xb
 1531 0116 3B       		.uleb128 0x3b
 1532 0117 0B       		.uleb128 0xb
 1533 0118 27       		.uleb128 0x27
 1534 0119 19       		.uleb128 0x19
 1535 011a 49       		.uleb128 0x49
 1536 011b 13       		.uleb128 0x13
 1537 011c 20       		.uleb128 0x20
 1538 011d 0B       		.uleb128 0xb
 1539 011e 00       		.byte	0
 1540 011f 00       		.byte	0
 1541 0120 15       		.uleb128 0x15
 1542 0121 34       		.uleb128 0x34
 1543 0122 00       		.byte	0
 1544 0123 03       		.uleb128 0x3
 1545 0124 0E       		.uleb128 0xe
 1546 0125 3A       		.uleb128 0x3a
 1547 0126 0B       		.uleb128 0xb
 1548 0127 3B       		.uleb128 0x3b
 1549 0128 05       		.uleb128 0x5
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 54


 1550 0129 49       		.uleb128 0x49
 1551 012a 13       		.uleb128 0x13
 1552 012b 00       		.byte	0
 1553 012c 00       		.byte	0
 1554 012d 16       		.uleb128 0x16
 1555 012e 34       		.uleb128 0x34
 1556 012f 00       		.byte	0
 1557 0130 03       		.uleb128 0x3
 1558 0131 08       		.uleb128 0x8
 1559 0132 3A       		.uleb128 0x3a
 1560 0133 0B       		.uleb128 0xb
 1561 0134 3B       		.uleb128 0x3b
 1562 0135 05       		.uleb128 0x5
 1563 0136 49       		.uleb128 0x49
 1564 0137 13       		.uleb128 0x13
 1565 0138 00       		.byte	0
 1566 0139 00       		.byte	0
 1567 013a 17       		.uleb128 0x17
 1568 013b 2E       		.uleb128 0x2e
 1569 013c 01       		.byte	0x1
 1570 013d 3F       		.uleb128 0x3f
 1571 013e 19       		.uleb128 0x19
 1572 013f 03       		.uleb128 0x3
 1573 0140 0E       		.uleb128 0xe
 1574 0141 3A       		.uleb128 0x3a
 1575 0142 0B       		.uleb128 0xb
 1576 0143 3B       		.uleb128 0x3b
 1577 0144 0B       		.uleb128 0xb
 1578 0145 27       		.uleb128 0x27
 1579 0146 19       		.uleb128 0x19
 1580 0147 49       		.uleb128 0x49
 1581 0148 13       		.uleb128 0x13
 1582 0149 11       		.uleb128 0x11
 1583 014a 01       		.uleb128 0x1
 1584 014b 12       		.uleb128 0x12
 1585 014c 06       		.uleb128 0x6
 1586 014d 40       		.uleb128 0x40
 1587 014e 18       		.uleb128 0x18
 1588 014f 9742     		.uleb128 0x2117
 1589 0151 19       		.uleb128 0x19
 1590 0152 01       		.uleb128 0x1
 1591 0153 13       		.uleb128 0x13
 1592 0154 00       		.byte	0
 1593 0155 00       		.byte	0
 1594 0156 18       		.uleb128 0x18
 1595 0157 05       		.uleb128 0x5
 1596 0158 00       		.byte	0
 1597 0159 03       		.uleb128 0x3
 1598 015a 0E       		.uleb128 0xe
 1599 015b 3A       		.uleb128 0x3a
 1600 015c 0B       		.uleb128 0xb
 1601 015d 3B       		.uleb128 0x3b
 1602 015e 0B       		.uleb128 0xb
 1603 015f 49       		.uleb128 0x49
 1604 0160 13       		.uleb128 0x13
 1605 0161 02       		.uleb128 0x2
 1606 0162 17       		.uleb128 0x17
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 55


 1607 0163 00       		.byte	0
 1608 0164 00       		.byte	0
 1609 0165 19       		.uleb128 0x19
 1610 0166 34       		.uleb128 0x34
 1611 0167 00       		.byte	0
 1612 0168 03       		.uleb128 0x3
 1613 0169 08       		.uleb128 0x8
 1614 016a 3A       		.uleb128 0x3a
 1615 016b 0B       		.uleb128 0xb
 1616 016c 3B       		.uleb128 0x3b
 1617 016d 0B       		.uleb128 0xb
 1618 016e 49       		.uleb128 0x49
 1619 016f 13       		.uleb128 0x13
 1620 0170 02       		.uleb128 0x2
 1621 0171 17       		.uleb128 0x17
 1622 0172 00       		.byte	0
 1623 0173 00       		.byte	0
 1624 0174 1A       		.uleb128 0x1a
 1625 0175 34       		.uleb128 0x34
 1626 0176 00       		.byte	0
 1627 0177 03       		.uleb128 0x3
 1628 0178 0E       		.uleb128 0xe
 1629 0179 3A       		.uleb128 0x3a
 1630 017a 0B       		.uleb128 0xb
 1631 017b 3B       		.uleb128 0x3b
 1632 017c 0B       		.uleb128 0xb
 1633 017d 49       		.uleb128 0x49
 1634 017e 13       		.uleb128 0x13
 1635 017f 02       		.uleb128 0x2
 1636 0180 18       		.uleb128 0x18
 1637 0181 00       		.byte	0
 1638 0182 00       		.byte	0
 1639 0183 1B       		.uleb128 0x1b
 1640 0184 1D       		.uleb128 0x1d
 1641 0185 01       		.byte	0x1
 1642 0186 31       		.uleb128 0x31
 1643 0187 13       		.uleb128 0x13
 1644 0188 11       		.uleb128 0x11
 1645 0189 01       		.uleb128 0x1
 1646 018a 12       		.uleb128 0x12
 1647 018b 06       		.uleb128 0x6
 1648 018c 58       		.uleb128 0x58
 1649 018d 0B       		.uleb128 0xb
 1650 018e 59       		.uleb128 0x59
 1651 018f 0B       		.uleb128 0xb
 1652 0190 01       		.uleb128 0x1
 1653 0191 13       		.uleb128 0x13
 1654 0192 00       		.byte	0
 1655 0193 00       		.byte	0
 1656 0194 1C       		.uleb128 0x1c
 1657 0195 1D       		.uleb128 0x1d
 1658 0196 01       		.byte	0x1
 1659 0197 31       		.uleb128 0x31
 1660 0198 13       		.uleb128 0x13
 1661 0199 11       		.uleb128 0x11
 1662 019a 01       		.uleb128 0x1
 1663 019b 12       		.uleb128 0x12
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 56


 1664 019c 06       		.uleb128 0x6
 1665 019d 58       		.uleb128 0x58
 1666 019e 0B       		.uleb128 0xb
 1667 019f 59       		.uleb128 0x59
 1668 01a0 0B       		.uleb128 0xb
 1669 01a1 00       		.byte	0
 1670 01a2 00       		.byte	0
 1671 01a3 1D       		.uleb128 0x1d
 1672 01a4 0B       		.uleb128 0xb
 1673 01a5 01       		.byte	0x1
 1674 01a6 11       		.uleb128 0x11
 1675 01a7 01       		.uleb128 0x1
 1676 01a8 12       		.uleb128 0x12
 1677 01a9 06       		.uleb128 0x6
 1678 01aa 00       		.byte	0
 1679 01ab 00       		.byte	0
 1680 01ac 1E       		.uleb128 0x1e
 1681 01ad 34       		.uleb128 0x34
 1682 01ae 00       		.byte	0
 1683 01af 31       		.uleb128 0x31
 1684 01b0 13       		.uleb128 0x13
 1685 01b1 02       		.uleb128 0x2
 1686 01b2 17       		.uleb128 0x17
 1687 01b3 00       		.byte	0
 1688 01b4 00       		.byte	0
 1689 01b5 1F       		.uleb128 0x1f
 1690 01b6 1D       		.uleb128 0x1d
 1691 01b7 00       		.byte	0
 1692 01b8 31       		.uleb128 0x31
 1693 01b9 13       		.uleb128 0x13
 1694 01ba 11       		.uleb128 0x11
 1695 01bb 01       		.uleb128 0x1
 1696 01bc 12       		.uleb128 0x12
 1697 01bd 06       		.uleb128 0x6
 1698 01be 58       		.uleb128 0x58
 1699 01bf 0B       		.uleb128 0xb
 1700 01c0 59       		.uleb128 0x59
 1701 01c1 0B       		.uleb128 0xb
 1702 01c2 00       		.byte	0
 1703 01c3 00       		.byte	0
 1704 01c4 20       		.uleb128 0x20
 1705 01c5 34       		.uleb128 0x34
 1706 01c6 00       		.byte	0
 1707 01c7 31       		.uleb128 0x31
 1708 01c8 13       		.uleb128 0x13
 1709 01c9 00       		.byte	0
 1710 01ca 00       		.byte	0
 1711 01cb 21       		.uleb128 0x21
 1712 01cc 1D       		.uleb128 0x1d
 1713 01cd 00       		.byte	0
 1714 01ce 31       		.uleb128 0x31
 1715 01cf 13       		.uleb128 0x13
 1716 01d0 11       		.uleb128 0x11
 1717 01d1 01       		.uleb128 0x1
 1718 01d2 12       		.uleb128 0x12
 1719 01d3 06       		.uleb128 0x6
 1720 01d4 58       		.uleb128 0x58
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 57


 1721 01d5 0B       		.uleb128 0xb
 1722 01d6 59       		.uleb128 0x59
 1723 01d7 05       		.uleb128 0x5
 1724 01d8 00       		.byte	0
 1725 01d9 00       		.byte	0
 1726 01da 22       		.uleb128 0x22
 1727 01db 1D       		.uleb128 0x1d
 1728 01dc 01       		.byte	0x1
 1729 01dd 31       		.uleb128 0x31
 1730 01de 13       		.uleb128 0x13
 1731 01df 11       		.uleb128 0x11
 1732 01e0 01       		.uleb128 0x1
 1733 01e1 12       		.uleb128 0x12
 1734 01e2 06       		.uleb128 0x6
 1735 01e3 58       		.uleb128 0x58
 1736 01e4 0B       		.uleb128 0xb
 1737 01e5 59       		.uleb128 0x59
 1738 01e6 05       		.uleb128 0x5
 1739 01e7 01       		.uleb128 0x1
 1740 01e8 13       		.uleb128 0x13
 1741 01e9 00       		.byte	0
 1742 01ea 00       		.byte	0
 1743 01eb 23       		.uleb128 0x23
 1744 01ec 05       		.uleb128 0x5
 1745 01ed 00       		.byte	0
 1746 01ee 31       		.uleb128 0x31
 1747 01ef 13       		.uleb128 0x13
 1748 01f0 02       		.uleb128 0x2
 1749 01f1 17       		.uleb128 0x17
 1750 01f2 00       		.byte	0
 1751 01f3 00       		.byte	0
 1752 01f4 24       		.uleb128 0x24
 1753 01f5 898201   		.uleb128 0x4109
 1754 01f8 00       		.byte	0
 1755 01f9 11       		.uleb128 0x11
 1756 01fa 01       		.uleb128 0x1
 1757 01fb 31       		.uleb128 0x31
 1758 01fc 13       		.uleb128 0x13
 1759 01fd 00       		.byte	0
 1760 01fe 00       		.byte	0
 1761 01ff 25       		.uleb128 0x25
 1762 0200 34       		.uleb128 0x34
 1763 0201 00       		.byte	0
 1764 0202 03       		.uleb128 0x3
 1765 0203 0E       		.uleb128 0xe
 1766 0204 3A       		.uleb128 0x3a
 1767 0205 0B       		.uleb128 0xb
 1768 0206 3B       		.uleb128 0x3b
 1769 0207 0B       		.uleb128 0xb
 1770 0208 49       		.uleb128 0x49
 1771 0209 13       		.uleb128 0x13
 1772 020a 3F       		.uleb128 0x3f
 1773 020b 19       		.uleb128 0x19
 1774 020c 3C       		.uleb128 0x3c
 1775 020d 19       		.uleb128 0x19
 1776 020e 00       		.byte	0
 1777 020f 00       		.byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 58


 1778 0210 26       		.uleb128 0x26
 1779 0211 01       		.uleb128 0x1
 1780 0212 01       		.byte	0x1
 1781 0213 49       		.uleb128 0x49
 1782 0214 13       		.uleb128 0x13
 1783 0215 01       		.uleb128 0x1
 1784 0216 13       		.uleb128 0x13
 1785 0217 00       		.byte	0
 1786 0218 00       		.byte	0
 1787 0219 27       		.uleb128 0x27
 1788 021a 21       		.uleb128 0x21
 1789 021b 00       		.byte	0
 1790 021c 49       		.uleb128 0x49
 1791 021d 13       		.uleb128 0x13
 1792 021e 2F       		.uleb128 0x2f
 1793 021f 0B       		.uleb128 0xb
 1794 0220 00       		.byte	0
 1795 0221 00       		.byte	0
 1796 0222 28       		.uleb128 0x28
 1797 0223 26       		.uleb128 0x26
 1798 0224 00       		.byte	0
 1799 0225 49       		.uleb128 0x49
 1800 0226 13       		.uleb128 0x13
 1801 0227 00       		.byte	0
 1802 0228 00       		.byte	0
 1803 0229 29       		.uleb128 0x29
 1804 022a 34       		.uleb128 0x34
 1805 022b 00       		.byte	0
 1806 022c 03       		.uleb128 0x3
 1807 022d 0E       		.uleb128 0xe
 1808 022e 3A       		.uleb128 0x3a
 1809 022f 0B       		.uleb128 0xb
 1810 0230 3B       		.uleb128 0x3b
 1811 0231 05       		.uleb128 0x5
 1812 0232 49       		.uleb128 0x49
 1813 0233 13       		.uleb128 0x13
 1814 0234 3F       		.uleb128 0x3f
 1815 0235 19       		.uleb128 0x19
 1816 0236 3C       		.uleb128 0x3c
 1817 0237 19       		.uleb128 0x19
 1818 0238 00       		.byte	0
 1819 0239 00       		.byte	0
 1820 023a 2A       		.uleb128 0x2a
 1821 023b 2E       		.uleb128 0x2e
 1822 023c 00       		.byte	0
 1823 023d 3F       		.uleb128 0x3f
 1824 023e 19       		.uleb128 0x19
 1825 023f 3C       		.uleb128 0x3c
 1826 0240 19       		.uleb128 0x19
 1827 0241 6E       		.uleb128 0x6e
 1828 0242 0E       		.uleb128 0xe
 1829 0243 03       		.uleb128 0x3
 1830 0244 0E       		.uleb128 0xe
 1831 0245 3A       		.uleb128 0x3a
 1832 0246 0B       		.uleb128 0xb
 1833 0247 3B       		.uleb128 0x3b
 1834 0248 0B       		.uleb128 0xb
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 59


 1835 0249 00       		.byte	0
 1836 024a 00       		.byte	0
 1837 024b 2B       		.uleb128 0x2b
 1838 024c 2E       		.uleb128 0x2e
 1839 024d 00       		.byte	0
 1840 024e 3F       		.uleb128 0x3f
 1841 024f 19       		.uleb128 0x19
 1842 0250 3C       		.uleb128 0x3c
 1843 0251 19       		.uleb128 0x19
 1844 0252 6E       		.uleb128 0x6e
 1845 0253 0E       		.uleb128 0xe
 1846 0254 03       		.uleb128 0x3
 1847 0255 0E       		.uleb128 0xe
 1848 0256 3A       		.uleb128 0x3a
 1849 0257 0B       		.uleb128 0xb
 1850 0258 3B       		.uleb128 0x3b
 1851 0259 05       		.uleb128 0x5
 1852 025a 00       		.byte	0
 1853 025b 00       		.byte	0
 1854 025c 00       		.byte	0
 1855              		.section	.debug_loc,"",%progbits
 1856              	.Ldebug_loc0:
 1857              	.LLST0:
 1858 0000 00000000 		.4byte	.LVL0
 1859 0004 4E000000 		.4byte	.LVL3
 1860 0008 0100     		.2byte	0x1
 1861 000a 50       		.byte	0x50
 1862 000b 6B000000 		.4byte	.LVL4-1
 1863 000f DC000000 		.4byte	.LVL17
 1864 0013 0400     		.2byte	0x4
 1865 0015 F3       		.byte	0xf3
 1866 0016 01       		.uleb128 0x1
 1867 0017 50       		.byte	0x50
 1868 0018 9F       		.byte	0x9f
 1869 0019 DC000000 		.4byte	.LVL17
 1870 001d DE000000 		.4byte	.LVL18
 1871 0021 0100     		.2byte	0x1
 1872 0023 50       		.byte	0x50
 1873 0024 DE000000 		.4byte	.LVL18
 1874 0028 E0000000 		.4byte	.LVL19
 1875 002c 0400     		.2byte	0x4
 1876 002e F3       		.byte	0xf3
 1877 002f 01       		.uleb128 0x1
 1878 0030 50       		.byte	0x50
 1879 0031 9F       		.byte	0x9f
 1880 0032 E0000000 		.4byte	.LVL19
 1881 0036 E2000000 		.4byte	.LVL20
 1882 003a 0100     		.2byte	0x1
 1883 003c 50       		.byte	0x50
 1884 003d E2000000 		.4byte	.LVL20
 1885 0041 E4000000 		.4byte	.LVL21
 1886 0045 0400     		.2byte	0x4
 1887 0047 F3       		.byte	0xf3
 1888 0048 01       		.uleb128 0x1
 1889 0049 50       		.byte	0x50
 1890 004a 9F       		.byte	0x9f
 1891 004b E4000000 		.4byte	.LVL21
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 60


 1892 004f E6000000 		.4byte	.LVL22
 1893 0053 0100     		.2byte	0x1
 1894 0055 50       		.byte	0x50
 1895 0056 E6000000 		.4byte	.LVL22
 1896 005a E8000000 		.4byte	.LVL23
 1897 005e 0400     		.2byte	0x4
 1898 0060 F3       		.byte	0xf3
 1899 0061 01       		.uleb128 0x1
 1900 0062 50       		.byte	0x50
 1901 0063 9F       		.byte	0x9f
 1902 0064 E8000000 		.4byte	.LVL23
 1903 0068 EA000000 		.4byte	.LVL24
 1904 006c 0100     		.2byte	0x1
 1905 006e 50       		.byte	0x50
 1906 006f EA000000 		.4byte	.LVL24
 1907 0073 EC000000 		.4byte	.LVL25
 1908 0077 0400     		.2byte	0x4
 1909 0079 F3       		.byte	0xf3
 1910 007a 01       		.uleb128 0x1
 1911 007b 50       		.byte	0x50
 1912 007c 9F       		.byte	0x9f
 1913 007d EC000000 		.4byte	.LVL25
 1914 0081 EE000000 		.4byte	.LVL26
 1915 0085 0100     		.2byte	0x1
 1916 0087 50       		.byte	0x50
 1917 0088 EE000000 		.4byte	.LVL26
 1918 008c 24010000 		.4byte	.LFE70
 1919 0090 0400     		.2byte	0x4
 1920 0092 F3       		.byte	0xf3
 1921 0093 01       		.uleb128 0x1
 1922 0094 50       		.byte	0x50
 1923 0095 9F       		.byte	0x9f
 1924 0096 00000000 		.4byte	0
 1925 009a 00000000 		.4byte	0
 1926              	.LLST1:
 1927 009e DA000000 		.4byte	.LVL16
 1928 00a2 DC000000 		.4byte	.LVL17
 1929 00a6 0200     		.2byte	0x2
 1930 00a8 30       		.byte	0x30
 1931 00a9 9F       		.byte	0x9f
 1932 00aa EE000000 		.4byte	.LVL26
 1933 00ae 24010000 		.4byte	.LFE70
 1934 00b2 0100     		.2byte	0x1
 1935 00b4 50       		.byte	0x50
 1936 00b5 00000000 		.4byte	0
 1937 00b9 00000000 		.4byte	0
 1938              	.LLST2:
 1939 00bd 06000000 		.4byte	.LVL1
 1940 00c1 08000000 		.4byte	.LVL2
 1941 00c5 0100     		.2byte	0x1
 1942 00c7 54       		.byte	0x54
 1943 00c8 00000000 		.4byte	0
 1944 00cc 00000000 		.4byte	0
 1945              	.LLST3:
 1946 00d0 6C000000 		.4byte	.LVL4
 1947 00d4 84000000 		.4byte	.LVL5
 1948 00d8 0100     		.2byte	0x1
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 61


 1949 00da 50       		.byte	0x50
 1950 00db 9C000000 		.4byte	.LVL9
 1951 00df B3000000 		.4byte	.LVL10-1
 1952 00e3 0100     		.2byte	0x1
 1953 00e5 50       		.byte	0x50
 1954 00e6 00000000 		.4byte	0
 1955 00ea 00000000 		.4byte	0
 1956              	.LLST4:
 1957 00ee 92000000 		.4byte	.LVL6
 1958 00f2 96000000 		.4byte	.LVL7
 1959 00f6 0100     		.2byte	0x1
 1960 00f8 50       		.byte	0x50
 1961 00f9 00000000 		.4byte	0
 1962 00fd 00000000 		.4byte	0
 1963              	.LLST5:
 1964 0101 B4000000 		.4byte	.LVL10
 1965 0105 C8000000 		.4byte	.LVL12
 1966 0109 0100     		.2byte	0x1
 1967 010b 50       		.byte	0x50
 1968 010c CE000000 		.4byte	.LVL14
 1969 0110 D1000000 		.4byte	.LVL15-1
 1970 0114 0100     		.2byte	0x1
 1971 0116 50       		.byte	0x50
 1972 0117 00000000 		.4byte	0
 1973 011b 00000000 		.4byte	0
 1974              	.LLST6:
 1975 011f C4000000 		.4byte	.LVL11
 1976 0123 C8000000 		.4byte	.LVL12
 1977 0127 0100     		.2byte	0x1
 1978 0129 50       		.byte	0x50
 1979 012a 00000000 		.4byte	0
 1980 012e 00000000 		.4byte	0
 1981              	.LLST7:
 1982 0132 CE000000 		.4byte	.LVL14
 1983 0136 D1000000 		.4byte	.LVL15-1
 1984 013a 0100     		.2byte	0x1
 1985 013c 50       		.byte	0x50
 1986 013d 00000000 		.4byte	0
 1987 0141 00000000 		.4byte	0
 1988              	.LLST8:
 1989 0145 EE000000 		.4byte	.LVL26
 1990 0149 F2000000 		.4byte	.LVL27
 1991 014d 0100     		.2byte	0x1
 1992 014f 54       		.byte	0x54
 1993 0150 00000000 		.4byte	0
 1994 0154 00000000 		.4byte	0
 1995              		.section	.debug_aranges,"",%progbits
 1996 0000 1C000000 		.4byte	0x1c
 1997 0004 0200     		.2byte	0x2
 1998 0006 00000000 		.4byte	.Ldebug_info0
 1999 000a 04       		.byte	0x4
 2000 000b 00       		.byte	0
 2001 000c 0000     		.2byte	0
 2002 000e 0000     		.2byte	0
 2003 0010 00000000 		.4byte	.LFB70
 2004 0014 24010000 		.4byte	.LFE70-.LFB70
 2005 0018 00000000 		.4byte	0
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 62


 2006 001c 00000000 		.4byte	0
 2007              		.section	.debug_ranges,"",%progbits
 2008              	.Ldebug_ranges0:
 2009 0000 00000000 		.4byte	.LFB70
 2010 0004 24010000 		.4byte	.LFE70
 2011 0008 00000000 		.4byte	0
 2012 000c 00000000 		.4byte	0
 2013              		.section	.debug_line,"",%progbits
 2014              	.Ldebug_line0:
 2015 0000 ED010000 		.section	.debug_str,"MS",%progbits,1
 2015      02006201 
 2015      00000201 
 2015      FB0E0D00 
 2015      01010101 
 2016              	.LASF47:
 2017 0000 49535232 		.ascii	"ISR2_Context\000"
 2017      5F436F6E 
 2017      74657874 
 2017      00
 2018              	.LASF98:
 2019 000d 45455F74 		.ascii	"EE_th_resource_last\000"
 2019      685F7265 
 2019      736F7572 
 2019      63655F6C 
 2019      61737400 
 2020              	.LASF77:
 2021 0021 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 2021      616C5F65 
 2021      6E645F6E 
 2021      65737465 
 2021      645F7072 
 2022              	.LASF42:
 2023 003d 6E657874 		.ascii	"next\000"
 2023      00
 2024              	.LASF22:
 2025 0042 5469636B 		.ascii	"TickType\000"
 2025      54797065 
 2025      00
 2026              	.LASF107:
 2027 004b 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 2027      6F727465 
 2027      785F6D78 
 2027      5F636861 
 2027      6E67655F 
 2028              	.LASF72:
 2029 0067 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 2029      5254495F 
 2029      7365745F 
 2029      73657276 
 2029      6963655F 
 2030              	.LASF91:
 2031 007e 45455F73 		.ascii	"EE_stkfirst\000"
 2031      746B6669 
 2031      72737400 
 2032              	.LASF17:
 2033 008a 45455F54 		.ascii	"EE_TYPEBOOL\000"
 2033      59504542 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 63


 2033      4F4F4C00 
 2034              	.LASF7:
 2035 0096 6C6F6E67 		.ascii	"long long unsigned int\000"
 2035      206C6F6E 
 2035      6720756E 
 2035      7369676E 
 2035      65642069 
 2036              	.LASF68:
 2037 00ad 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 2037      616C5F72 
 2037      65616479 
 2037      32737461 
 2037      636B6564 
 2038              	.LASF44:
 2039 00c2 53746174 		.ascii	"StatusType\000"
 2039      75735479 
 2039      706500
 2040              	.LASF102:
 2041 00cd 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 2041      6F5F636F 
 2041      756E7465 
 2041      725F6F62 
 2041      6A656374 
 2042              	.LASF41:
 2043 00e6 64656C74 		.ascii	"delta\000"
 2043      6100
 2044              	.LASF38:
 2045 00ec 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 2045      6F5F636F 
 2045      756E7465 
 2045      725F6F62 
 2045      6A656374 
 2046              	.LASF20:
 2047 010a 5461736B 		.ascii	"TaskType\000"
 2047      54797065 
 2047      00
 2048              	.LASF25:
 2049 0113 6D617861 		.ascii	"maxallowedvalue\000"
 2049      6C6C6F77 
 2049      65647661 
 2049      6C756500 
 2050              	.LASF6:
 2051 0123 6C6F6E67 		.ascii	"long long int\000"
 2051      206C6F6E 
 2051      6720696E 
 2051      7400
 2052              	.LASF0:
 2053 0131 7369676E 		.ascii	"signed char\000"
 2053      65642063 
 2053      68617200 
 2054              	.LASF21:
 2055 013d 4576656E 		.ascii	"EventMaskType\000"
 2055      744D6173 
 2055      6B547970 
 2055      6500
 2056              	.LASF106:
 2057 014b 45455F72 		.ascii	"EE_rq_lookup\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 64


 2057      715F6C6F 
 2057      6F6B7570 
 2057      00
 2058              	.LASF31:
 2059 0158 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 2059      6F5F636F 
 2059      756E7465 
 2059      725F5241 
 2059      4D5F7479 
 2060              	.LASF51:
 2061 016f 506F7374 		.ascii	"PostTaskHook_Context\000"
 2061      5461736B 
 2061      486F6F6B 
 2061      5F436F6E 
 2061      74657874 
 2062              	.LASF4:
 2063 0184 6C6F6E67 		.ascii	"long int\000"
 2063      20696E74 
 2063      00
 2064              	.LASF63:
 2065 018d 45455F73 		.ascii	"EE_stk_getfirst\000"
 2065      746B5F67 
 2065      65746669 
 2065      72737400 
 2066              	.LASF78:
 2067 019d 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 2067      5254495F 
 2067      7365745F 
 2067      73657276 
 2067      6963655F 
 2068              	.LASF104:
 2069 01b5 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2069      6F5F4952 
 2069      515F7375 
 2069      7370656E 
 2069      645F7374 
 2070              	.LASF84:
 2071 01ce 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2071      74645F65 
 2071      6E646379 
 2071      636C655F 
 2071      6E657874 
 2072              	.LASF27:
 2073 01e7 6D696E63 		.ascii	"mincycle\000"
 2073      79636C65 
 2073      00
 2074              	.LASF109:
 2075 01f0 45455F72 		.ascii	"EE_rq_queryfirst\000"
 2075      715F7175 
 2075      65727966 
 2075      69727374 
 2075      00
 2076              	.LASF18:
 2077 0201 45455F54 		.ascii	"EE_TID\000"
 2077      494400
 2078              	.LASF29:
 2079 0208 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 65


 2079      6500
 2080              	.LASF64:
 2081 020e 45455F73 		.ascii	"EE_stk_queryfirst\000"
 2081      746B5F71 
 2081      75657279 
 2081      66697273 
 2081      7400
 2082              	.LASF8:
 2083 0220 756E7369 		.ascii	"unsigned int\000"
 2083      676E6564 
 2083      20696E74 
 2083      00
 2084              	.LASF11:
 2085 022d 45455F49 		.ascii	"EE_INT8\000"
 2085      4E543800 
 2086              	.LASF15:
 2087 0235 45455F55 		.ascii	"EE_UREG\000"
 2087      52454700 
 2088              	.LASF5:
 2089 023d 6C6F6E67 		.ascii	"long unsigned int\000"
 2089      20756E73 
 2089      69676E65 
 2089      6420696E 
 2089      7400
 2090              	.LASF96:
 2091 024f 45455F74 		.ascii	"EE_th_waswaiting\000"
 2091      685F7761 
 2091      73776169 
 2091      74696E67 
 2091      00
 2092              	.LASF37:
 2093 0260 6B696E64 		.ascii	"kind\000"
 2093      00
 2094              	.LASF3:
 2095 0265 73686F72 		.ascii	"short unsigned int\000"
 2095      7420756E 
 2095      7369676E 
 2095      65642069 
 2095      6E7400
 2096              	.LASF103:
 2097 0278 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2097      6F5F4952 
 2097      515F6469 
 2097      7361626C 
 2097      655F636F 
 2098              	.LASF34:
 2099 0290 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 2099      6F5F636F 
 2099      756E7465 
 2099      725F6F62 
 2099      6A656374 
 2100              	.LASF54:
 2101 02af 416C6172 		.ascii	"AlarmCallback_Context\000"
 2101      6D43616C 
 2101      6C626163 
 2101      6B5F436F 
 2101      6E746578 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 66


 2102              	.LASF88:
 2103 02c5 45455F74 		.ascii	"EE_th_status\000"
 2103      685F7374 
 2103      61747573 
 2103      00
 2104              	.LASF35:
 2105 02d2 436F756E 		.ascii	"CounterObjectKindType\000"
 2105      7465724F 
 2105      626A6563 
 2105      744B696E 
 2105      64547970 
 2106              	.LASF10:
 2107 02e8 45455F55 		.ascii	"EE_UINT8\000"
 2107      494E5438 
 2107      00
 2108              	.LASF24:
 2109 02f1 436F756E 		.ascii	"CounterType\000"
 2109      74657254 
 2109      79706500 
 2110              	.LASF100:
 2111 02fd 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 2111      6F5F636F 
 2111      756E7465 
 2111      725F6F62 
 2111      6A656374 
 2112              	.LASF19:
 2113 0316 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 2113      5950455F 
 2113      52515F4D 
 2113      41534B00 
 2114              	.LASF50:
 2115 0326 50726554 		.ascii	"PreTaskHook_Context\000"
 2115      61736B48 
 2115      6F6F6B5F 
 2115      436F6E74 
 2115      65787400 
 2116              	.LASF48:
 2117 033a 4572726F 		.ascii	"ErrorHook_Context\000"
 2117      72486F6F 
 2117      6B5F436F 
 2117      6E746578 
 2117      7400
 2118              	.LASF108:
 2119 034c 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 2119      71327374 
 2119      6B5F6578 
 2119      6368616E 
 2119      676500
 2120              	.LASF85:
 2121 035f 73697A65 		.ascii	"sizetype\000"
 2121      74797065 
 2121      00
 2122              	.LASF49:
 2123 0368 50726F74 		.ascii	"ProtectionHook_Context\000"
 2123      65637469 
 2123      6F6E486F 
 2123      6F6B5F43 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 67


 2123      6F6E7465 
 2124              	.LASF9:
 2125 037f 6C6F6E67 		.ascii	"long double\000"
 2125      20646F75 
 2125      626C6500 
 2126              	.LASF105:
 2127 038b 45455F41 		.ascii	"EE_ApplicationMode\000"
 2127      70706C69 
 2127      63617469 
 2127      6F6E4D6F 
 2127      646500
 2128              	.LASF55:
 2129 039e 49646C65 		.ascii	"Idle_Context\000"
 2129      5F436F6E 
 2129      74657874 
 2129      00
 2130              	.LASF71:
 2131 03ab 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 2131      735F6D6F 
 2131      6E69746F 
 2131      72696E67 
 2131      5F746865 
 2132              	.LASF62:
 2133 03c6 7072696F 		.ascii	"prio\000"
 2133      00
 2134              	.LASF26:
 2135 03cb 7469636B 		.ascii	"ticksperbase\000"
 2135      73706572 
 2135      62617365 
 2135      00
 2136              	.LASF45:
 2137 03d8 4B65726E 		.ascii	"Kernel_Context\000"
 2137      656C5F43 
 2137      6F6E7465 
 2137      787400
 2138              	.LASF76:
 2139 03e7 63757272 		.ascii	"current\000"
 2139      656E7400 
 2140              	.LASF46:
 2141 03ef 5441534B 		.ascii	"TASK_Context\000"
 2141      5F436F6E 
 2141      74657874 
 2141      00
 2142              	.LASF80:
 2143 03fc 6E657874 		.ascii	"nexttask\000"
 2143      7461736B 
 2143      00
 2144              	.LASF39:
 2145 0405 75736564 		.ascii	"used\000"
 2145      00
 2146              	.LASF66:
 2147 040a 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 2147      6F5F6361 
 2147      6C6C5F50 
 2147      6F737454 
 2147      61736B48 
 2148              	.LASF92:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 68


 2149 0422 45455F73 		.ascii	"EE_sys_ceiling\000"
 2149      79735F63 
 2149      65696C69 
 2149      6E6700
 2150              	.LASF43:
 2151 0431 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 2151      6F5F636F 
 2151      756E7465 
 2151      725F6F62 
 2151      6A656374 
 2152              	.LASF67:
 2153 044f 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 2153      6F5F6361 
 2153      6C6C5F50 
 2153      72655461 
 2153      736B486F 
 2154              	.LASF99:
 2155 0466 45455F63 		.ascii	"EE_counter_ROM\000"
 2155      6F756E74 
 2155      65725F52 
 2155      4F4D00
 2156              	.LASF111:
 2157 0475 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_ee_evwait.c\000"
 2157      72617465 
 2157      645F536F 
 2157      75726365 
 2157      5C50536F 
 2158              	.LASF12:
 2159 04a0 45455F55 		.ascii	"EE_UINT16\000"
 2159      494E5431 
 2159      3600
 2160              	.LASF33:
 2161 04aa 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 2161      43484544 
 2161      554C4554 
 2161      41424C45 
 2161      00
 2162              	.LASF57:
 2163 04bb 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 2163      6F727465 
 2163      785F6D78 
 2163      5F726573 
 2163      756D6549 
 2164              	.LASF1:
 2165 04d2 756E7369 		.ascii	"unsigned char\000"
 2165      676E6564 
 2165      20636861 
 2165      7200
 2166              	.LASF114:
 2167 04e0 45455F6F 		.ascii	"EE_oo_WaitEvent\000"
 2167      6F5F5761 
 2167      69744576 
 2167      656E7400 
 2168              	.LASF32:
 2169 04f0 45455F41 		.ascii	"EE_ALARM\000"
 2169      4C41524D 
 2169      00
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 69


 2170              	.LASF89:
 2171 04f9 45455F74 		.ascii	"EE_th_next\000"
 2171      685F6E65 
 2171      787400
 2172              	.LASF94:
 2173 0504 45455F74 		.ascii	"EE_th_event_active\000"
 2173      685F6576 
 2173      656E745F 
 2173      61637469 
 2173      766500
 2174              	.LASF2:
 2175 0517 73686F72 		.ascii	"short int\000"
 2175      7420696E 
 2175      7400
 2176              	.LASF95:
 2177 0521 45455F74 		.ascii	"EE_th_event_waitmask\000"
 2177      685F6576 
 2177      656E745F 
 2177      77616974 
 2177      6D61736B 
 2178              	.LASF82:
 2179 0536 666C6167 		.ascii	"flag\000"
 2179      00
 2180              	.LASF28:
 2181 053b 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 2181      6F5F636F 
 2181      756E7465 
 2181      725F524F 
 2181      4D5F7479 
 2182              	.LASF110:
 2183 0552 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2183      43313120 
 2183      352E342E 
 2183      31203230 
 2183      31363036 
 2184 0585 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2184      20726576 
 2184      6973696F 
 2184      6E203233 
 2184      37373135 
 2185 05b8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2185      66756E63 
 2185      74696F6E 
 2185      2D736563 
 2185      74696F6E 
 2186              	.LASF79:
 2187 05e0 45455F6F 		.ascii	"EE_oo_reschedule_on_block\000"
 2187      6F5F7265 
 2187      73636865 
 2187      64756C65 
 2187      5F6F6E5F 
 2188              	.LASF74:
 2189 05fa 45455F6F 		.ascii	"EE_oo_prepare_to_block\000"
 2189      6F5F7072 
 2189      65706172 
 2189      655F746F 
 2189      5F626C6F 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 70


 2190              	.LASF59:
 2191 0611 45455F61 		.ascii	"EE_as_set_execution_context\000"
 2191      735F7365 
 2191      745F6578 
 2191      65637574 
 2191      696F6E5F 
 2192              	.LASF93:
 2193 062d 45455F72 		.ascii	"EE_rq_bitmask\000"
 2193      715F6269 
 2193      746D6173 
 2193      6B00
 2194              	.LASF30:
 2195 063b 66697273 		.ascii	"first\000"
 2195      7400
 2196              	.LASF112:
 2197 0641 433A5C55 		.ascii	"C:\\Users\\zakis\\Documents\\EAA\\RTE_Gaspedal_Watc"
 2197      73657273 
 2197      5C7A616B 
 2197      69735C44 
 2197      6F63756D 
 2198 066f 68646F67 		.ascii	"hdog\\LabOne\\Gaspedal_Watchdog.cydsn\000"
 2198      5C4C6162 
 2198      4F6E655C 
 2198      47617370 
 2198      6564616C 
 2199              	.LASF52:
 2200 0693 53746172 		.ascii	"StartupHook_Context\000"
 2200      74757048 
 2200      6F6F6B5F 
 2200      436F6E74 
 2200      65787400 
 2201              	.LASF69:
 2202 06a7 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 2202      5254495F 
 2202      7365745F 
 2202      74685F65 
 2202      715F6469 
 2203              	.LASF56:
 2204 06c7 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 2204      59504543 
 2204      4F4E5445 
 2204      585400
 2205              	.LASF101:
 2206 06d6 45455F63 		.ascii	"EE_counter_RAM\000"
 2206      6F756E74 
 2206      65725F52 
 2206      414D00
 2207              	.LASF36:
 2208 06e5 73706563 		.ascii	"spec_id\000"
 2208      5F696400 
 2209              	.LASF61:
 2210 06ed 696E6465 		.ascii	"index\000"
 2210      7800
 2211              	.LASF60:
 2212 06f3 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 2212      5254495F 
 2212      7365745F 
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 71


 2212      74685F70 
 2212      72696F72 
 2213              	.LASF115:
 2214 070b 4D61736B 		.ascii	"Mask\000"
 2214      00
 2215              	.LASF73:
 2216 0710 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 2216      616C5F62 
 2216      6567696E 
 2216      5F6E6573 
 2216      7465645F 
 2217              	.LASF75:
 2218 072e 69737461 		.ascii	"istat\000"
 2218      7400
 2219              	.LASF58:
 2220 0734 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 2220      5254495F 
 2220      7365745F 
 2220      73657276 
 2220      69636500 
 2221              	.LASF65:
 2222 0748 45455F68 		.ascii	"EE_hal_stkchange\000"
 2222      616C5F73 
 2222      746B6368 
 2222      616E6765 
 2222      00
 2223              	.LASF70:
 2224 0759 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 2224      616C5F67 
 2224      65745F49 
 2224      52515F6E 
 2224      65737469 
 2225              	.LASF90:
 2226 0776 45455F74 		.ascii	"EE_th_rnact\000"
 2226      685F726E 
 2226      61637400 
 2227              	.LASF87:
 2228 0782 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 2228      685F6469 
 2228      73706174 
 2228      63685F70 
 2228      72696F00 
 2229              	.LASF83:
 2230 0796 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2230      52515F6E 
 2230      65737469 
 2230      6E675F6C 
 2230      6576656C 
 2231              	.LASF14:
 2232 07ab 45455F55 		.ascii	"EE_UINT32\000"
 2232      494E5433 
 2232      3200
 2233              	.LASF13:
 2234 07b5 45455F49 		.ascii	"EE_INT32\000"
 2234      4E543332 
 2234      00
 2235              	.LASF81:
ARM GAS  C:\Users\zakis\AppData\Local\Temp\cc1g2H8m.s 			page 72


 2236 07be 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 2236      6F5F7275 
 2236      6E5F6E65 
 2236      78745F74 
 2236      61736B00 
 2237              	.LASF40:
 2238 07d2 636E7463 		.ascii	"cntcycle\000"
 2238      79636C65 
 2238      00
 2239              	.LASF23:
 2240 07db 436F756E 		.ascii	"CounterObjectType\000"
 2240      7465724F 
 2240      626A6563 
 2240      74547970 
 2240      6500
 2241              	.LASF53:
 2242 07ed 53687574 		.ascii	"ShutdownHook_Context\000"
 2242      646F776E 
 2242      486F6F6B 
 2242      5F436F6E 
 2242      74657874 
 2243              	.LASF86:
 2244 0802 45455F74 		.ascii	"EE_th_ready_prio\000"
 2244      685F7265 
 2244      6164795F 
 2244      7072696F 
 2244      00
 2245              	.LASF113:
 2246 0813 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 2246      6F727465 
 2246      785F6D78 
 2246      5F737573 
 2246      70656E64 
 2247              	.LASF97:
 2248 082b 45455F74 		.ascii	"EE_th_is_extended\000"
 2248      685F6973 
 2248      5F657874 
 2248      656E6465 
 2248      6400
 2249              	.LASF16:
 2250 083d 45455F46 		.ascii	"EE_FREG\000"
 2250      52454700 
 2251              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
